<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:og="http://ogp.me/ns#" xmlns:fb="https://www.facebook.com/2008/fbml" lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","errorBeacon":"bam.nr-data.net","licenseKey":"8502746af5","applicationID":"2210607","transactionName":"c1hZF0tfVQkEExo0A1NcGCR8ZBkTUEwPExFVRWgKXR1JFw4LUAUWHQ1HEVZaXAYVPkYKF1c=","queueTime":1,"applicationTime":1165,"agent":""}</script>
<script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"VwYAVVFXGwECVVFUBwY="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(19),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,s.now(),!0])}catch(u){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,s.now()])}var i=t("handle"),a=t(20),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(p){"stack"in p&&(t(12),t(11),"addEventListener"in window&&t(6),s.xhrWrappable&&t(13),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,s.now(),!0])})},{}],3:[function(t,e,n){t("loader").features.ins=!0},{}],4:[function(t,e,n){function r(){C++,M=y.hash,this[u]=b.now()}function o(){C--,y.hash!==M&&i(0,!0);var t=b.now();this[l]=~~this[l]+t-this[u],this[d]=t}function i(t,e){E.emit("newURL",[""+y,e])}function a(t,e){t.on(e,function(){this[e]=b.now()})}var c="-start",s="-end",f="-body",u="fn"+c,d="fn"+s,p="cb"+c,h="cb"+s,l="jsTime",m="fetch",v="addEventListener",w=window,y=w.location,b=t("loader");if(w[v]&&b.xhrWrappable){var g=t(9),x=t(10),E=t(8),O=t(6),R=t(12),P=t(7),T=t(13),S=t("ee"),N=S.get("tracer");t(14),b.features.spa=!0;var M,j=w[v],C=0;S.on(u,r),S.on(p,r),S.on(d,o),S.on(h,o),S.buffer([u,d,"xhr-done","xhr-resolved"]),O.buffer([u]),R.buffer(["setTimeout"+s,"clearTimeout"+c,u]),T.buffer([u,"new-xhr","send-xhr"+c]),P.buffer([m+c,m+"-done",m+f+c,m+f+s]),E.buffer(["newURL"]),g.buffer([u]),x.buffer(["propagate",p,h,"executor-err","resolve"+c]),N.buffer([u,"no-"+u]),a(T,"send-xhr"+c),a(S,"xhr-resolved"),a(S,"xhr-done"),a(P,m+c),a(P,m+"-done"),E.on("pushState-end",i),E.on("replaceState-end",i),j("hashchange",i,!0),j("load",i,!0),j("popstate",function(){i(0,C>1)},!0)}},{}],5:[function(t,e,n){function r(t){}if(window.performance&&window.performance.timing&&window.performance.getEntriesByType){var o=t("ee"),i=t("handle"),a=t(12),c=t(11),s="learResourceTimings",f="addEventListener",u="resourcetimingbufferfull",d="bstResource",p="resource",h="-start",l="-end",m="fn"+h,v="fn"+l,w="bstTimer",y="pushState",b=t("loader");b.features.stn=!0,t(8);var g=NREUM.o.EV;o.on(m,function(t,e){var n=t[0];n instanceof g&&(this.bstStart=b.now())}),o.on(v,function(t,e){var n=t[0];n instanceof g&&i("bst",[n,e,this.bstStart,b.now()])}),a.on(m,function(t,e,n){this.bstStart=b.now(),this.bstType=n}),a.on(v,function(t,e){i(w,[e,this.bstStart,b.now(),this.bstType])}),c.on(m,function(){this.bstStart=b.now()}),c.on(v,function(t,e){i(w,[e,this.bstStart,b.now(),"requestAnimationFrame"])}),o.on(y+h,function(t){this.time=b.now(),this.startPath=location.pathname+location.hash}),o.on(y+l,function(t){i("bstHist",[location.pathname+location.hash,this.startPath,this.time])}),f in window.performance&&(window.performance["c"+s]?window.performance[f](u,function(t){i(d,[window.performance.getEntriesByType(p)]),window.performance["c"+s]()},!1):window.performance[f]("webkit"+u,function(t){i(d,[window.performance.getEntriesByType(p)]),window.performance["webkitC"+s]()},!1)),document[f]("scroll",r,{passive:!0}),document[f]("keypress",r,!1),document[f]("click",r,!1)}},{}],6:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(22)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],7:[function(t,e,n){function r(t,e,n){var r=t[e];"function"==typeof r&&(t[e]=function(){var t=r.apply(this,arguments);return o.emit(n+"start",arguments,t),t.then(function(e){return o.emit(n+"end",[null,e],t),e},function(e){throw o.emit(n+"end",[e],t),e})})}var o=t("ee").get("fetch"),i=t(19);e.exports=o;var a=window,c="fetch-",s=c+"body-",f=["arrayBuffer","blob","json","text","formData"],u=a.Request,d=a.Response,p=a.fetch,h="prototype";u&&d&&p&&(i(f,function(t,e){r(u[h],e,s),r(d[h],e,s)}),r(a,"fetch",c),o.on(c+"end",function(t,e){var n=this;e?e.clone().arrayBuffer().then(function(t){n.rxSize=t.byteLength,o.emit(c+"done",[null,e],n)}):o.emit(c+"done",[t],n)}))},{}],8:[function(t,e,n){var r=t("ee").get("history"),o=t(22)(r);e.exports=r,o.inPlace(window.history,["pushState","replaceState"],"-")},{}],9:[function(t,e,n){var r=t("ee").get("mutation"),o=t(22)(r),i=NREUM.o.MO;e.exports=r,i&&(window.MutationObserver=function(t){return this instanceof i?new i(o(t,"fn-")):i.apply(this,arguments)},MutationObserver.prototype=i.prototype)},{}],10:[function(t,e,n){function r(t){var e=a.context(),n=c(t,"executor-",e),r=new f(n);return a.context(r).getCtx=function(){return e},a.emit("new-promise",[r,e],e),r}function o(t,e){return e}var i=t(22),a=t("ee").get("promise"),c=i(a),s=t(19),f=NREUM.o.PR;e.exports=a,f&&(window.Promise=r,["all","race"].forEach(function(t){var e=f[t];f[t]=function(n){function r(t){return function(){a.emit("propagate",[null,!o],i),o=o||!t}}var o=!1;s(n,function(e,n){Promise.resolve(n).then(r("all"===t),r(!1))});var i=e.apply(f,arguments),c=f.resolve(i);return c}}),["resolve","reject"].forEach(function(t){var e=f[t];f[t]=function(t){var n=e.apply(f,arguments);return t!==n&&a.emit("propagate",[t,!0],n),n}}),f.prototype["catch"]=function(t){return this.then(null,t)},f.prototype=Object.create(f.prototype,{constructor:{value:r}}),s(Object.getOwnPropertyNames(f),function(t,e){try{r[e]=f[e]}catch(n){}}),a.on("executor-start",function(t){t[0]=c(t[0],"resolve-",this),t[1]=c(t[1],"resolve-",this)}),a.on("executor-err",function(t,e,n){t[1](n)}),c.inPlace(f.prototype,["then"],"then-",o),a.on("then-start",function(t,e){this.promise=e,t[0]=c(t[0],"cb-",this),t[1]=c(t[1],"cb-",this)}),a.on("then-end",function(t,e,n){this.nextPromise=n;var r=this.promise;a.emit("propagate",[r,!0],n)}),a.on("cb-end",function(t,e,n){a.emit("propagate",[n,!0],this.nextPromise)}),a.on("propagate",function(t,e,n){this.getCtx&&!e||(this.getCtx=function(){if(t instanceof Promise)var e=a.context(t);return e&&e.getCtx?e.getCtx():this})}),r.toString=function(){return""+f})},{}],11:[function(t,e,n){var r=t("ee").get("raf"),o=t(22)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],12:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration=isNaN(t[1])?0:+t[1],t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(22)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],13:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,y,"fn-",c)}function i(t){b.push(t),l&&(x?x.then(a):v?v(a):(E=-E,O.data=E))}function a(){for(var t=0;t<b.length;t++)r([],b[t]);b.length&&(b=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(6);var f=t("ee"),u=f.get("xhr"),d=t(22)(u),p=NREUM.o,h=p.XHR,l=p.MO,m=p.PR,v=p.SI,w="readystatechange",y=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],b=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new h(t);try{u.emit("new-xhr",[e],e),e.addEventListener(w,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(h,g),g.prototype=h.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),l){var x=m&&m.resolve();if(!v&&!m){var E=1,O=document.createTextNode(E);new l(a).observe(O,{characterData:!0})}}else f.on("fn-end",function(t){t[0]&&t[0].type===w||a()})},{}],14:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=a.now()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var s=t.getResponseHeader("X-NewRelic-App-Data");s&&(e.cat=s.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return l(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(15),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,p=t("id"),h=t(18),l=t(17),m=window.XMLHttpRequest;a.features.xhr=!0,t(13),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,h&&(h>34||h<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=l(r);i&&(n.txSize=i)}this.startTime=a.now(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var c=0;c<d;c++)e.addEventListener(u[c],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+p(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+p(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=a.now()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[a.now()-this.xhrCbStart,this.onload,e],e)})}},{}],15:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],16:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[f.now()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(19),c=t(20),s=t("ee").get("tracer"),f=t("loader"),u=NREUM;"undefined"==typeof window.newrelic&&(newrelic=u);var d=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],p="api-",h=p+"ixn-";a(d,function(t,e){u[e]=o(p+e,!0,"api")}),u.addPageAction=o(p+"addPageAction",!0),u.setCurrentRouteName=o(p+"routeName",!0),e.exports=newrelic,u.interaction=function(){return(new r).get()};var l=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(h+"tracer",[f.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[f.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[f.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){l[e]=o(h+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,f.now()])}},{}],17:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],18:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],19:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],20:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],21:[function(t,e,n){e.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],22:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(20),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){p([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o,e)}catch(a){p([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){p([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function p(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o,i){if(!p.aborted||i){t&&t(n,r,o);for(var a=e(o),c=l(n),s=c.length,f=0;f<s;f++)c[f].apply(a,r);var d=u[y[n]];return d&&d.push([b,n,r,a]),a}}function h(t,e){w[t]=l(t).concat(e)}function l(t){return w[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",y[n]=e,e in u||(u[e]=[])})}var w={},y={},b={on:h,emit:n,get:m,listeners:l,context:e,buffer:v,abort:a,aborted:!1};return b}function i(){return new r}function a(){(u.api||u.feature)&&(p.aborted=!0,u=p.backlog={})}var c="nr@context",s=t("gos"),f=t(19),u={},d={},p=e.exports=o();p.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!x++){var t=g.info=NREUM.info,e=p.getElementsByTagName("script")[0];if(setTimeout(u.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return u.abort();f(y,function(e,n){t[e]||(t[e]=n)}),s("mark",["onload",a()+g.offset],null,"api");var n=p.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===p.readyState&&i()}function i(){s("mark",["domContent",a()+g.offset],null,"api")}function a(){return E.exists&&performance.now?Math.round(performance.now()):(c=Math.max((new Date).getTime(),c))-g.offset}var c=(new Date).getTime(),s=t("handle"),f=t(19),u=t("ee"),d=window,p=d.document,h="addEventListener",l="attachEvent",m=d.XMLHttpRequest,v=m&&m.prototype;NREUM.o={ST:setTimeout,SI:d.setImmediate,CT:clearTimeout,XHR:m,REQ:d.Request,EV:d.Event,PR:d.Promise,MO:d.MutationObserver};var w=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-spa-1044.min.js"},b=m&&v&&v[h]&&!/CriOS/.test(navigator.userAgent),g=e.exports={offset:c,now:a,origin:w,features:{},xhrWrappable:b};t(16),p[h]?(p[h]("DOMContentLoaded",i,!1),d[h]("load",r,!1)):(p[l]("onreadystatechange",o),d[l]("onload",r)),s("mark",["firstbyte",c],null,"api");var x=0,E=t(21)},{}]},{},["loader",2,14,5,3,4]);</script>
    <title>Jammming | Codecademy</title>
    <link href="https://production.cdmycdn.com/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    
    <link href="/blog.rss" rel="alternate" title="Codecademy Blog" type="application/rss+xml" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta content="authenticity_token" name="csrf-param" />
<meta content="aXZwEkkbp+4tkfMOv95Rq8hG3FMtCYVEMbpZWtY4xFc=" name="csrf-token" />
    <meta name="description" content="Codecademy is the easiest way to learn how to code. It's interactive, fun, and you can do it with your friends."/>
    <meta name="keywords" content="codecademy,coding,code,programming"/>


    
<meta property="fb:app_id" content="212500508799908"/>
<meta property="fb:profile_id" content="codecademy"/>
<meta property="og:url" content="https://www.codecademy.com/courses/jammming/projects/jammming-prj?program_content_id=99de9e14fd731714946353537565b0fb&amp;program_id=8e14e567a49f749ac096378873934906"/>
<meta property="og:site_name" content="Codecademy" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Jammming" />
<meta property="og:description" content="Codecademy is the easiest way to learn how to code. It&#x27;s interactive, fun, and you can do it with your friends." />
<meta property="og:rich_attachment" content="true" />
<meta property="og:image" content="https://production.cdmycdn.com/assets/logo-codecademy-social-abfd8450722d675bddedde689f8af624.png" />
    
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@codecademy" />
<meta name="twitter:title" content="Jammming" />
<meta name="twitter:description" content="Codecademy is the easiest way to learn how to code. It&#x27;s interactive, fun, and you can do it with your friends." />
<meta name="twitter:image" content="https://production.cdmycdn.com/assets/logo-codecademy-social-abfd8450722d675bddedde689f8af624.png" />

    
    <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />

    


    
    








    <link href="https://production.cdmycdn.com/assets/rebrand/core-f1bec3f5c3f004d2f73e2d2904952011.css" media="screen" rel="stylesheet" type="text/css" />
      <link href="https://production.cdmycdn.com/assets/rebrand/controllers/practice/projects/show-52104424509b8e5498f42914d12b4cbe.css" media="screen" rel="stylesheet" type="text/css" />


        <link href="//production.cdmycdn.com/webpack/vendor-5e99776cdbd659614084.css" media="screen" rel="stylesheet" type="text/css" />
    <link href="//production.cdmycdn.com/webpack/platform-5e99776cdbd659614084.css" media="screen" rel="stylesheet" type="text/css" />


    <script type="text/javascript">
//<![CDATA[
var CCDATA = CCDATA || {};
//]]>
</script>

    
<script id="CCDATA" type="text/javascript">
//<![CDATA[

  var CCDATA = CCDATA || {};  CCDATA['env'] = "production"; CCDATA['request_host'] = "www.codecademy.com"; CCDATA['request_path'] = "/courses/jammming/projects/jammming-prj?program_content_id=99de9e14fd731714946353537565b0fb\u0026program_id=8e14e567a49f749ac096378873934906"; CCDATA['asset_host'] = "production.cdmycdn.com"; CCDATA['webpack_public_path'] = "//production.cdmycdn.com/webpack/"; CCDATA['assets_compiled'] = true; CCDATA['pollForNotifications'] = false; CCDATA['locale'] = "en"; CCDATA['API_HOST'] = "/api"; CCDATA['authenticity_token'] = "aXZwEkkbp+4tkfMOv95Rq8hG3FMtCYVEMbpZWtY4xFc="; CCDATA['available_locales'] = "en|pt|et-EE|fa|en-US|ko|zh|fr|ja|ky-KG|en-GB|fr-FR|es-AR|pt-BR|ar|de|es|ru"; CCDATA['login_requires_captcha'] = false; CCDATA['register_requires_captcha'] = false; CCDATA['secureSandboxIndexPath'] = "/assets/secure/index-e15cd898fa5906b22c02b7fc4cf8e509.html"; CCDATA['workshop_url'] = "workshop.codecademy.com:443"; CCDATA['workshop_protocol'] = "wss"; CCDATA['current_user'] = {"_id":"584e56145821227c78000376","created_at":"2016-12-12T02:47:32-05:00","url":"http://www.codecademy.com/users/rubysolver57951","username":"rubySolver57951","handle":"Ruud Naastepad","email":"r.naastepad@hetassink.nl","name":"Ruud Naastepad","profile_image_url":"https://www.gravatar.com/avatar/dabd1ef362ea0704a56edbf80eb518aa?s=140\u0026d=retro","points":353,"total_points":353,"roles":[],"ui_tour_elements":{"course-navigator":true,"discovery-checklist":true},"deleted":false,"authentication_token":"dsN9PznTPyg-vzw7zKhm","pro":true,"pro_ads":false,"experiments":{},"location":{"geo_continent":"Europe","geo_country":"NL","geo_city":"Zaandam","geo_postal":"1504","geo_region":"NH"}};
  CCDATA.secureSandboxIndexPath = 'https://production.cdmycdn.com/assets/secure/index-e15cd898fa5906b22c02b7fc4cf8e509.html';

//]]>
</script>

    
    <script type="text/javascript">
//<![CDATA[

      (function(){var w=window;var ic=w.Intercom;if(typeof ic==="function"){ic('reattach_activator');ic('update',intercomSettings);}else{var d=document;var i=function(){i.c(arguments)};i.q=[];i.c=function(args){i.q.push(args)};w.Intercom=i;function l(){var s=d.createElement('script');s.type='text/javascript';s.async=true;s.src='https://widget.intercom.io/widget/wft4jxth';var x=d.getElementsByTagName('script')[0];x.parentNode.insertBefore(s,x);}if(w.attachEvent){w.attachEvent('onload',l);}else{w.addEventListener('load',l,false);}}})()

      window.Intercom('boot', {
        app_id: 'wft4jxth',
        user_id: '584e56145821227c78000376'
      });

      window.IntercomUpdate = function(traits) {
        var defaultTraits = { user_id: '584e56145821227c78000376' };
        for (var attrname in traits) { defaultTraits[attrname] = traits[attrname]; }
        window.Intercom('update', defaultTraits);
      };

      window.IntercomUpdate({"name":"Ruud Naastepad","email":"r.naastepad@hetassink.nl","firstName":"Ruud","lastName":"Naastepad","birthday":"{}","avatar":"https://www.gravatar.com/avatar/dabd1ef362ea0704a56edbf80eb518aa?s=140\u0026d=retro","username":"rubySolver57951","updated_at":"2017-08-17 10:05:41 -0400","last_activity_at":"2017-08-22 18:00:43 +0000","num_points":"353","num_exercises":"353","num_achievements":"113","deleted":"false","phone_number":"","path":"","created_at":"2016-12-12 02:47:32 -0500","id":"584e56145821227c78000376","anonymous_user":"false","anonymous_user_id":"584e55f6dd1edeb1540001bd","teacher":"false","student":"false","admin":"false","advisor":"false","pro":"true","pro_signup_cohort":"07_10_2017","github_student":"false","unsubscribed":"false","verified_email":"false","suspicious_email":"false","geo_continent":"Europe","geo_country":"NL","geo_city":"Zaandam","geo_postal":"1504","geo_region":"NH","advisor_report":"https://www.codecademy.com/advisor/reports/584e56145821227c78000376","utm_source":"","utm_medium":"","utm_term":"","utm_campaign":"","utm_content":""});

//]]>
</script>  <script src="//production.cdmycdn.com/webpack/head-5e99776cdbd659614084.js" type="text/javascript"></script>
    <script type="text/javascript">
//<![CDATA[

      !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","group","track","ready","alias","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement("script");e.type="text/javascript";e.async=!0;e.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION="3.0.1";
        analytics.load("awTEDiBEJ130cCHG1N74clKHGM3FLNzQ");
        analytics.page();
      }}();

//]]>
</script>    <script type="text/javascript">
      /* <![CDATA[ */
      var google_conversion_id = 861461659;
      var google_custom_params = window.google_tag_params;
      var google_remarketing_only = true;
      /* ]]> */
    </script>
    <style>
      /* inline to stay with Google script that creates iframe */
      iframe[name="google_conversion_frame"] {
        display: none !important;
        height: 0 !important;
        width: 0 !important;
        line-height: 0 !important;
        font-size: 0 !important;
        float: left;
      }
    </style>
    <!-- Hotjar Tracking Code for www.codecademy.com -->
    <script type="text/javascript">
//<![CDATA[

        (function(h,o,t,j,a,r){
            h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
            h._hjSettings={hjid:451715,hjsv:5};
            a=o.getElementsByTagName('head')[0];
            r=o.createElement('script');r.async=1;
            r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
            a.appendChild(r);
        })(window,document,'//static.hotjar.com/c/hotjar-','.js?sv=');

//]]>
</script>

    
  </head>

  <body browser="windows">

    
  <div id="fb-root"></div>
  <script type="text/javascript">
//<![CDATA[

    var FB_APP_ID = '212500508799908';
    window.fbAsyncInit = function() {
      var FB = (window.FB || undefined);
      if (FB) {
        FB.init({
          appId      : FB_APP_ID
        , channelUrl : window.root_url+'/channel.html'
        , status     : true
        , cookie     : true
        , xfbml      : true
        , version    : 'v2.8'
        });
      }
    };
    <!-- Load Facebook SDK for JavaScript -->
    (function(d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) return;
      js = d.createElement(s); js.id = id;
      js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.8";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));

//]]>
</script>
    <!-- Facebook Pixel Code -->
    <script>
     !function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
     n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
     n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
     t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
     document,'script','//connect.facebook.net/en_US/fbevents.js');

     fbq('init', '1036078779778355');
     fbq('track', "PageView");</script>
    <noscript><img height="1" width="1" style="display:none"
     src="https://www.facebook.com/tr?id=1036078779778355&ev=PageView&noscript=1"
     /></noscript>
    <!-- End Facebook Pixel Code -->


      <div class="react-root" data-react-class="PlatformRouter" data-react-props="{&quot;proData&quot;:{&quot;paths&quot;:{&quot;join_pro&quot;:&quot;/pro/membership&quot;},&quot;assets&quot;:{&quot;wave_img&quot;:&quot;/assets/pro/wave-pro-83cfd917d7d15d5ea2713e995253d292.svg&quot;},&quot;experiment_values&quot;:{&quot;header&quot;:&quot;Not sure where to start?&quot;,&quot;body&quot;:&quot;Let us set you up for success with a personalized learning path.&quot;,&quot;hint&quot;:&quot;Get live, fast support from Codecademy Advisors when you get stuck.&quot;,&quot;utm_content&quot;:&quot;wheretostart&quot;,&quot;image_url&quot;:&quot;https://s3.amazonaws.com/codecademy-images/pro/variants-path.svg&quot;,&quot;utm_campaign&quot;:&quot;dashboard_release&quot;,&quot;utm_source&quot;:&quot;codecademy_platform&quot;},&quot;utm_params&quot;:{&quot;utm_content&quot;:&quot;wheretostart&quot;,&quot;utm_campaign&quot;:&quot;dashboard_release&quot;,&quot;utm_source&quot;:&quot;codecademy_platform&quot;}},&quot;routesData&quot;:{&quot;sitePaths&quot;:{&quot;pro_my_path_ad_path_wrapper&quot;:&quot;/pro/membership?utm_campaign=nov_2016\u0026utm_medium=internal_ad_le_dropdown\u0026utm_source=codecademy_platform&quot;,&quot;pro_my_path_ad_header_wrapper&quot;:&quot;/pro/membership?utm_campaign=dashboard_release\u0026utm_medium=internal_ad_header_upgrade\u0026utm_source=codecademy_platform&quot;}},&quot;platformPage&quot;:{&quot;hasButterbar&quot;:null,&quot;profileImage&quot;:&quot;https://www.gravatar.com/avatar/dabd1ef362ea0704a56edbf80eb518aa?s=140\u0026d=retro&quot;,&quot;revision&quot;:null,&quot;collaborationSession&quot;:{&quot;userId&quot;:&quot;584e56145821227c78000376&quot;},&quot;modals&quot;:{&quot;signUp&quot;:&quot;\u003Cdiv  data-react-class=\&quot;LoginRegistrationForms\&quot; data-react-props=\&quot;{\u0026quot;isLogin\u0026quot;:false,\u0026quot;errors\u0026quot;:null,\u0026quot;redirectUrl\u0026quot;:\u0026quot;/courses/jammming/projects/jammming-prj?program_content_id=99de9e14fd731714946353537565b0fb\\u0026program_id=8e14e567a49f749ac096378873934906\u0026quot;,\u0026quot;isTeacherSignup\u0026quot;:null,\u0026quot;resource\u0026quot;:{\u0026quot;_id\u0026quot;:\u0026quot;599c714be12813597b0001e1\u0026quot;,\u0026quot;about_me\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;anonymous_user_id\u0026quot;:null,\u0026quot;api_keys\u0026quot;:{},\u0026quot;authentication_token\u0026quot;:null,\u0026quot;birthday\u0026quot;:{},\u0026quot;codecademy_env\u0026quot;:\u0026quot;production\u0026quot;,\u0026quot;content_completed\u0026quot;:{},\u0026quot;content_started\u0026quot;:{},\u0026quot;created_at\u0026quot;:null,\u0026quot;current_curriculum_id\u0026quot;:null,\u0026quot;current_groups\u0026quot;:{},\u0026quot;curricula_completed\u0026quot;:null,\u0026quot;curricula_ids\u0026quot;:[],\u0026quot;customized_path\u0026quot;:false,\u0026quot;deleted\u0026quot;:false,\u0026quot;email\u0026quot;:null,\u0026quot;emails_sent\u0026quot;:{},\u0026quot;employment\u0026quot;:null,\u0026quot;experience\u0026quot;:[],\u0026quot;fb_pa\u0026quot;:null,\u0026quot;ga_utma\u0026quot;:null,\u0026quot;gender\u0026quot;:null,\u0026quot;goals\u0026quot;:[],\u0026quot;handles\u0026quot;:{\u0026quot;twitter\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;linked_in\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;github\u0026quot;:\u0026quot;\u0026quot;},\u0026quot;has_been_oriented\u0026quot;:false,\u0026quot;invitation_token\u0026quot;:null,\u0026quot;is_forum_banned\u0026quot;:false,\u0026quot;is_spammer\u0026quot;:false,\u0026quot;last_activity_at\u0026quot;:null,\u0026quot;location\u0026quot;:null,\u0026quot;lost_activity\u0026quot;:false,\u0026quot;m_cc\u0026quot;:true,\u0026quot;m_cf\u0026quot;:true,\u0026quot;m_duan\u0026quot;:3,\u0026quot;m_fqa\u0026quot;:true,\u0026quot;m_gn\u0026quot;:true,\u0026quot;m_hn\u0026quot;:true,\u0026quot;m_nl\u0026quot;:true,\u0026quot;mail_inactivity\u0026quot;:true,\u0026quot;mail_silence\u0026quot;:false,\u0026quot;mail_streak_many_days\u0026quot;:true,\u0026quot;mail_welcome\u0026quot;:true,\u0026quot;motivation\u0026quot;:{},\u0026quot;name\u0026quot;:null,\u0026quot;notifiable_settings\u0026quot;:{},\u0026quot;phone_number\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;points_hash\u0026quot;:{\u0026quot;points_today\u0026quot;:0,\u0026quot;best_points_day\u0026quot;:0},\u0026quot;preferred_locale\u0026quot;:null,\u0026quot;quiz_trial\u0026quot;:null,\u0026quot;read\u0026quot;:{},\u0026quot;referer\u0026quot;:null,\u0026quot;roles\u0026quot;:{},\u0026quot;sched_send_info\u0026quot;:{},\u0026quot;setting_flags\u0026quot;:{},\u0026quot;staff_description\u0026quot;:null,\u0026quot;staff_start_date\u0026quot;:null,\u0026quot;staff_title\u0026quot;:null,\u0026quot;streak_hash\u0026quot;:{\u0026quot;count\u0026quot;:0,\u0026quot;max_count\u0026quot;:0},\u0026quot;t_c\u0026quot;:0,\u0026quot;t_e\u0026quot;:0,\u0026quot;t_p\u0026quot;:0,\u0026quot;t_s\u0026quot;:0,\u0026quot;timezone_offset\u0026quot;:null,\u0026quot;ui_tour_elements\u0026quot;:{},\u0026quot;updated_at\u0026quot;:null,\u0026quot;username\u0026quot;:null,\u0026quot;username_lowercase\u0026quot;:null,\u0026quot;visibility\u0026quot;:\u0026quot;public\u0026quot;,\u0026quot;website\u0026quot;:null,\u0026quot;profile_image_url\u0026quot;:\u0026quot;icons/default_user.png\u0026quot;,\u0026quot;handle\u0026quot;:\u0026quot;anonymous\u0026quot;,\u0026quot;total_points\u0026quot;:0},\u0026quot;paths\u0026quot;:{\u0026quot;tos\u0026quot;:\u0026quot;/terms\u0026quot;,\u0026quot;forgot_password\u0026quot;:\u0026quot;/secret/new\u0026quot;,\u0026quot;oauth_google\u0026quot;:\u0026quot;/users/auth/google_oauth2?signin=true\u0026quot;,\u0026quot;oauth_facebook\u0026quot;:\u0026quot;/users/auth/facebook?signin=true\u0026quot;,\u0026quot;oauth_twitter\u0026quot;:\u0026quot;/users/auth/twitter?signin=true\u0026quot;,\u0026quot;oauth_github\u0026quot;:\u0026quot;/users/auth/github?signin=true\u0026quot;,\u0026quot;action_register\u0026quot;:\u0026quot;/register\u0026quot;,\u0026quot;action_session\u0026quot;:\u0026quot;/login\u0026quot;,\u0026quot;new_session\u0026quot;:\u0026quot;/login?redirect=%2Fcourses%2Fjammming%2Fprojects%2Fjammming-prj%3Fprogram_content_id%3D99de9e14fd731714946353537565b0fb%26program_id%3D8e14e567a49f749ac096378873934906\u0026quot;,\u0026quot;new_registration\u0026quot;:\u0026quot;/register?redirect=%2Fcourses%2Fjammming%2Fprojects%2Fjammming-prj%3Fprogram_content_id%3D99de9e14fd731714946353537565b0fb%26program_id%3D8e14e567a49f749ac096378873934906\u0026quot;},\u0026quot;activeProviders\u0026quot;:[\u0026quot;google_oauth2\u0026quot;,\u0026quot;facebook\u0026quot;,\u0026quot;twitter\u0026quot;,\u0026quot;github\u0026quot;],\u0026quot;translations\u0026quot;:{\u0026quot;heading_sign_up\u0026quot;:\u0026quot;Sign up and start coding in seconds.\u0026quot;,\u0026quot;heading_log_in\u0026quot;:\u0026quot;Log in and continue coding.\u0026quot;,\u0026quot;last_step_signup\u0026quot;:\u0026quot;One thing before you start\u0026quot;,\u0026quot;password_placeholder\u0026quot;:\u0026quot;Password\u0026quot;,\u0026quot;forgot_password\u0026quot;:\u0026quot;Forgot your password?\u0026quot;,\u0026quot;email_placeholder\u0026quot;:\u0026quot;Email\u0026quot;,\u0026quot;username_placeholder\u0026quot;:\u0026quot;Username\u0026quot;,\u0026quot;email_or_username_placeholder\u0026quot;:\u0026quot;Email or username\u0026quot;,\u0026quot;sign_up_with\u0026quot;:\u0026quot;Sign up with\u0026quot;,\u0026quot;sign_in_with\u0026quot;:\u0026quot;Log in with\u0026quot;,\u0026quot;remember_me\u0026quot;:\u0026quot;Remember me\u0026quot;,\u0026quot;log_in\u0026quot;:\u0026quot;Log in\u0026quot;,\u0026quot;sign_up\u0026quot;:\u0026quot;Sign up\u0026quot;,\u0026quot;get_started\u0026quot;:\u0026quot;Get started!\u0026quot;,\u0026quot;by_signing_up_you_agree\u0026quot;:\u0026quot;By signing up, you agree to our\u0026quot;,\u0026quot;tos\u0026quot;:\u0026quot;Terms of Service\u0026quot;,\u0026quot;country_placeholder\u0026quot;:\u0026quot;Country\u0026quot;,\u0026quot;org_placeholder\u0026quot;:\u0026quot;School / Organization\u0026quot;},\u0026quot;proData\u0026quot;:{\u0026quot;paths\u0026quot;:{\u0026quot;join_pro\u0026quot;:\u0026quot;/pro/membership\u0026quot;},\u0026quot;assets\u0026quot;:{\u0026quot;wave_img\u0026quot;:\u0026quot;/assets/pro/wave-pro-83cfd917d7d15d5ea2713e995253d292.svg\u0026quot;},\u0026quot;experiment_values\u0026quot;:{\u0026quot;header\u0026quot;:\u0026quot;Not sure where to start?\u0026quot;,\u0026quot;body\u0026quot;:\u0026quot;Let us set you up for success with a personalized learning path.\u0026quot;,\u0026quot;hint\u0026quot;:\u0026quot;Get live, fast support from Codecademy Advisors when you get stuck.\u0026quot;,\u0026quot;utm_content\u0026quot;:\u0026quot;wheretostart\u0026quot;,\u0026quot;image_url\u0026quot;:\u0026quot;https://s3.amazonaws.com/codecademy-images/pro/variants-path.svg\u0026quot;,\u0026quot;utm_campaign\u0026quot;:\u0026quot;dashboard_release\u0026quot;,\u0026quot;utm_source\u0026quot;:\u0026quot;codecademy_platform\u0026quot;},\u0026quot;utm_params\u0026quot;:{\u0026quot;utm_content\u0026quot;:\u0026quot;wheretostart\u0026quot;,\u0026quot;utm_campaign\u0026quot;:\u0026quot;dashboard_release\u0026quot;,\u0026quot;utm_source\u0026quot;:\u0026quot;codecademy_platform\u0026quot;}},\u0026quot;routesData\u0026quot;:{\u0026quot;sitePaths\u0026quot;:{\u0026quot;pro_my_path_ad_path_wrapper\u0026quot;:\u0026quot;/pro/membership?utm_campaign=nov_2016\\u0026utm_medium=internal_ad_le_dropdown\\u0026utm_source=codecademy_platform\u0026quot;,\u0026quot;pro_my_path_ad_header_wrapper\u0026quot;:\u0026quot;/pro/membership?utm_campaign=dashboard_release\\u0026utm_medium=internal_ad_header_upgrade\\u0026utm_source=codecademy_platform\u0026quot;}},\u0026quot;prerender\u0026quot;:{\u0026quot;duration\u0026quot;:14.750566999999998,\u0026quot;hostname\u0026quot;:\u0026quot;app-089\\n\u0026quot;}}\&quot;\u003E\u003Cdiv class=\&quot;login-registration-forms\&quot; data-reactroot=\&quot;\&quot; data-reactid=\&quot;1\&quot; data-react-checksum=\&quot;975383135\&quot;\u003E\u003Cdiv class=\&quot;login-registration-form\&quot; data-reactid=\&quot;2\&quot;\u003E\u003Ch4 class=\&quot;registration-form__title\&quot; data-reactid=\&quot;3\&quot;\u003ESign up and start coding in seconds.\u003C/h4\u003E\u003Cform accept-charset=\&quot;UTF-8\&quot; action=\&quot;/register\&quot; autocomplete=\&quot;off\&quot; class=\&quot;new_user\&quot; id=\&quot;new-user\&quot; method=\&quot;post\&quot; data-reactid=\&quot;4\&quot;\u003E\u003Cinput type=\&quot;hidden\&quot; name=\&quot;authenticity_token\&quot; value=\&quot;aXZwEkkbp+4tkfMOv95Rq8hG3FMtCYVEMbpZWtY4xFc=\&quot; data-reactid=\&quot;5\&quot;/\u003E\u003Cinput type=\&quot;hidden\&quot; name=\&quot;redirect\&quot; value=\&quot;/courses/jammming/projects/jammming-prj?program_content_id=99de9e14fd731714946353537565b0fb\u0026amp;program_id=8e14e567a49f749ac096378873934906\u0026amp;pro-cta-modal=1\&quot; data-reactid=\&quot;6\&quot;/\u003E\u003Cdiv class=\&quot;form-field\&quot; data-reactid=\&quot;7\&quot;\u003E\u003Cdiv class=\&quot;field field--text\&quot; data-reactid=\&quot;8\&quot;\u003E\u003Cinput type=\&quot;text\&quot; class=\&quot;\&quot; name=\&quot;user[email]\&quot; id=\&quot;user_email\&quot; placeholder=\&quot;Email\&quot; value=\&quot;\&quot; autocomplete=\&quot;off\&quot; data-reactid=\&quot;9\&quot;/\u003E\u003C/div\u003E\u003Cdiv class=\&quot;form-field__status-icon new-cc-icon icon-ex\&quot; data-reactid=\&quot;10\&quot;\u003E\u003C/div\u003E\u003C/div\u003E\u003Cdiv class=\&quot;form-field\&quot; data-reactid=\&quot;11\&quot;\u003E\u003Cdiv class=\&quot;field field--text\&quot; data-reactid=\&quot;12\&quot;\u003E\u003Cinput type=\&quot;password\&quot; class=\&quot;\&quot; name=\&quot;user[password]\&quot; id=\&quot;user_password\&quot; placeholder=\&quot;Password\&quot; value=\&quot;\&quot; autocomplete=\&quot;off\&quot; data-reactid=\&quot;13\&quot;/\u003E\u003C/div\u003E\u003Cdiv class=\&quot;form-field__status-icon new-cc-icon icon-ex\&quot; data-reactid=\&quot;14\&quot;\u003E\u003C/div\u003E\u003C/div\u003E\u003Cdiv class=\&quot;form-field\&quot; data-reactid=\&quot;15\&quot;\u003E\u003Cdiv class=\&quot;field field--text\&quot; data-reactid=\&quot;16\&quot;\u003E\u003Cinput type=\&quot;text\&quot; class=\&quot;\&quot; name=\&quot;user[username]\&quot; id=\&quot;user_username\&quot; placeholder=\&quot;Username\&quot; value=\&quot;\&quot; autocomplete=\&quot;off\&quot; data-reactid=\&quot;17\&quot;/\u003E\u003C/div\u003E\u003Cdiv class=\&quot;form-field__status-icon new-cc-icon icon-ex\&quot; data-reactid=\&quot;18\&quot;\u003E\u003C/div\u003E\u003C/div\u003E\u003C!-- react-empty: 19 --\u003E\u003Cdiv class=\&quot;field-errors\&quot; data-reactid=\&quot;20\&quot;\u003E\u003C/div\u003E\u003Cinput type=\&quot;submit\&quot; class=\&quot;button button--large button--secondary button--fill-space\&quot; id=\&quot;user_signup_submit_2\&quot; name=\&quot;commit\&quot; value=\&quot;Sign up\&quot; data-reactid=\&quot;21\&quot;/\u003E\u003C/form\u003E\u003Cdiv class=\&quot;social-registration-buttons\&quot; data-reactid=\&quot;22\&quot;\u003E\u003Ca class=\&quot;button button--alternate button--with-icon\&quot; href=\&quot;/users/auth/google_oauth2?signin=true\&quot; data-reactid=\&quot;23\&quot;\u003E\u003Cimg src=\&quot;https://s3.amazonaws.com/codecademy-images/logos/google.svg\&quot; class=\&quot;new-cc-icon\&quot; data-reactid=\&quot;24\&quot;/\u003E\u003C!-- react-text: 25 --\u003E Sign up with Google\u003C!-- /react-text --\u003E\u003C/a\u003E\u003Ca class=\&quot;button button--alternate button--with-icon\&quot; href=\&quot;/users/auth/facebook?signin=true\&quot; data-reactid=\&quot;26\&quot;\u003E\u003Cimg src=\&quot;https://s3.amazonaws.com/codecademy-images/logos/facebook.svg\&quot; class=\&quot;new-cc-icon\&quot; data-reactid=\&quot;27\&quot;/\u003E\u003C!-- react-text: 28 --\u003E Sign up with Facebook\u003C!-- /react-text --\u003E\u003C/a\u003E\u003Ca class=\&quot;button button--alternate button--with-icon\&quot; href=\&quot;/users/auth/github?signin=true\&quot; data-reactid=\&quot;29\&quot;\u003E\u003Cimg src=\&quot;https://s3.amazonaws.com/codecademy-images/logos/github.svg\&quot; class=\&quot;new-cc-icon\&quot; data-reactid=\&quot;30\&quot;/\u003E\u003C!-- react-text: 31 --\u003E Sign up with GitHub\u003C!-- /react-text --\u003E\u003C/a\u003E\u003C/div\u003E\u003Cdiv class=\&quot;tos\&quot; data-reactid=\&quot;32\&quot;\u003E\u003Csmall data-reactid=\&quot;33\&quot;\u003E\u003C!-- react-text: 34 --\u003EBy signing up, you agree to our\u003C!-- /react-text --\u003E\u003C!-- react-text: 35 --\u003E \u003C!-- /react-text --\u003E\u003Ca href=\&quot;/terms\&quot; data-reactid=\&quot;36\&quot;\u003ETerms of Service\u003C/a\u003E\u003C!-- react-text: 37 --\u003E.\u003C!-- /react-text --\u003E\u003C/small\u003E\u003C/div\u003E\u003C/div\u003E\u003C/div\u003E\u003C/div\u003E\n\n&quot;,&quot;signIn&quot;:&quot;\u003Cdiv  data-react-class=\&quot;LoginRegistrationForms\&quot; data-react-props=\&quot;{\u0026quot;isLogin\u0026quot;:true,\u0026quot;errors\u0026quot;:null,\u0026quot;redirectUrl\u0026quot;:\u0026quot;/courses/jammming/projects/jammming-prj?program_content_id=99de9e14fd731714946353537565b0fb\\u0026program_id=8e14e567a49f749ac096378873934906\u0026quot;,\u0026quot;isTeacherSignup\u0026quot;:null,\u0026quot;resource\u0026quot;:{\u0026quot;_id\u0026quot;:\u0026quot;599c714be12813597b0001e2\u0026quot;,\u0026quot;about_me\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;anonymous_user_id\u0026quot;:null,\u0026quot;api_keys\u0026quot;:{},\u0026quot;authentication_token\u0026quot;:null,\u0026quot;birthday\u0026quot;:{},\u0026quot;codecademy_env\u0026quot;:\u0026quot;production\u0026quot;,\u0026quot;content_completed\u0026quot;:{},\u0026quot;content_started\u0026quot;:{},\u0026quot;created_at\u0026quot;:null,\u0026quot;current_curriculum_id\u0026quot;:null,\u0026quot;current_groups\u0026quot;:{},\u0026quot;curricula_completed\u0026quot;:null,\u0026quot;curricula_ids\u0026quot;:[],\u0026quot;customized_path\u0026quot;:false,\u0026quot;deleted\u0026quot;:false,\u0026quot;email\u0026quot;:null,\u0026quot;emails_sent\u0026quot;:{},\u0026quot;employment\u0026quot;:null,\u0026quot;experience\u0026quot;:[],\u0026quot;fb_pa\u0026quot;:null,\u0026quot;ga_utma\u0026quot;:null,\u0026quot;gender\u0026quot;:null,\u0026quot;goals\u0026quot;:[],\u0026quot;handles\u0026quot;:{\u0026quot;twitter\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;linked_in\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;github\u0026quot;:\u0026quot;\u0026quot;},\u0026quot;has_been_oriented\u0026quot;:false,\u0026quot;invitation_token\u0026quot;:null,\u0026quot;is_forum_banned\u0026quot;:false,\u0026quot;is_spammer\u0026quot;:false,\u0026quot;last_activity_at\u0026quot;:null,\u0026quot;location\u0026quot;:null,\u0026quot;lost_activity\u0026quot;:false,\u0026quot;m_cc\u0026quot;:true,\u0026quot;m_cf\u0026quot;:true,\u0026quot;m_duan\u0026quot;:3,\u0026quot;m_fqa\u0026quot;:true,\u0026quot;m_gn\u0026quot;:true,\u0026quot;m_hn\u0026quot;:true,\u0026quot;m_nl\u0026quot;:true,\u0026quot;mail_inactivity\u0026quot;:true,\u0026quot;mail_silence\u0026quot;:false,\u0026quot;mail_streak_many_days\u0026quot;:true,\u0026quot;mail_welcome\u0026quot;:true,\u0026quot;motivation\u0026quot;:{},\u0026quot;name\u0026quot;:null,\u0026quot;notifiable_settings\u0026quot;:{},\u0026quot;phone_number\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;points_hash\u0026quot;:{\u0026quot;points_today\u0026quot;:0,\u0026quot;best_points_day\u0026quot;:0},\u0026quot;preferred_locale\u0026quot;:null,\u0026quot;quiz_trial\u0026quot;:null,\u0026quot;read\u0026quot;:{},\u0026quot;referer\u0026quot;:null,\u0026quot;roles\u0026quot;:{},\u0026quot;sched_send_info\u0026quot;:{},\u0026quot;setting_flags\u0026quot;:{},\u0026quot;staff_description\u0026quot;:null,\u0026quot;staff_start_date\u0026quot;:null,\u0026quot;staff_title\u0026quot;:null,\u0026quot;streak_hash\u0026quot;:{\u0026quot;count\u0026quot;:0,\u0026quot;max_count\u0026quot;:0},\u0026quot;t_c\u0026quot;:0,\u0026quot;t_e\u0026quot;:0,\u0026quot;t_p\u0026quot;:0,\u0026quot;t_s\u0026quot;:0,\u0026quot;timezone_offset\u0026quot;:null,\u0026quot;ui_tour_elements\u0026quot;:{},\u0026quot;updated_at\u0026quot;:null,\u0026quot;username\u0026quot;:null,\u0026quot;username_lowercase\u0026quot;:null,\u0026quot;visibility\u0026quot;:\u0026quot;public\u0026quot;,\u0026quot;website\u0026quot;:null,\u0026quot;profile_image_url\u0026quot;:\u0026quot;icons/default_user.png\u0026quot;,\u0026quot;handle\u0026quot;:\u0026quot;anonymous\u0026quot;,\u0026quot;total_points\u0026quot;:0},\u0026quot;paths\u0026quot;:{\u0026quot;tos\u0026quot;:\u0026quot;/terms\u0026quot;,\u0026quot;forgot_password\u0026quot;:\u0026quot;/secret/new\u0026quot;,\u0026quot;oauth_google\u0026quot;:\u0026quot;/users/auth/google_oauth2?signin=true\u0026quot;,\u0026quot;oauth_facebook\u0026quot;:\u0026quot;/users/auth/facebook?signin=true\u0026quot;,\u0026quot;oauth_twitter\u0026quot;:\u0026quot;/users/auth/twitter?signin=true\u0026quot;,\u0026quot;oauth_github\u0026quot;:\u0026quot;/users/auth/github?signin=true\u0026quot;,\u0026quot;action_register\u0026quot;:\u0026quot;/register\u0026quot;,\u0026quot;action_session\u0026quot;:\u0026quot;/login\u0026quot;,\u0026quot;new_session\u0026quot;:\u0026quot;/login?redirect=%2Fcourses%2Fjammming%2Fprojects%2Fjammming-prj%3Fprogram_content_id%3D99de9e14fd731714946353537565b0fb%26program_id%3D8e14e567a49f749ac096378873934906\u0026quot;,\u0026quot;new_registration\u0026quot;:\u0026quot;/register?redirect=%2Fcourses%2Fjammming%2Fprojects%2Fjammming-prj%3Fprogram_content_id%3D99de9e14fd731714946353537565b0fb%26program_id%3D8e14e567a49f749ac096378873934906\u0026quot;},\u0026quot;activeProviders\u0026quot;:[\u0026quot;google_oauth2\u0026quot;,\u0026quot;facebook\u0026quot;,\u0026quot;twitter\u0026quot;,\u0026quot;github\u0026quot;],\u0026quot;translations\u0026quot;:{\u0026quot;heading_sign_up\u0026quot;:\u0026quot;Sign up and start coding in seconds.\u0026quot;,\u0026quot;heading_log_in\u0026quot;:\u0026quot;Log in and continue coding.\u0026quot;,\u0026quot;last_step_signup\u0026quot;:\u0026quot;One thing before you start\u0026quot;,\u0026quot;password_placeholder\u0026quot;:\u0026quot;Password\u0026quot;,\u0026quot;forgot_password\u0026quot;:\u0026quot;Forgot your password?\u0026quot;,\u0026quot;email_placeholder\u0026quot;:\u0026quot;Email\u0026quot;,\u0026quot;username_placeholder\u0026quot;:\u0026quot;Username\u0026quot;,\u0026quot;email_or_username_placeholder\u0026quot;:\u0026quot;Email or username\u0026quot;,\u0026quot;sign_up_with\u0026quot;:\u0026quot;Sign up with\u0026quot;,\u0026quot;sign_in_with\u0026quot;:\u0026quot;Log in with\u0026quot;,\u0026quot;remember_me\u0026quot;:\u0026quot;Remember me\u0026quot;,\u0026quot;log_in\u0026quot;:\u0026quot;Log in\u0026quot;,\u0026quot;sign_up\u0026quot;:\u0026quot;Sign up\u0026quot;,\u0026quot;get_started\u0026quot;:\u0026quot;Get started!\u0026quot;,\u0026quot;by_signing_up_you_agree\u0026quot;:\u0026quot;By signing up, you agree to our\u0026quot;,\u0026quot;tos\u0026quot;:\u0026quot;Terms of Service\u0026quot;,\u0026quot;country_placeholder\u0026quot;:\u0026quot;Country\u0026quot;,\u0026quot;org_placeholder\u0026quot;:\u0026quot;School / Organization\u0026quot;},\u0026quot;proData\u0026quot;:{\u0026quot;paths\u0026quot;:{\u0026quot;join_pro\u0026quot;:\u0026quot;/pro/membership\u0026quot;},\u0026quot;assets\u0026quot;:{\u0026quot;wave_img\u0026quot;:\u0026quot;/assets/pro/wave-pro-83cfd917d7d15d5ea2713e995253d292.svg\u0026quot;},\u0026quot;experiment_values\u0026quot;:{\u0026quot;header\u0026quot;:\u0026quot;Not sure where to start?\u0026quot;,\u0026quot;body\u0026quot;:\u0026quot;Let us set you up for success with a personalized learning path.\u0026quot;,\u0026quot;hint\u0026quot;:\u0026quot;Get live, fast support from Codecademy Advisors when you get stuck.\u0026quot;,\u0026quot;utm_content\u0026quot;:\u0026quot;wheretostart\u0026quot;,\u0026quot;image_url\u0026quot;:\u0026quot;https://s3.amazonaws.com/codecademy-images/pro/variants-path.svg\u0026quot;,\u0026quot;utm_campaign\u0026quot;:\u0026quot;dashboard_release\u0026quot;,\u0026quot;utm_source\u0026quot;:\u0026quot;codecademy_platform\u0026quot;},\u0026quot;utm_params\u0026quot;:{\u0026quot;utm_content\u0026quot;:\u0026quot;wheretostart\u0026quot;,\u0026quot;utm_campaign\u0026quot;:\u0026quot;dashboard_release\u0026quot;,\u0026quot;utm_source\u0026quot;:\u0026quot;codecademy_platform\u0026quot;}},\u0026quot;routesData\u0026quot;:{\u0026quot;sitePaths\u0026quot;:{\u0026quot;pro_my_path_ad_path_wrapper\u0026quot;:\u0026quot;/pro/membership?utm_campaign=nov_2016\\u0026utm_medium=internal_ad_le_dropdown\\u0026utm_source=codecademy_platform\u0026quot;,\u0026quot;pro_my_path_ad_header_wrapper\u0026quot;:\u0026quot;/pro/membership?utm_campaign=dashboard_release\\u0026utm_medium=internal_ad_header_upgrade\\u0026utm_source=codecademy_platform\u0026quot;}},\u0026quot;prerender\u0026quot;:{\u0026quot;duration\u0026quot;:11.020278999999999,\u0026quot;hostname\u0026quot;:\u0026quot;app-089\\n\u0026quot;}}\&quot;\u003E\u003Cdiv class=\&quot;login-registration-forms\&quot; data-reactroot=\&quot;\&quot; data-reactid=\&quot;1\&quot; data-react-checksum=\&quot;-1211041742\&quot;\u003E\u003Cdiv class=\&quot;login-registration-form\&quot; data-reactid=\&quot;2\&quot;\u003E\u003Ch4 class=\&quot;login-form__title\&quot; data-reactid=\&quot;3\&quot;\u003ELog in and continue coding.\u003C/h4\u003E\u003Cform accept-charset=\&quot;UTF-8\&quot; action=\&quot;/login\&quot; autocomplete=\&quot;off\&quot; class=\&quot;new_user\&quot; id=\&quot;new-user\&quot; method=\&quot;post\&quot; data-reactid=\&quot;4\&quot;\u003E\u003Cinput type=\&quot;hidden\&quot; name=\&quot;authenticity_token\&quot; value=\&quot;aXZwEkkbp+4tkfMOv95Rq8hG3FMtCYVEMbpZWtY4xFc=\&quot; data-reactid=\&quot;5\&quot;/\u003E\u003Cinput type=\&quot;hidden\&quot; name=\&quot;redirect\&quot; value=\&quot;/courses/jammming/projects/jammming-prj?program_content_id=99de9e14fd731714946353537565b0fb\u0026amp;program_id=8e14e567a49f749ac096378873934906\&quot; data-reactid=\&quot;6\&quot;/\u003E\u003Cdiv class=\&quot;form-field\&quot; data-reactid=\&quot;7\&quot;\u003E\u003Cdiv class=\&quot;field field--text\&quot; data-reactid=\&quot;8\&quot;\u003E\u003Cinput type=\&quot;text\&quot; class=\&quot;\&quot; name=\&quot;user[login]\&quot; id=\&quot;user_login\&quot; placeholder=\&quot;Email or username\&quot; value=\&quot;\&quot; autocomplete=\&quot;off\&quot; data-reactid=\&quot;9\&quot;/\u003E\u003C/div\u003E\u003C/div\u003E\u003Cdiv class=\&quot;form-field\&quot; data-reactid=\&quot;10\&quot;\u003E\u003Cdiv class=\&quot;field field--text\&quot; data-reactid=\&quot;11\&quot;\u003E\u003Cinput type=\&quot;password\&quot; class=\&quot;\&quot; name=\&quot;user[password]\&quot; id=\&quot;user_password\&quot; placeholder=\&quot;Password\&quot; value=\&quot;\&quot; autocomplete=\&quot;off\&quot; data-reactid=\&quot;12\&quot;/\u003E\u003C/div\u003E\u003C/div\u003E\u003C!-- react-empty: 13 --\u003E\u003Cdiv class=\&quot;field-errors\&quot; data-reactid=\&quot;14\&quot;\u003E\u003C/div\u003E\u003Cinput type=\&quot;submit\&quot; class=\&quot;button button--large button--secondary button--fill-space\&quot; id=\&quot;user_submit\&quot; name=\&quot;commit\&quot; value=\&quot;Log in\&quot; data-reactid=\&quot;15\&quot;/\u003E\u003C/form\u003E\u003Cdiv class=\&quot;social-registration-buttons social-registration-links\&quot; data-reactid=\&quot;16\&quot;\u003E\u003Cspan data-reactid=\&quot;17\&quot;\u003E\u003C!-- react-text: 18 --\u003ELog in with\u003C!-- /react-text --\u003E\u003C!-- react-text: 19 --\u003E \u003C!-- /react-text --\u003E\u003C/span\u003E\u003Cspan data-reactid=\&quot;20\&quot;\u003E\u003Ca href=\&quot;/users/auth/google_oauth2?signin=true\&quot; data-reactid=\&quot;21\&quot;\u003EGoogle\u003C/a\u003E\u003Cspan data-reactid=\&quot;22\&quot;\u003E, \u003C/span\u003E\u003C/span\u003E\u003Cspan data-reactid=\&quot;23\&quot;\u003E\u003Ca href=\&quot;/users/auth/facebook?signin=true\&quot; data-reactid=\&quot;24\&quot;\u003EFacebook\u003C/a\u003E\u003Cspan data-reactid=\&quot;25\&quot;\u003E, \u003C/span\u003E\u003C/span\u003E\u003Cspan data-reactid=\&quot;26\&quot;\u003E\u003Ca href=\&quot;/users/auth/twitter?signin=true\&quot; data-reactid=\&quot;27\&quot;\u003ETwitter\u003C/a\u003E\u003Cspan data-reactid=\&quot;28\&quot;\u003E, or \u003C/span\u003E\u003C/span\u003E\u003Cspan data-reactid=\&quot;29\&quot;\u003E\u003Ca href=\&quot;/users/auth/github?signin=true\&quot; data-reactid=\&quot;30\&quot;\u003EGitHub\u003C/a\u003E\u003Cspan data-reactid=\&quot;31\&quot;\u003E\u003C/span\u003E\u003C/span\u003E\u003C/div\u003E\u003Ca href=\&quot;/secret/new\&quot; class=\&quot;forgot-password\&quot; data-reactid=\&quot;32\&quot;\u003EForgot your password?\u003C/a\u003E\u003C/div\u003E\u003C/div\u003E\u003C/div\u003E\n\n&quot;},&quot;features&quot;:{},&quot;exitPaths&quot;:{&quot;logo&quot;:&quot;/&quot;,&quot;back&quot;:&quot;/learn/jammming&quot;,&quot;title&quot;:&quot;Jammming&quot;},&quot;progress&quot;:{&quot;project_slug&quot;:&quot;jammming-prj&quot;,&quot;started&quot;:true,&quot;started_at&quot;:&quot;2017-08-14T14:22:19-04:00&quot;,&quot;completed&quot;:false,&quot;completed_at&quot;:null,&quot;checklist&quot;:{},&quot;status&quot;:1},&quot;course&quot;:{&quot;created_at&quot;:null,&quot;description&quot;:&quot;This course contains one capstone project for Build Front-End Web Applications.  &quot;,&quot;filepath&quot;:&quot;new/content/courses/en/jammming/jammming.en.yml&quot;,&quot;id&quot;:&quot;jammming_en_master&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;meta&quot;:{&quot;authors&quot;:[],&quot;tags&quot;:[],&quot;maintenance&quot;:false},&quot;node_type&quot;:&quot;course&quot;,&quot;revision&quot;:&quot;master&quot;,&quot;slug&quot;:&quot;jammming&quot;,&quot;title&quot;:&quot;Jammming&quot;,&quot;units&quot;:{&quot;jammming&quot;:{&quot;node_type&quot;:&quot;unit&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;jammming&quot;,&quot;title&quot;:&quot;Jammming&quot;,&quot;description&quot;:&quot;Placeholder&quot;,&quot;projects&quot;:{&quot;jammming-prj&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;uuid&quot;:&quot;01d6016dade212b09343a96fc984fdb9&quot;,&quot;slug&quot;:&quot;jammming-prj&quot;,&quot;title&quot;:&quot;Jammming&quot;,&quot;description&quot;:&quot;Build a React application that allows users to create custom Spotify playlists.&quot;,&quot;objective&quot;:&quot;In this project, you will build a React web application called \u003Ca href=\&quot;http://jammming.s3-website-us-east-1.amazonaws.com/\&quot; target=\&quot;_blank\&quot;\u003EJammming\u003C/a\u003E.  You will use your knowledge of React components, passing state, and requests with the Spotify API to build a website that allows users to search the Spotify library, create a custom playlist, then save it to their Spotify account.\n\nWe&#x27;ve broken the Jammming project into 13 sections, called _assessments_. Each assessment contains a descriptive header with an introductory step, followed by a set of steps that guide you to the outcome. The first step of each assessment will explain the assessment&#x27;s goal and provide a brief overview of how we&#x27;ll accomplish it. Before you start the second step, try to plan how you would complete the assessment. As you finish the rest of the steps, reflect on how your solution compares to ours.\n\nAlthough the project may seem daunting, we&#x27;ll be with you every step of the way. Whether you&#x27;re completing assessments without the additional steps or banging your head against the wall trying to understand a hint, always use best practices and reflect on your growth. \n\nGood luck!\n\n\n&quot;,&quot;meta&quot;:{&quot;authors&quot;:[]},&quot;self_assessments&quot;:[{&quot;heading&quot;:&quot;Create a React Application&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;0_0_0.43937410251798026&quot;,&quot;text&quot;:&quot;By the end of this assessment, you will be ready to start building your website. This section walks you through the process of setting up the directory structure and adding CSS presets.\n\nTo achieve this, you will create a boilerplate react app, remove unused files, and add **reset.css**, Google font links, and an updated favicon.\n\n- Google fonts \u0026mdash; \u003Ca href=\&quot;https://fonts.googleapis.com/css?family=Poppins:600\&quot; target=\&quot;_blank\&quot;\u003EPoppins\u003C/a\u003E and \u003Ca href=\&quot;https://fonts.googleapis.com/css?family=Work+Sans:300,500\&quot; target=\&quot;_blank\&quot;\u003EWork Sans\u003C/a\u003E\n- Updated \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/favicon.ico\&quot; target=\&quot;_blank\&quot;\u003Efavicon\u003C/a\u003E\n\n\n&quot;},{&quot;key&quot;:&quot;1_7_05529890831318895&quot;,&quot;text&quot;:&quot;Create a new React application in a directory called **Jammming**.\n&quot;,&quot;hint&quot;:&quot;Use `create-react-app` with the name of the folder you want to create.&quot;},{&quot;key&quot;:&quot;12_4_043907140694445124&quot;,&quot;text&quot;:&quot;In **index.html**, update the `\u003Ctitle\u003E` value to `Jammming`.&quot;},{&quot;key&quot;:&quot;1_7_08777633623987713&quot;,&quot;text&quot;:&quot;Remove **App.test.js** and **logo.svg** from the **src/** folder, as you will not use them in this project.\n\n\n&quot;},{&quot;key&quot;:&quot;1_7_02855278383031854&quot;,&quot;text&quot;:&quot;Add \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/static-html-css/reset.txt\&quot; target=\&quot;_blank\&quot;\u003Ereset.css\u003C/a\u003E to the **public/** directory and link to it in **index.html**.&quot;},{&quot;key&quot;:&quot;1_7_005816917101365071&quot;,&quot;text&quot;:&quot;Link to the following Google fonts in **index.html**: \n- \u003Ca href=\&quot;https://fonts.googleapis.com/css?family=Poppins:600\&quot; target=\&quot;_blank\&quot;\u003EPoppins\u003C/a\u003E \n- \u003Ca href=\&quot;https://fonts.googleapis.com/css?family=Work+Sans:300,500\&quot; target=\&quot;_blank\&quot;\u003EWork Sans\u003C/a\u003E\n&quot;,&quot;hint&quot;:&quot;Link the Google fonts using the `\u003Clink\u003E` tag.\n```js\n\u003Clink href=\&quot;https://fonts.googleapis.com/css?family=Poppins:600\&quot; rel=\&quot;stylesheet\&quot;\u003E\n\u003Clink href=\&quot;https://fonts.googleapis.com/css?family=Work+Sans:300,500\&quot; rel=\&quot;stylesheet\&quot;\u003E\n```&quot;},{&quot;key&quot;:&quot;1_7_06422280373350093&quot;,&quot;text&quot;:&quot;Update **favicon.ico** with \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/favicon.ico\&quot; target=\&quot;_blank\&quot;\u003Ethis image\u003C/a\u003E.&quot;}]},{&quot;heading&quot;:&quot;Create Static Components &quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;2_7_0.036389078956334364&quot;,&quot;text&quot;:&quot;In this assessment, you will create a JavaScript file and a CSS file for each of six components in the Jammming app. In the steps below, we will link to the raw HTML and CSS to help you write the JSX for each component. \n\nIn the HTML, we use comments to indicate where the JSX for one component renders another component. \n\nThe HTML and CSS for each of the six components are listed below:\n- **App** \u0026mdash; \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003EHTML\u003C/a\u003E and \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003ECSS\u003C/a\u003E\n- **SearchBar** \u0026mdash; \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003EHTML\u003C/a\u003E and \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003ECSS\u003C/a\u003E\n- **SearchResults** \u0026mdash; \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003EHTML\u003C/a\u003E and \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003ECSS\u003C/a\u003E\n- **Playlist** \u0026mdash; \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003EHTML\u003C/a\u003E and \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003ECSS\u003C/a\u003E\n- **TrackList** \u0026mdash; \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003EHTML\u003C/a\u003E and \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003ECSS\u003C/a\u003E\n- **Track** \u0026mdash; \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003EHTML\u003C/a\u003E and \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003ECSS\u003C/a\u003E&quot;},{&quot;key&quot;:&quot;2_7_099142849638919&quot;,&quot;text&quot;:&quot;Create a **src/Components** directory to hold the components.&quot;},{&quot;key&quot;:&quot;2_7_09868946418761309&quot;,&quot;text&quot;:&quot;Create a directory called **App/** in the **Components/** directory.\n\nAdd **App.js** and **App.css** to the **App/** folder and update the path in **index.js** accordingly. \n\nAdditionally add \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/background_photo_desktop.jpg\&quot; target=\&quot;_blank\&quot;\u003Ethis background image\u003C/a\u003E to the directory as well \u0026mdash; it is used by the CSS file.&quot;},{&quot;key&quot;:&quot;2_7_00466251048537214&quot;,&quot;text&quot;:&quot;Inside of the **App.js** `.render()` method, add a return statement with JSX that renders \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/app/Apphtml.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis HTML\u003C/a\u003E .\n\nFollow the guidelines below when you write the HTML (linked above) as JSX:\n* Change all class attributes to className.\n* Do not change the class values, as we will use them in a later step to add style.\n&quot;},{&quot;key&quot;:&quot;2_7_0010788121851599941&quot;,&quot;text&quot;:&quot;Use the comments in the HTML document from the last step to determine the components you need to import into **App.js**.\n\nNote, you will create a folder for each component. The JavaScript file and CSS files for each component will live in the component&#x27;s folder. The folder, JavaScript file, and CSS file will all have the same name.&quot;,&quot;hint&quot;:&quot;The comments indicate you need to import the following three components:\n* **Playlist**\n* **SearchBar**\n* **SearchResults**&quot;},{&quot;key&quot;:&quot;2_7_04931980154754503&quot;,&quot;text&quot;:&quot;Add \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/app/AppCss.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis CSS\u003C/a\u003E to the **App.css** file. \n\nImport **App.css** into **App.js**.\n\n&quot;},{&quot;key&quot;:&quot;2_7_06049839754906596&quot;,&quot;text&quot;:&quot;Create a **SearchBar/** directory in the **Components/** directory.\n\nInside of **SearchBar/**, add **SearchBar.js** and **SearchBar.css**.&quot;},{&quot;key&quot;:&quot;2_7_09474671562631751&quot;,&quot;text&quot;:&quot;Inside of **SearchBar.js** create a component called `SearchBar` with a `.render()` method that returns \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/searchbar/searchbarhtml.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis HTML\u003C/a\u003E.\n\nFollow the guidelines below when you write the HTML (linked above) as JSX:\n* Change all class attributes to className.\n* Do not change the class values, as we will use them in a later step to add style.\n\nUse the comments in the HTML document to determine if you need to import any components.\n\nExport the `SearchBar` component.\n&quot;,&quot;hint&quot;:&quot;Follow these steps to create the `SearchBar` component:\n* Import `React`\n* Create a `SearchBar` class that extends `React.Component`\n* Create a render method that returns the HTML linked above\n* You do not need to import any other components\n* Export `SearchBar`&quot;},{&quot;key&quot;:&quot;2_7_016021512912233749&quot;,&quot;text&quot;:&quot;Add \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/searchbar/searchbarCss.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis CSS\u003C/a\u003E to the **SearchBar.css** file. \n\nImport **SearchBar.css** into **SearchBar.js**.\n&quot;},{&quot;key&quot;:&quot;2_7_00829765934774862&quot;,&quot;text&quot;:&quot;Create a **SearchResults/** directory in the **Components/** directory.\n\nInside of **SearchResults/**, add **SearchResults.js** and **SearchResults.css**.&quot;},{&quot;key&quot;:&quot;2_7_06297090891517134&quot;,&quot;text&quot;:&quot;Inside of **SearchResults.js** create a component called `SearchResults` with a `.render()` method that returns \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/searchresults/searchresultsHtml.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis HTML\u003C/a\u003E.\n\nFollow the guidelines below when you write the HTML (linked above) as JSX:\n* Change all class attributes to className.\n* Do not change the class values, as we will use them in a later step to add style.\n\nUse the comments in the HTML document to determine if you need to import any components.\n\nExport the `SearchResults` component.&quot;,&quot;hint&quot;:&quot;Follow these steps to create the `SearchResults` component:\n* Import `React`\n* Create a `SearchResults` class that extends `React.Component`\n* Create a render method that returns the HTML linked above\n* Import `TrackList` \n* Export `SearchResults`&quot;},{&quot;key&quot;:&quot;2_7_0922730493467443&quot;,&quot;text&quot;:&quot;Add \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/searchresults/searchresultsCss.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis CSS\u003C/a\u003E to the **SearchResults.css** file. \n\nImport **SearchResults.css** into **SearchResults.js**.\n&quot;},{&quot;key&quot;:&quot;2_7_08457319834924237&quot;,&quot;text&quot;:&quot;Create a **Playlist/** directory in the **Components/** directory.\n\nInside of **Playlist/**, add **Playlist.js** and **Playlist.css**.&quot;},{&quot;key&quot;:&quot;2_7_02723359281999773&quot;,&quot;text&quot;:&quot;Inside of **Playlist.js** create a component called `Playlist` with a `.render()` method that returns \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/playlist/playlisthtml.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis HTML\u003C/a\u003E.\n\nFollow the guidelines below when you write the HTML (linked above) as JSX:\n* Change all class attributes to `className`.\n* Do not change the class values, as we will use them in a later step to add style.\n* Change the `value` property to `defaultValue` and set it equal to `{&#x27;New Playlist&#x27;}`\n\nUse the comments in the HTML document to determine if you need to import any components.\n\nExport the `Playlist` component&quot;,&quot;hint&quot;:&quot;Follow these steps to create the `Playlist` component:\n* Import `React`\n* Create a `Playlist` class that extends `React.Component`\n* Create a render method that returns the HTML linked above\n* Import `TrackList`\n* Export `Playlist`&quot;},{&quot;key&quot;:&quot;2_7_09064071064815336&quot;,&quot;text&quot;:&quot;Add \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/playlist/playlistCss.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis CSS\u003C/a\u003E to the **Playlist.css** file. \n\nImport **Playlist.css** into **Playlist.js**.\n&quot;},{&quot;key&quot;:&quot;2_7_018615658769680898&quot;,&quot;text&quot;:&quot;Create a **TrackList/** directory in the **Components/** directory.\n\nInside of **TrackList/**, add **TrackList.js** and **TrackList.css**.&quot;},{&quot;key&quot;:&quot;2_7_03788580053423254&quot;,&quot;text&quot;:&quot;Inside of **TrackList.js** create a component called `TrackList` with a `.render()` method that returns \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/tracklist/tracklistHtml.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis HTML\u003C/a\u003E.\n\nFollow the guidelines below when you write the HTML (linked above) as JSX:\n* Change all class attributes to `className`.\n* Do not modify the class values, as we will use them in a later step to add style.\n* For now, you will hard code three tracks. In a later assessment, we will replace the hard-coded values with tracks from Spotify.\n\nUse the comments in the HTML document to determine if you need to import any components.\n\nExport the `TrackList` component.&quot;,&quot;hint&quot;:&quot;Follow these steps to create the `TrackList` component:\n* Import `React`\n* Create a `TrackList` class that extends `React.Component`\n* Create a render method that returns the HTML linked above\n* Import `Track`\n* Export `TrackList`&quot;},{&quot;key&quot;:&quot;2_7_0011962068707145779&quot;,&quot;text&quot;:&quot;Add \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/tracklist/tracklistCss.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis CSS\u003C/a\u003E to the **TrackList.css** file. \n\nImport **TrackList.css** into **TrackList.js**.\n&quot;},{&quot;key&quot;:&quot;2_7_0242211728624387&quot;,&quot;text&quot;:&quot;Create a **Track/** directory in the **Components/** directory.\n\nInside of **Track/**, add **Track.js** and **Track.css**.&quot;},{&quot;key&quot;:&quot;2_7_08869364921125724&quot;,&quot;text&quot;:&quot;Inside of **Track.js** create a component called `Track` with a `.render()` method that returns \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/track/trackhtml.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis HTML\u003C/a\u003E.\n\nFollow the guidelines below when you write the HTML (linked above) as JSX:\n* Change all class attributes to `className`.\n* Do not change the class values, as we will use them in a later step to add style.\n* Create a method called `renderAction` that displays a `-` anchor tag if a passed down property is true, and a `+` anchor tag if the property is false. Set the class name to `Track-action`.\n\nUse the comments in the HTML document to determine if you need to import any components.\n\nExport the `Track` component.\n&quot;,&quot;hint&quot;:&quot;Follow these steps to create the `Track` component:\n* Import `React`\n* Create a `SearchBar` class that extends `React.Component`\n* Create a render method that returns the HTML linked above\n* You do not need to import any other components\n* Export `Track`&quot;},{&quot;key&quot;:&quot;2_7_049109606648417503&quot;,&quot;text&quot;:&quot;Add \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/track/trackCss.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis CSS\u003C/a\u003E to the **Track.css** file. \n\nImport **Track.css** into **Track.js**.\n&quot;}]},{&quot;heading&quot;:&quot;Pass Down Search Result and Render Result List&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;1_0_0.807763779225676&quot;,&quot;text&quot;:&quot;In this assessment, you will pass the state of a search results parameter through a series of components to render an array of tracks. \n\nWhen a user requests data from Spotify, the JSON response will include a set of song tracks. Each `track` will contain a field for `name`, `artist`, and `album`. For each track in the results list, your Jammming web app will display the song name, artist, and album.\n\nIn a later assessment, you will build a method that sets the state of the search results parameter to a response from the Spotify API.\n&quot;},{&quot;key&quot;:&quot;1_1_0.12345293561061488&quot;,&quot;text&quot;:&quot;Add a constructor function to the `App` component, and pull in `props` from the `React.Component` class.&quot;,&quot;hint&quot;:&quot;Inside of the `App` component in **App.js**, create a constructor method.\n\nPass `props` to the constructor function and use `super()` to call the parent constructor.&quot;},{&quot;key&quot;:&quot;1_2_0.7716511934849861&quot;,&quot;text&quot;:&quot;Inside of the App component, set a hard-coded initial value for `this.state.searchResults`.&quot;,&quot;hint&quot;:&quot;Inside of the `App` constructor, set `this.state` to an object with a property called `searchResults` set to an array of objects, each containing `name`, `artist`, and `album` properties.&quot;},{&quot;key&quot;:&quot;1_3_0.3744912881721443&quot;,&quot;text&quot;:&quot;Pass the state of the `App` component&#x27;s `searchResults` to the `SearchResults` component.\n\n\n\n&quot;,&quot;hint&quot;:&quot;Pass `this.state.searchResults` to the `SearchResults` component as an attribute called `searchResults`.&quot;},{&quot;key&quot;:&quot;1_4_0.9540120298790007&quot;,&quot;text&quot;:&quot;Pass the search results from the `SearchResults` component to the `TrackList` component.\n&quot;,&quot;hint&quot;:&quot;Inside the **SearchResults.js** `.render()` method, pass `this.props.searchResults` as an attribute called `tracks` in the `TrackList` component.\n\n&quot;},{&quot;key&quot;:&quot;1_5_0.2707319454146766&quot;,&quot;text&quot;:&quot;In the `TrackList` component, use the `.map()` method to render each track in the `tracks` property.\n\nSet the `key` attribute to `track.id`.&quot;,&quot;hint&quot;:&quot;Inside the `TrackList` component&#x27;s render method, use `.map()` on `this.props.tracks` to render each track in the list.\n\nThis will require you to pass the current `track` as an attribute called `track` to the `Track` component.&quot;},{&quot;key&quot;:&quot;1_6_0.5874847606573159&quot;,&quot;text&quot;:&quot;Render the track name, artist, and album. &quot;,&quot;hint&quot;:&quot;Use the following property calls to access the track&#x27;s name, artist, and album:\n* `this.props.track.name`\n* `this.props.track.artist`\n* `this.props.track.album`&quot;}]},{&quot;heading&quot;:&quot;Pass down Playlist to TrackList&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;3_0_08246175843012182&quot;,&quot;text&quot;:&quot;In this assessment, you will pass the state of a user&#x27;s custom playlist title and tracks from the App component down to components that render them.\n\nWhen a user adds songs from the search results list to their playlist, a method will update the state of a playlist parameter in **App.js**, and Jammming will render the song in the user&#x27;s playlist. \n\nIn a later assessment, you will write methods that add and remove songs from the playlist. You will also write a method that updates the playlist&#x27;s title.&quot;},{&quot;key&quot;:&quot;3_1_013966773219774598&quot;,&quot;text&quot;:&quot;Add hard-coded values for `playlistName` and `playlistTracks` to state in **App.js**.&quot;,&quot;hint&quot;:&quot;You can set `playlistName` to any string. \n\nThe `playlistTracks` value should be an array of objects, each containing `name`, `artist`, and `album` properties.&quot;},{&quot;key&quot;:&quot;3_2_05413931927672737&quot;,&quot;text&quot;:&quot;Pass the playlist name and tracks from the `App` component to the `Playlist` component.\n&quot;,&quot;hint&quot;:&quot;Inside the **App.js** `.render()` method, pass `this.state.playlistName` and `this.state.playlistTracks` as attributes called `playlistName` and `playlistTracks` in the `Playlist` component.&quot;},{&quot;key&quot;:&quot;3_5_003929103811191692&quot;,&quot;text&quot;:&quot;Pass the playlist tracks from the `Playlist` component to the `TrackList` component.&quot;,&quot;hint&quot;:&quot;Inside the **Playlist.js** `.render()` method, pass `this.props.playlistTracks` as an attribute called `tracks` in the `TrackList` component.&quot;}]},{&quot;heading&quot;:&quot;Add Tracks to a Playlist&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;5_0_049309060566672747&quot;,&quot;text&quot;:&quot;In this assessment, you will implement a process for adding a song from the search results track list to the user&#x27;s custom playlist. \n\nYou will add a method to **App.js** called `addTrack` that adds a song to the playlist state. The application passes the method through a series of components to `Track`. The user can trigger the `.addTrack()` method by clicking the `+` sign from the search results list.&quot;},{&quot;key&quot;:&quot;5_0_05740468514136594&quot;,&quot;text&quot;:&quot;In **App.js** create a method called `addTrack` with the following functionality:\n* Accepts a `track` argument\n* Use the playlist&#x27;s `id` property to check if the current song is in the `playlistTracks` state. \n* If the `id` is new, add the song to the end of the playlist.\n* Set the new state of the playlist\n\n\n&quot;},{&quot;key&quot;:&quot;5_0_05420029389000083&quot;,&quot;text&quot;:&quot;Bind the current value of `this` to `.addTrack()`.\n\nPass `.addTrack()` to the `SearchResults` component as an `onAdd` attribute.&quot;},{&quot;key&quot;:&quot;5_0_0066145027259358&quot;,&quot;text&quot;:&quot;Pass `onAdd` from the `SearchResults` component to the `TrackList` component.&quot;,&quot;hint&quot;:&quot;Inside the **SearchResults.js** `.render()` method, pass `this.props.onAdd` as an attribute called `onAdd` to the `TrackList` component.&quot;},{&quot;key&quot;:&quot;5_0_07494852136786674&quot;,&quot;text&quot;:&quot;Pass `onAdd` from the `TrackList` component to the `Track` component.&quot;,&quot;hint&quot;:&quot;Inside the **TrackList.js** `.render()` method, pass `this.props.onAdd` as an attribute called `onAdd` to the `Track` component.&quot;},{&quot;key&quot;:&quot;5_0_03475813561639507&quot;,&quot;text&quot;:&quot;Create an `.addTrack()` method in the `Track` component. Use it to add `this.props.track` to the playlist.&quot;,&quot;hint&quot;:&quot;Pass `this.props.track` to `this.props.onAdd`.&quot;},{&quot;key&quot;:&quot;5_0_03270644189469998&quot;,&quot;text&quot;:&quot;Add a constructor to the `Track` component. Call `super(props)` in the constructor method.\n\nBind `this.addTrack()` to the current value of `this` in the constructor method.\n\n\n&quot;},{&quot;key&quot;:&quot;5_0_06457437689144006&quot;,&quot;text&quot;:&quot;In the **Track.js**  `+` element, add an `onClick` property with the value set to `this.addTrack`.&quot;}]},{&quot;heading&quot;:&quot;Remove Tracks from a Playlist&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;5_0_07986471531847001&quot;,&quot;text&quot;:&quot;In this assessment, you will implement a process that removes a song from a user&#x27;s custom playlist when the user selects the `-` sign inside of a rendered track. \n\n&quot;},{&quot;key&quot;:&quot;5_1_06767590529664398&quot;,&quot;text&quot;:&quot;In **App.js** create a method called `removeTrack` with the following functionality:\n* Accepts a track argument\n* Uses the track&#x27;s `id` property to filter it out of `playlistTracks`\n* Sets the new state of the playlist\n&quot;},{&quot;key&quot;:&quot;5_2_022221579971693672&quot;,&quot;text&quot;:&quot;In the `App` constructor method, bind the current value of `this` to `.removeTrack()`.\n\nPass `.removeTrack()` to the `Playlist` component as an `onRemove` attribute.&quot;},{&quot;key&quot;:&quot;5_3_04712007627844308&quot;,&quot;text&quot;:&quot;Pass `onRemove` from the `Playlist` component to the `TrackList` component.&quot;,&quot;hint&quot;:&quot;Inside the **Playlist.js** `.render()` method, pass `this.props.onRemove` as an attribute called `onRemove` in the `TrackList` component.&quot;},{&quot;key&quot;:&quot;5_4_015151043632731231&quot;,&quot;text&quot;:&quot;Pass `onRemove` from the `TrackList` component to the `Track` component.&quot;,&quot;hint&quot;:&quot;Inside the **TrackList.js** `.render()` method, pass `this.props.onRemove` as an attribute called `onRemove` in the `Track` component.&quot;},{&quot;key&quot;:&quot;5_5_05534457281840954&quot;,&quot;text&quot;:&quot;Create a `.removeTrack()` method in the `Track` component. Use it to remove `this.props.track` from the playlist.&quot;,&quot;hint&quot;:&quot;Pass `this.props.track` to `this.props.onRemove`.&quot;},{&quot;key&quot;:&quot;5_6_06184378293714332&quot;,&quot;text&quot;:&quot;In **Track.js**, bind `this.addTrack()` to the current value of `this` in the constructor method.\n&quot;},{&quot;key&quot;:&quot;5_7_049421063908214546&quot;,&quot;text&quot;:&quot;In the **Track.js**  `-` element, add an `onClick` property with the value set to the `this.removeTrack` method.&quot;}]},{&quot;heading&quot;:&quot;Change the Name of a Playlist&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;7_0_03561250083335421&quot;,&quot;text&quot;:&quot;In this assessment, you will implement code that allows a learner to change the name of their playlist, and save the updated value to the `App` component&#x27;s state.&quot;},{&quot;key&quot;:&quot;7_0_07804106970074605&quot;,&quot;text&quot;:&quot;In **App.js** create a method called `updatePlaylistName` with the following functionality:\n* Accepts a name argument\n* Sets the state of the playlist name to the input argument&quot;},{&quot;key&quot;:&quot;7_0_043764594141783975&quot;,&quot;text&quot;:&quot;In the `App` constructor method, bind `this` to `.updatePlaylistName()`.\n\nPass `updatePlaylistName` to the `Playlist` component as an attribute named `onNameChange`.&quot;},{&quot;key&quot;:&quot;7_0_018820894505042762&quot;,&quot;text&quot;:&quot;In the `Playlist` component, create a method called `handleNameChange`.\n\nThe method should accept an event that is triggered by an `onChange` attribute in the `Playlist` component&#x27;s `\u003Cinput\u003E` element.\n\nInside the method, call `.onNameChange()` with the event target&#x27;s value (from the `\u003Cinput\u003E` element).&quot;},{&quot;key&quot;:&quot;7_0_0012567487145221934&quot;,&quot;text&quot;:&quot;Add a constructor to the `Playlist` component. Call `super(props)` in the constructor method.\n\nBind the current value of `this` to `.onNameChange()`.\n&quot;},{&quot;key&quot;:&quot;7_0_0439574719714662&quot;,&quot;text&quot;:&quot;In the `Playlist` render method, pass `.handleNameChange()` to an `onChange` property.&quot;}]},{&quot;heading&quot;:&quot;Create a Method that Saves the Playlist to a User&#x27;s Account&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;7_0_026677892971712813&quot;,&quot;text&quot;:&quot;In this assessment, you will create a method that will save a user&#x27;s playlist to their Spotify account and resets the state of the playlist name and tracks array.\n\nTo accomplish the goal of this assessment, you will need to access a `track` property named \u003Ca href=\&quot;https://developer.spotify.com/web-api/user-guide/#spotify-uris-ids\&quot;\u003Euri\u003C/a\u003E. Spotify uses this field to reference tracks in the Spotify library.   You will create an array containing the `uri` of each track in the `playlistTracks` property.  \n\nIn a later assessment, you will pass the playlist name and the array of `uri`s to a Spotify-linked method that writes the tracks in `playlistTracks` to a user&#x27;s account.&quot;},{&quot;key&quot;:&quot;7_1_09373684227606485&quot;,&quot;text&quot;:&quot;In **App.js** create a method called `savePlaylist` with the following functionality:\n* Generates an array of `uri` values called `trackURIs` from the `playlistTracks` property.\n* In a later step, you will pass the `trackURIs` array and `playlistName` to a method that will save the user&#x27;s playlist to their account.\n\n&quot;},{&quot;key&quot;:&quot;7_2_008535610375296754&quot;,&quot;text&quot;:&quot;Bind the current value of `this` to `.savePlaylist()`.\n\nPass `savePlaylist` to the `Playlist` component as an attribute called `onSave`.&quot;},{&quot;key&quot;:&quot;7_3_09485976050402507&quot;,&quot;text&quot;:&quot;In the **Playlist.js**  `SAVE TO SPOTIFY` element, add an `onClick` property with the value set to `this.props.onSave`.&quot;}]},{&quot;heading&quot;:&quot;Hook up Search Bar to Spotify Search&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;9_0_036775139243913935&quot;,&quot;text&quot;:&quot;In this assessment, you will create a method that updates the `searchResults` parameter in the `App` component with a user&#x27;s search results. You will write the logic that allows a user to enter a search parameter, receives a response from the Spotify API, and updates the `searchResults` state with the results from a Spotify request.\n\nIn a later assessment, you will hook the `.search()` method up to the Spotify API. \n&quot;},{&quot;key&quot;:&quot;9_0_03793502499929362&quot;,&quot;text&quot;:&quot;In **App.js** create a method called `search` with the following functionality:\n* Accepts a search term\n* Logs the term to the console\n\nIn a later assessment, we will hook this method up to the Spotify API.\n&quot;},{&quot;key&quot;:&quot;9_0_007233269375082862&quot;,&quot;text&quot;:&quot;In the `App` constructor method, bind `this` to `.search()`. In a later assessment, we will use `this` in `.search()`.\n\nPass `.search()` to the `SearchBar` component as an `onSearch` attribute.&quot;},{&quot;key&quot;:&quot;9_0_011678533310796091&quot;,&quot;text&quot;:&quot;In **SearchBar.js**, create a method called `search` that passes the state of the term to `this.props.onSearch`.&quot;},{&quot;key&quot;:&quot;9_0_04482334383433364&quot;,&quot;text&quot;:&quot;In the `SearchBar` component, create a contstructor method with a call to `super(props)`. \n\nInside of the constructor, bind the current value of `this` to `.search()`.&quot;},{&quot;key&quot;:&quot;9_0_02408774099480051&quot;,&quot;text&quot;:&quot;In **SearchBar.js** create a method called `handleTermChange` with the following functionality:\n* Accepts an event argument\n* Sets the state of the search bar&#x27;s term to the event target&#x27;s value.\n\n&quot;},{&quot;key&quot;:&quot;9_0_06359902556936778&quot;,&quot;text&quot;:&quot;In the **SearchBar.js** constructor method, bind the current value of `this` to `this.search`.&quot;},{&quot;key&quot;:&quot;9_0_04185259304470439&quot;,&quot;text&quot;:&quot;In the search bar&#x27;s `\u003Cinput\u003E` element, add an `onChange` attribute and set it equal to `this.handleTermChange`.&quot;}]},{&quot;heading&quot;:&quot;Obtain a Spotify Access Token&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;9_0_01272793680397546&quot;,&quot;text&quot;:&quot;In the next few assessments, you will write three methods that accomplish the following: \n* Get a Spotify user&#x27;s access token \n* Send a search request to the Spotify API \n* Save a user&#x27;s playlist to their Spotify account.\n\nBefore you begin, you will need to create an empty JavaScript module called `Spotify` located in **src/util/Spotify.js**. \n\nIn this assessment, you will register a Spotify application and create a method called `getAccessToken` in the `Spotify` module. The method will get a user&#x27;s access token so that they can make requests to the Spotify API.\n\nUse the \u003Ca href=\&quot;https://developer.spotify.com/my-applications/#!/applications\&quot; target=\&quot;_blank\&quot;\u003ESpotify Applications Registration Flow\u003C/a\u003E and \u003Ca href=\&quot;https://developer.spotify.com/web-api/authorization-guide/#implicit_grant_flow\&quot; target=\&quot;_blank\&quot;\u003ESpotify Authentication guide\u003C/a\u003E to help you write the method.\n\n\n&quot;},{&quot;key&quot;:&quot;9_1_03836550072633578&quot;,&quot;text&quot;:&quot;Create a **src/util** directory and add a file called **Spotify.js**&quot;},{&quot;key&quot;:&quot;9_2_0008089519734341799&quot;,&quot;text&quot;:&quot;In **Spotify.js** create a `Spotify` module as an empty object.\n\nAt the bottom of **Spotify.js** export `Spotify`.&quot;},{&quot;key&quot;:&quot;9_3_06191077929057265&quot;,&quot;text&quot;:&quot;Above the empty object, declare an empty variable that will hold the user&#x27;s access token.&quot;},{&quot;key&quot;:&quot;9_4_05937956852543023&quot;,&quot;text&quot;:&quot;Inside the `Spotify` module, create a method called `getAccessToken`. \n\nCheck if the user&#x27;s access token is already set. If it is, return the value saved to access token.&quot;},{&quot;key&quot;:&quot;9_5_06370436735262666&quot;,&quot;text&quot;:&quot;If the access token is not already set, check the URL to see if it has just been obtained. \n\nYou will be using the \u003Ca href=\&quot;https://developer.spotify.com/web-api/authorization-guide/#implicit_grant_flow\&quot; target=\&quot;_blank\&quot;\u003EImplicit Grant Flow\u003C/a\u003E to setup a user&#x27;s account and make requests. The implicit grant flow returns a user&#x27;s access token in the URL.\n\nUse the guide to determine how to parse the URL and set values for your access token and expiration time. \n\nLook at the hint if you help parsing the URL.\n&quot;,&quot;hint&quot;:&quot;In the implicit grant flow, values for the access token and expiration time are in the URL parameter after authentication. \n\nUse `window.location.href` and the `.match()` method to retrieve the access token and expiration time from the URL.\n\nExample URL from Spotify API:\n```\nhttps://example.com/callback#access_token=NwAExz...BV3O2Tk\u0026token_type=Bearer\u0026expires_in=3600\u0026state=123\n```\n\nUse the `.match()` method on the URL string. Provide the regular expressions below as inputs:\n```\n/access_token=([^\u0026]*)/\n/expires_in=([^\u0026]*)/\n```&quot;},{&quot;key&quot;:&quot;9_6_06726121669387664&quot;,&quot;text&quot;:&quot;If the access token and expiration time are in the URL, implement the following steps:\n* Set the access token value\n* Set a variable for expiration time\n* Set the access token to expire at the value for expiration time\n* Clear the parameters from the URL, so the app doesn&#x27;t try grabbing the access token after it has expired\n\nThe hint below contains the code that wipes the access token and URL parameters.&quot;,&quot;hint&quot;:&quot;Use the following code to help you wipe the access token and URL parameters\n```js\nwindow.setTimeout(() =\u003E accessToken = &#x27;&#x27;, expiresIn * 1000);\nwindow.history.pushState(&#x27;Access Token&#x27;, null, &#x27;/&#x27;);\n```&quot;},{&quot;key&quot;:&quot;9_7_040025907679118355&quot;,&quot;text&quot;:&quot;The third condition is that the access token variable is empty and is not in the URL. \n\nBefore you write this conditional code block, you need to register your application using the \u003Ca href=\&quot;https://developer.spotify.com/my-applications/#!/applications\&quot; target=\&quot;_blank\&quot;\u003ESpotify application registration flow\u003C/a\u003E.\n\nGive your application a relevant name and description. Also, add the following Redirect URI: \n\n```\nhttp://localhost:3000/\n```&quot;},{&quot;key&quot;:&quot;9_8_07037098874982666&quot;,&quot;text&quot;:&quot;At the top of **Spotify.js** create constant variables for your application&#x27;s client ID and redirect URI. \n\nSet the client ID variable to the value provided on your application page.\n\nSet the redirect URI to `\&quot;http://localhost:3000/\&quot;`. &quot;},{&quot;key&quot;:&quot;9_9_06700146539270222&quot;,&quot;text&quot;:&quot;Back in your conditional statement, redirect users to the following URL:\n\n```\nhttps://accounts.spotify.com/authorize?client_id=CLIENT_ID\u0026response_type=token\u0026scope=playlist-modify-public\u0026redirect_uri=REDIRECT_URI\n```\nInterpolate your client ID and redirect URI variables In place of `CLIENT_ID` and `REDIRECT_URI`.&quot;,&quot;hint&quot;:&quot;To redirect a user, you must set `window.location` to the URL in the task above.&quot;}]},{&quot;heading&quot;:&quot;Implement Spotify Search Request&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;11_0_06119326158831333&quot;,&quot;text&quot;:&quot;In this assessment, you will create a method in **Spotify.js** that accepts a search term input, passes the search term value to a Spotify request, then returns the response as a list of tracks in JSON format.\n\nYou will need the user&#x27;s access token to make requests to the Spotify API. You will use the request parameters in step four of the \u003Ca href=\&quot;https://developer.spotify.com/web-api/authorization-guide/#implicit_grant_flow\&quot; target=\&quot;_blank\&quot;\u003Eimplicit grant flow\u003C/a\u003E to make requests. In the following steps, we will use `fetch()` to make our requests, but any method will work.\n\nYou should use the `/v1/search?type=TRACK` endpoint when making your request. Use the \u003Ca href=\&quot;https://developer.spotify.com/web-api/endpoint-reference/\&quot; target=\&quot;_blank\&quot;\u003ESpofity Web API Endpoint Reference\u003C/a\u003E to help format your request.\n&quot;},{&quot;key&quot;:&quot;11_0_08030047132314766&quot;,&quot;text&quot;:&quot;In the `Spotify` object, add a method called `search` that accepts a parameter for the user&#x27;s search term.\n\n`.search()` returns a promise that will eventually resolve to the list of tracks from the search.\n\n&quot;},{&quot;key&quot;:&quot;11_0_09908918239537263&quot;,&quot;text&quot;:&quot;Inside `.search()`, start the promise chain by returning a GET request (using `fetch()`) to the following Spotify endpoint:\n```\nhttps://api.spotify.com/v1/search?type=track\u0026q=TERM\n```\nReplace the value of  `TERM` with the value saved to the search term argument.\n\nAdd an Authorization header to the request containing the access token.\n\n\n\n&quot;,&quot;hint&quot;:&quot;You will need to pass a second argument to the `fetch` method. The second argument is an object with one field called `headers`. Set `headers` to an object with one `Authorization` property with the user&#x27;s access token. Use the format in step four of the \u003Ca href=\&quot;https://developer.spotify.com/web-api/authorization-guide/#implicit_grant_flow\&quot; target=\&quot;_blank\&quot;\u003Eimplicit grant flow\u003C/a\u003E.\n\nPass the following object as the second fetch parameter:\n\n```js\n{\n  headers: {Authorization: `Bearer ${accessToken}`}\n}\n```&quot;},{&quot;key&quot;:&quot;11_0_08596985616400705&quot;,&quot;text&quot;:&quot;Convert the returned response to JSON. \n\nThen, map the converted JSON to an array of tracks. If the JSON does not contain any tracks, return an empty array.\n\nThe mapped array should contain a list of track objects with the following properties:\n- ID \u0026mdash; returned as `track.id`\n- Name \u0026mdash; returned as `track.name`\n- Artist \u0026mdash; returned as `track.artists[0].name`\n- Album \u0026mdash; returned as `track.album.name`\n- URI \u0026mdash; returned as `track.uri`&quot;},{&quot;key&quot;:&quot;11_0_05527543062238054&quot;,&quot;text&quot;:&quot;In **App.js**, import `Spotify` and update the `.search()` method with the `Spotify.search()` method.\n\nUpdate the state of `searchResults` with the value resolved from `Spotify.search()`&#x27;s promise.&quot;}]},{&quot;heading&quot;:&quot;Save a User&#x27;s Playlist&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;11_0_07027903072074861&quot;,&quot;text&quot;:&quot;In this assessment, you will create a method called `savePlaylist` that writes the learner&#x27;s custom playlist in Jammming to their Spotify account. \n\nThe `.savePlaylist()` method accepts a playlist name and an array of track URIs. It makes the following three requests to the Spotify API:\n- GET current user&#x27;s ID\n- POST a new playlist with the input name to the current user&#x27;s Spotify account. Receive the playlist ID back from the request.\n- POST the track URIs to the newly-created playlist, referencing the current user&#x27;s account (ID) and the new playlist (ID)\n\nYou will update the `.savePlaylist()` method in **App.js** to use the new `Spotify.savePlaylist()` method.&quot;},{&quot;key&quot;:&quot;11_1_013857073744812753&quot;,&quot;text&quot;:&quot;Create a method in **Spotify.js** that accepts two arguments. The first argument is the name of the playlist. The second is an array of track URIs.\n\nInside the function, check if there are values saved to the method&#x27;s two arguments. If not, return.&quot;},{&quot;key&quot;:&quot;11_2_08457962543970676&quot;,&quot;text&quot;:&quot;Create three default variables:\n- An access token variable, set to the current user&#x27;s access token\n- A headers variable, set to an object with an `Authorization` parameter containing the user&#x27;s access token in the \u003Ca href=\&quot;https://developer.spotify.com/web-api/authorization-guide/#implicit_grant_flow\&quot; target=\&quot;_blank\&quot;\u003Eimplicit grant flow request format\u003C/a\u003E\n- An empty variable for the user&#x27;s ID\n&quot;},{&quot;key&quot;:&quot;11_3_07766586672015887&quot;,&quot;text&quot;:&quot;Make a request that returns the user&#x27;s Spotify username. \n\nConvert the response to JSON and save the response `id` parameter to the user&#x27;s ID variable.&quot;,&quot;hint&quot;:&quot;Make the request to the following Spotify endpoint:\n```\nhttps://api.spotify.com/v1/me\n```\nYou must pass a second argument with an object containing the `headers` object. See below\n```js\n{headers: headers}\n```\n&quot;},{&quot;key&quot;:&quot;11_4_01635080729179923&quot;,&quot;text&quot;:&quot;Use the returned user ID to make a POST request that creates a new playlist in the user&#x27;s account and returns a playlist ID.\n\nUse the \u003Ca href=\&quot;https://developer.spotify.com/web-api/playlist-endpoints/\&quot; target=\&quot;_blank\&quot;\u003ESpotify playlist endpoints\u003C/a\u003E to find a request that creates a new playlist.\n\nSet the playlist name to the value passed into the method.\n\nConvert the response to JSON and save the response `id` parameter to a variable called `playlistID`.\n&quot;,&quot;hint&quot;:&quot;Make a request to the following Spotify endpoint:\n```\n/v1/users/{user_id}/playlists\n```\nYou must pass a second argument that contains an object with parameters for `headers`, `method`, and `body`.&quot;},{&quot;key&quot;:&quot;11_5_07719585467725487&quot;,&quot;text&quot;:&quot;Use the returned user ID to make a POST request that creates a new playlist in the user&#x27;s account and returns a playlist ID.\n\nUse the \u003Ca href=\&quot;https://developer.spotify.com/web-api/playlist-endpoints/\&quot; target=\&quot;_blank\&quot;\u003ESpotify playlist endpoints\u003C/a\u003E to find a request that adds tracks to a playlist.\n\nSet the URIs parameter to an array of track URIs passed into the method.\n\nConvert the response to JSON and save the response `id` parameter to a variable called `playlistID`.\n&quot;,&quot;hint&quot;:&quot;Make a request to the following Spotify endpoint:\n```\n/v1/users/{user_id}/playlists/{playlist_id}/tracks\n```\nYou must pass a second argument that contains an object with parameters for `headers`, `method`, and `body`.&quot;},{&quot;key&quot;:&quot;11_7_023491174464549447&quot;,&quot;text&quot;:&quot;In **App.js** update the `.savePlaylist()` method to call `Spotify.savePlaylist()`.\n\nAfter you call `Spotify.savePlaylist()`, reset the state of `playlistName` to `&#x27;New Playlist&#x27;` and `searchResults` to an empty array.&quot;}]},{&quot;heading&quot;:&quot;Deploy (Optional)&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;12_0_06145072809326129&quot;,&quot;text&quot;:&quot;In this assessment, you will use \u003Ca href=\&quot;https://surge.sh/\&quot; target=\&quot;_blank\&quot;\u003Esurge\u003C/a\u003E to deploy your Jammming project.\n\nYou will start by installing surge globally.  \n\nIn your console, run `npm install --global surge`. &quot;},{&quot;key&quot;:&quot;12_3_03437786828149112&quot;,&quot;text&quot;:&quot;Before you deploy, you need to think of a domain name with the following format:\n```\nSOME_NAME.surge.sh\n```\n`SOME_NAME` can be replaced with anything you like. \n\nNext, you need to replace or add this URI to two locations in your project.\n- In **Spotify.js*, set `redirectUri` to your new domain\n- In your \u003Ca href=\&quot;https://developer.spotify.com/my-applications/#!/applications\&quot; target=\&quot;_blank\&quot;\u003ESpotify application\u003C/a\u003E, add your new domain as a redirect URI\n\n&quot;},{&quot;key&quot;:&quot;12_1_03484386078389601&quot;,&quot;text&quot;:&quot;Back in the command line, from the Jammming project&#x27;s root directory, run:\n ```\n$ npm run build\n```&quot;},{&quot;key&quot;:&quot;12_2_08614884249756591&quot;,&quot;text&quot;:&quot;`cd` into the `build` directory and run the command \n```\n$ surge\n``` \n\nFollow the steps on the screen. Change the domain value to your new URI.\n\nCongrats! You&#x27;ve just deployed a React App that queries the Spotify API!\n\n&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;000_blank_workspace&quot;,&quot;type&quot;:&quot;static&quot;,&quot;backend&quot;:&quot;workshop&quot;},&quot;components&quot;:{&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/jamming_static/index.html&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/jammming/units/jammming/projects/jammming-prj.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/jammming/projects/jammming-prj&quot;,&quot;unit_slug&quot;:&quot;jammming&quot;,&quot;course_slug&quot;:&quot;jammming&quot;,&quot;private&quot;:false},&quot;feature-request-prj&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;uuid&quot;:&quot;909f5d388b134b5288504d4942a99443&quot;,&quot;slug&quot;:&quot;feature-request-prj&quot;,&quot;title&quot;:&quot;Feature Request: Jammming&quot;,&quot;description&quot;:&quot;Create the technical design document for a feature request built on the Jammming project&quot;,&quot;objective&quot;:&quot;In this project, you will select a feature that you think should be added to your Jammming app. You will use this \u003Ca href=\&quot;https://docs.google.com/document/d/1QIBjLcNH5t7FrPwuC7jNnhE1JPmwskdB7U7z0OSeDsU/edit?usp=sharing\&quot; target=\&quot;_blank\&quot;\u003Etechnical design document template\u003C/a\u003E to lay out all of the necessary functionality of this feature, how the feature should be implemented, and why you chose that specific approach. This is an essential step in the development process, so we encourage you to think carefully and thoroughly about your feature and implementation as you work on this project. \n\n\u003Ca href=\&quot;https://docs.google.com/document/d/1bHEQvYYAwSpAkdpv7hp8eu-iMnvqYVS4UffCLKvaKGg/edit?usp=sharing\&quot; target=\&quot;_blank\&quot;\u003EHere is an example of a technical design document\u003C/a\u003E for implementing multiple playlists in Jammming. You should use it as a resource when deciding what level of information you should include in your design document.\n\nYou can pick any feature you want for this project, but we have provided a list of potential options at the end of this article for inspiration. We can&#x27;t wait to see your cool new features and unique solutions!\n\n**How to Get Started**\n\nTo start this project, you will need to make a copy of our \u003Ca href=\&quot;https://docs.google.com/document/d/1QIBjLcNH5t7FrPwuC7jNnhE1JPmwskdB7U7z0OSeDsU/edit?usp=sharing\&quot; target=\&quot;_blank\&quot;\u003Etechnical design document template\u003C/a\u003E. Open the template in a new tab and then copy the file by selecting all of the content (by clicking and dragging over all of the content, or pressing Ctrl + A) and then pressing copy (by selecting the \&quot;Edit\&quot; tab and clicking \&quot;Copy\&quot;, or by pressing Ctrl + C). Then create a new document by navigating to docs.google.com and selecting \&quot;Start a New Document \u003E Blank\&quot;. Finally, paste the contents of the template into the new document (by selecting the \&quot;Edit\&quot; tab and clicking \&quot;Paste\&quot;, or by pressing Ctrl + V). Update the name of the document to something descriptive, and you&#x27;ll be ready to work on your project.\n\n**How to Submit Your Project**\n\nTo submit your final project, you will need to create a .txt file with a link to your technical design document. To create a link to your document, click the \&quot;Share\&quot; button at the top right of your Google Doc. A popup will appear. At the top of the popup, click the \&quot;Get shareable link\&quot; button to generate a link to your document. After clicking this button, a link should appear in the popup window. Above the link should be a button that says \&quot;Anyone can edit\&quot; on it. If it does not, click the button and switch it to \&quot;Anyone can edit\&quot;. Once this is done, press \&quot;Copy link\&quot; to the right of the link. \n\nOn your computer, create a new file in your text editor and paste the link into the file. Save this file as **jammming_feature_request.txt**. You should then submit this file to submit your project in the upcoming project submission screen.\n\n**Potential Jammming Features:**\n\n* Pressing enter triggers a search\n* Include preview samples for each track\n* Only display songs not currently present in the playlist in the search results\n* Add a loading screen while playlist is saving\n* Update the access token logic to expire at exactly the right time, instead of setting expiration from when the user initiates their next search\n* After user redirect on login, restoring the search term from before the redirect\n* Ensure playlist information doesn&#x27;t get cleared if a user has to refresh their access token&quot;,&quot;meta&quot;:{&quot;authors&quot;:[]},&quot;self_assessments&quot;:[{&quot;heading&quot;:&quot;Complete Project&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;0_0_013848782234249302&quot;,&quot;text&quot;:&quot;Use the information above to complete this project. Once completed, save the link to your Google document in a .txt file and upload using the project submission screen.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;000_blank_workspace&quot;,&quot;type&quot;:&quot;static&quot;,&quot;backend&quot;:&quot;workshop&quot;},&quot;components&quot;:{},&quot;filepath&quot;:&quot;new/content/courses/en/jammming/units/jammming/projects/feature-request-prj.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/jammming/projects/feature-request-prj&quot;,&quot;unit_slug&quot;:&quot;jammming&quot;,&quot;course_slug&quot;:&quot;jammming&quot;,&quot;private&quot;:false}},&quot;filepath&quot;:&quot;new/content/courses/en/jammming/units/jammming/jammming.en.yml&quot;,&quot;lessons&quot;:{},&quot;lessons_order&quot;:[],&quot;projects_order&quot;:[&quot;jammming-prj&quot;,&quot;feature-request-prj&quot;],&quot;quizzes&quot;:{},&quot;quizzes_order&quot;:[]}},&quot;updated_at&quot;:&quot;1499718576&quot;,&quot;uuid&quot;:&quot;9cb806758c811cf63ea443ec8e5766ce&quot;,&quot;resume_path&quot;:&quot;/en/courses/jammming/resume&quot;,&quot;path&quot;:&quot;/en/courses/jammming&quot;,&quot;wip&quot;:false,&quot;units_order&quot;:[&quot;jammming&quot;],&quot;lessons&quot;:{},&quot;projects&quot;:{&quot;jammming-prj&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;uuid&quot;:&quot;01d6016dade212b09343a96fc984fdb9&quot;,&quot;slug&quot;:&quot;jammming-prj&quot;,&quot;title&quot;:&quot;Jammming&quot;,&quot;description&quot;:&quot;Build a React application that allows users to create custom Spotify playlists.&quot;,&quot;objective&quot;:&quot;In this project, you will build a React web application called \u003Ca href=\&quot;http://jammming.s3-website-us-east-1.amazonaws.com/\&quot; target=\&quot;_blank\&quot;\u003EJammming\u003C/a\u003E.  You will use your knowledge of React components, passing state, and requests with the Spotify API to build a website that allows users to search the Spotify library, create a custom playlist, then save it to their Spotify account.\n\nWe&#x27;ve broken the Jammming project into 13 sections, called _assessments_. Each assessment contains a descriptive header with an introductory step, followed by a set of steps that guide you to the outcome. The first step of each assessment will explain the assessment&#x27;s goal and provide a brief overview of how we&#x27;ll accomplish it. Before you start the second step, try to plan how you would complete the assessment. As you finish the rest of the steps, reflect on how your solution compares to ours.\n\nAlthough the project may seem daunting, we&#x27;ll be with you every step of the way. Whether you&#x27;re completing assessments without the additional steps or banging your head against the wall trying to understand a hint, always use best practices and reflect on your growth. \n\nGood luck!\n\n\n&quot;,&quot;meta&quot;:{&quot;authors&quot;:[]},&quot;self_assessments&quot;:[{&quot;heading&quot;:&quot;Create a React Application&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;0_0_0.43937410251798026&quot;,&quot;text&quot;:&quot;By the end of this assessment, you will be ready to start building your website. This section walks you through the process of setting up the directory structure and adding CSS presets.\n\nTo achieve this, you will create a boilerplate react app, remove unused files, and add **reset.css**, Google font links, and an updated favicon.\n\n- Google fonts \u0026mdash; \u003Ca href=\&quot;https://fonts.googleapis.com/css?family=Poppins:600\&quot; target=\&quot;_blank\&quot;\u003EPoppins\u003C/a\u003E and \u003Ca href=\&quot;https://fonts.googleapis.com/css?family=Work+Sans:300,500\&quot; target=\&quot;_blank\&quot;\u003EWork Sans\u003C/a\u003E\n- Updated \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/favicon.ico\&quot; target=\&quot;_blank\&quot;\u003Efavicon\u003C/a\u003E\n\n\n&quot;},{&quot;key&quot;:&quot;1_7_05529890831318895&quot;,&quot;text&quot;:&quot;Create a new React application in a directory called **Jammming**.\n&quot;,&quot;hint&quot;:&quot;Use `create-react-app` with the name of the folder you want to create.&quot;},{&quot;key&quot;:&quot;12_4_043907140694445124&quot;,&quot;text&quot;:&quot;In **index.html**, update the `\u003Ctitle\u003E` value to `Jammming`.&quot;},{&quot;key&quot;:&quot;1_7_08777633623987713&quot;,&quot;text&quot;:&quot;Remove **App.test.js** and **logo.svg** from the **src/** folder, as you will not use them in this project.\n\n\n&quot;},{&quot;key&quot;:&quot;1_7_02855278383031854&quot;,&quot;text&quot;:&quot;Add \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/static-html-css/reset.txt\&quot; target=\&quot;_blank\&quot;\u003Ereset.css\u003C/a\u003E to the **public/** directory and link to it in **index.html**.&quot;},{&quot;key&quot;:&quot;1_7_005816917101365071&quot;,&quot;text&quot;:&quot;Link to the following Google fonts in **index.html**: \n- \u003Ca href=\&quot;https://fonts.googleapis.com/css?family=Poppins:600\&quot; target=\&quot;_blank\&quot;\u003EPoppins\u003C/a\u003E \n- \u003Ca href=\&quot;https://fonts.googleapis.com/css?family=Work+Sans:300,500\&quot; target=\&quot;_blank\&quot;\u003EWork Sans\u003C/a\u003E\n&quot;,&quot;hint&quot;:&quot;Link the Google fonts using the `\u003Clink\u003E` tag.\n```js\n\u003Clink href=\&quot;https://fonts.googleapis.com/css?family=Poppins:600\&quot; rel=\&quot;stylesheet\&quot;\u003E\n\u003Clink href=\&quot;https://fonts.googleapis.com/css?family=Work+Sans:300,500\&quot; rel=\&quot;stylesheet\&quot;\u003E\n```&quot;},{&quot;key&quot;:&quot;1_7_06422280373350093&quot;,&quot;text&quot;:&quot;Update **favicon.ico** with \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/favicon.ico\&quot; target=\&quot;_blank\&quot;\u003Ethis image\u003C/a\u003E.&quot;}]},{&quot;heading&quot;:&quot;Create Static Components &quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;2_7_0.036389078956334364&quot;,&quot;text&quot;:&quot;In this assessment, you will create a JavaScript file and a CSS file for each of six components in the Jammming app. In the steps below, we will link to the raw HTML and CSS to help you write the JSX for each component. \n\nIn the HTML, we use comments to indicate where the JSX for one component renders another component. \n\nThe HTML and CSS for each of the six components are listed below:\n- **App** \u0026mdash; \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003EHTML\u003C/a\u003E and \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003ECSS\u003C/a\u003E\n- **SearchBar** \u0026mdash; \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003EHTML\u003C/a\u003E and \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003ECSS\u003C/a\u003E\n- **SearchResults** \u0026mdash; \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003EHTML\u003C/a\u003E and \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003ECSS\u003C/a\u003E\n- **Playlist** \u0026mdash; \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003EHTML\u003C/a\u003E and \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003ECSS\u003C/a\u003E\n- **TrackList** \u0026mdash; \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003EHTML\u003C/a\u003E and \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003ECSS\u003C/a\u003E\n- **Track** \u0026mdash; \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003EHTML\u003C/a\u003E and \u003Ca href=\&quot;\&quot; target=\&quot;_blank\&quot;\u003ECSS\u003C/a\u003E&quot;},{&quot;key&quot;:&quot;2_7_099142849638919&quot;,&quot;text&quot;:&quot;Create a **src/Components** directory to hold the components.&quot;},{&quot;key&quot;:&quot;2_7_09868946418761309&quot;,&quot;text&quot;:&quot;Create a directory called **App/** in the **Components/** directory.\n\nAdd **App.js** and **App.css** to the **App/** folder and update the path in **index.js** accordingly. \n\nAdditionally add \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/background_photo_desktop.jpg\&quot; target=\&quot;_blank\&quot;\u003Ethis background image\u003C/a\u003E to the directory as well \u0026mdash; it is used by the CSS file.&quot;},{&quot;key&quot;:&quot;2_7_00466251048537214&quot;,&quot;text&quot;:&quot;Inside of the **App.js** `.render()` method, add a return statement with JSX that renders \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/app/Apphtml.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis HTML\u003C/a\u003E .\n\nFollow the guidelines below when you write the HTML (linked above) as JSX:\n* Change all class attributes to className.\n* Do not change the class values, as we will use them in a later step to add style.\n&quot;},{&quot;key&quot;:&quot;2_7_0010788121851599941&quot;,&quot;text&quot;:&quot;Use the comments in the HTML document from the last step to determine the components you need to import into **App.js**.\n\nNote, you will create a folder for each component. The JavaScript file and CSS files for each component will live in the component&#x27;s folder. The folder, JavaScript file, and CSS file will all have the same name.&quot;,&quot;hint&quot;:&quot;The comments indicate you need to import the following three components:\n* **Playlist**\n* **SearchBar**\n* **SearchResults**&quot;},{&quot;key&quot;:&quot;2_7_04931980154754503&quot;,&quot;text&quot;:&quot;Add \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/app/AppCss.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis CSS\u003C/a\u003E to the **App.css** file. \n\nImport **App.css** into **App.js**.\n\n&quot;},{&quot;key&quot;:&quot;2_7_06049839754906596&quot;,&quot;text&quot;:&quot;Create a **SearchBar/** directory in the **Components/** directory.\n\nInside of **SearchBar/**, add **SearchBar.js** and **SearchBar.css**.&quot;},{&quot;key&quot;:&quot;2_7_09474671562631751&quot;,&quot;text&quot;:&quot;Inside of **SearchBar.js** create a component called `SearchBar` with a `.render()` method that returns \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/searchbar/searchbarhtml.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis HTML\u003C/a\u003E.\n\nFollow the guidelines below when you write the HTML (linked above) as JSX:\n* Change all class attributes to className.\n* Do not change the class values, as we will use them in a later step to add style.\n\nUse the comments in the HTML document to determine if you need to import any components.\n\nExport the `SearchBar` component.\n&quot;,&quot;hint&quot;:&quot;Follow these steps to create the `SearchBar` component:\n* Import `React`\n* Create a `SearchBar` class that extends `React.Component`\n* Create a render method that returns the HTML linked above\n* You do not need to import any other components\n* Export `SearchBar`&quot;},{&quot;key&quot;:&quot;2_7_016021512912233749&quot;,&quot;text&quot;:&quot;Add \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/searchbar/searchbarCss.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis CSS\u003C/a\u003E to the **SearchBar.css** file. \n\nImport **SearchBar.css** into **SearchBar.js**.\n&quot;},{&quot;key&quot;:&quot;2_7_00829765934774862&quot;,&quot;text&quot;:&quot;Create a **SearchResults/** directory in the **Components/** directory.\n\nInside of **SearchResults/**, add **SearchResults.js** and **SearchResults.css**.&quot;},{&quot;key&quot;:&quot;2_7_06297090891517134&quot;,&quot;text&quot;:&quot;Inside of **SearchResults.js** create a component called `SearchResults` with a `.render()` method that returns \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/searchresults/searchresultsHtml.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis HTML\u003C/a\u003E.\n\nFollow the guidelines below when you write the HTML (linked above) as JSX:\n* Change all class attributes to className.\n* Do not change the class values, as we will use them in a later step to add style.\n\nUse the comments in the HTML document to determine if you need to import any components.\n\nExport the `SearchResults` component.&quot;,&quot;hint&quot;:&quot;Follow these steps to create the `SearchResults` component:\n* Import `React`\n* Create a `SearchResults` class that extends `React.Component`\n* Create a render method that returns the HTML linked above\n* Import `TrackList` \n* Export `SearchResults`&quot;},{&quot;key&quot;:&quot;2_7_0922730493467443&quot;,&quot;text&quot;:&quot;Add \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/searchresults/searchresultsCss.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis CSS\u003C/a\u003E to the **SearchResults.css** file. \n\nImport **SearchResults.css** into **SearchResults.js**.\n&quot;},{&quot;key&quot;:&quot;2_7_08457319834924237&quot;,&quot;text&quot;:&quot;Create a **Playlist/** directory in the **Components/** directory.\n\nInside of **Playlist/**, add **Playlist.js** and **Playlist.css**.&quot;},{&quot;key&quot;:&quot;2_7_02723359281999773&quot;,&quot;text&quot;:&quot;Inside of **Playlist.js** create a component called `Playlist` with a `.render()` method that returns \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/playlist/playlisthtml.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis HTML\u003C/a\u003E.\n\nFollow the guidelines below when you write the HTML (linked above) as JSX:\n* Change all class attributes to `className`.\n* Do not change the class values, as we will use them in a later step to add style.\n* Change the `value` property to `defaultValue` and set it equal to `{&#x27;New Playlist&#x27;}`\n\nUse the comments in the HTML document to determine if you need to import any components.\n\nExport the `Playlist` component&quot;,&quot;hint&quot;:&quot;Follow these steps to create the `Playlist` component:\n* Import `React`\n* Create a `Playlist` class that extends `React.Component`\n* Create a render method that returns the HTML linked above\n* Import `TrackList`\n* Export `Playlist`&quot;},{&quot;key&quot;:&quot;2_7_09064071064815336&quot;,&quot;text&quot;:&quot;Add \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/playlist/playlistCss.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis CSS\u003C/a\u003E to the **Playlist.css** file. \n\nImport **Playlist.css** into **Playlist.js**.\n&quot;},{&quot;key&quot;:&quot;2_7_018615658769680898&quot;,&quot;text&quot;:&quot;Create a **TrackList/** directory in the **Components/** directory.\n\nInside of **TrackList/**, add **TrackList.js** and **TrackList.css**.&quot;},{&quot;key&quot;:&quot;2_7_03788580053423254&quot;,&quot;text&quot;:&quot;Inside of **TrackList.js** create a component called `TrackList` with a `.render()` method that returns \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/tracklist/tracklistHtml.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis HTML\u003C/a\u003E.\n\nFollow the guidelines below when you write the HTML (linked above) as JSX:\n* Change all class attributes to `className`.\n* Do not modify the class values, as we will use them in a later step to add style.\n* For now, you will hard code three tracks. In a later assessment, we will replace the hard-coded values with tracks from Spotify.\n\nUse the comments in the HTML document to determine if you need to import any components.\n\nExport the `TrackList` component.&quot;,&quot;hint&quot;:&quot;Follow these steps to create the `TrackList` component:\n* Import `React`\n* Create a `TrackList` class that extends `React.Component`\n* Create a render method that returns the HTML linked above\n* Import `Track`\n* Export `TrackList`&quot;},{&quot;key&quot;:&quot;2_7_0011962068707145779&quot;,&quot;text&quot;:&quot;Add \u003Ca href=\&quot;\t\nhttps://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/tracklist/tracklistCss.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis CSS\u003C/a\u003E to the **TrackList.css** file. \n\nImport **TrackList.css** into **TrackList.js**.\n&quot;},{&quot;key&quot;:&quot;2_7_0242211728624387&quot;,&quot;text&quot;:&quot;Create a **Track/** directory in the **Components/** directory.\n\nInside of **Track/**, add **Track.js** and **Track.css**.&quot;},{&quot;key&quot;:&quot;2_7_08869364921125724&quot;,&quot;text&quot;:&quot;Inside of **Track.js** create a component called `Track` with a `.render()` method that returns \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/track/trackhtml.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis HTML\u003C/a\u003E.\n\nFollow the guidelines below when you write the HTML (linked above) as JSX:\n* Change all class attributes to `className`.\n* Do not change the class values, as we will use them in a later step to add style.\n* Create a method called `renderAction` that displays a `-` anchor tag if a passed down property is true, and a `+` anchor tag if the property is false. Set the class name to `Track-action`.\n\nUse the comments in the HTML document to determine if you need to import any components.\n\nExport the `Track` component.\n&quot;,&quot;hint&quot;:&quot;Follow these steps to create the `Track` component:\n* Import `React`\n* Create a `SearchBar` class that extends `React.Component`\n* Create a render method that returns the HTML linked above\n* You do not need to import any other components\n* Export `Track`&quot;},{&quot;key&quot;:&quot;2_7_049109606648417503&quot;,&quot;text&quot;:&quot;Add \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/track/trackCss.txt\&quot; target=\&quot;_blank\&quot;\u003Ethis CSS\u003C/a\u003E to the **Track.css** file. \n\nImport **Track.css** into **Track.js**.\n&quot;}]},{&quot;heading&quot;:&quot;Pass Down Search Result and Render Result List&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;1_0_0.807763779225676&quot;,&quot;text&quot;:&quot;In this assessment, you will pass the state of a search results parameter through a series of components to render an array of tracks. \n\nWhen a user requests data from Spotify, the JSON response will include a set of song tracks. Each `track` will contain a field for `name`, `artist`, and `album`. For each track in the results list, your Jammming web app will display the song name, artist, and album.\n\nIn a later assessment, you will build a method that sets the state of the search results parameter to a response from the Spotify API.\n&quot;},{&quot;key&quot;:&quot;1_1_0.12345293561061488&quot;,&quot;text&quot;:&quot;Add a constructor function to the `App` component, and pull in `props` from the `React.Component` class.&quot;,&quot;hint&quot;:&quot;Inside of the `App` component in **App.js**, create a constructor method.\n\nPass `props` to the constructor function and use `super()` to call the parent constructor.&quot;},{&quot;key&quot;:&quot;1_2_0.7716511934849861&quot;,&quot;text&quot;:&quot;Inside of the App component, set a hard-coded initial value for `this.state.searchResults`.&quot;,&quot;hint&quot;:&quot;Inside of the `App` constructor, set `this.state` to an object with a property called `searchResults` set to an array of objects, each containing `name`, `artist`, and `album` properties.&quot;},{&quot;key&quot;:&quot;1_3_0.3744912881721443&quot;,&quot;text&quot;:&quot;Pass the state of the `App` component&#x27;s `searchResults` to the `SearchResults` component.\n\n\n\n&quot;,&quot;hint&quot;:&quot;Pass `this.state.searchResults` to the `SearchResults` component as an attribute called `searchResults`.&quot;},{&quot;key&quot;:&quot;1_4_0.9540120298790007&quot;,&quot;text&quot;:&quot;Pass the search results from the `SearchResults` component to the `TrackList` component.\n&quot;,&quot;hint&quot;:&quot;Inside the **SearchResults.js** `.render()` method, pass `this.props.searchResults` as an attribute called `tracks` in the `TrackList` component.\n\n&quot;},{&quot;key&quot;:&quot;1_5_0.2707319454146766&quot;,&quot;text&quot;:&quot;In the `TrackList` component, use the `.map()` method to render each track in the `tracks` property.\n\nSet the `key` attribute to `track.id`.&quot;,&quot;hint&quot;:&quot;Inside the `TrackList` component&#x27;s render method, use `.map()` on `this.props.tracks` to render each track in the list.\n\nThis will require you to pass the current `track` as an attribute called `track` to the `Track` component.&quot;},{&quot;key&quot;:&quot;1_6_0.5874847606573159&quot;,&quot;text&quot;:&quot;Render the track name, artist, and album. &quot;,&quot;hint&quot;:&quot;Use the following property calls to access the track&#x27;s name, artist, and album:\n* `this.props.track.name`\n* `this.props.track.artist`\n* `this.props.track.album`&quot;}]},{&quot;heading&quot;:&quot;Pass down Playlist to TrackList&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;3_0_08246175843012182&quot;,&quot;text&quot;:&quot;In this assessment, you will pass the state of a user&#x27;s custom playlist title and tracks from the App component down to components that render them.\n\nWhen a user adds songs from the search results list to their playlist, a method will update the state of a playlist parameter in **App.js**, and Jammming will render the song in the user&#x27;s playlist. \n\nIn a later assessment, you will write methods that add and remove songs from the playlist. You will also write a method that updates the playlist&#x27;s title.&quot;},{&quot;key&quot;:&quot;3_1_013966773219774598&quot;,&quot;text&quot;:&quot;Add hard-coded values for `playlistName` and `playlistTracks` to state in **App.js**.&quot;,&quot;hint&quot;:&quot;You can set `playlistName` to any string. \n\nThe `playlistTracks` value should be an array of objects, each containing `name`, `artist`, and `album` properties.&quot;},{&quot;key&quot;:&quot;3_2_05413931927672737&quot;,&quot;text&quot;:&quot;Pass the playlist name and tracks from the `App` component to the `Playlist` component.\n&quot;,&quot;hint&quot;:&quot;Inside the **App.js** `.render()` method, pass `this.state.playlistName` and `this.state.playlistTracks` as attributes called `playlistName` and `playlistTracks` in the `Playlist` component.&quot;},{&quot;key&quot;:&quot;3_5_003929103811191692&quot;,&quot;text&quot;:&quot;Pass the playlist tracks from the `Playlist` component to the `TrackList` component.&quot;,&quot;hint&quot;:&quot;Inside the **Playlist.js** `.render()` method, pass `this.props.playlistTracks` as an attribute called `tracks` in the `TrackList` component.&quot;}]},{&quot;heading&quot;:&quot;Add Tracks to a Playlist&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;5_0_049309060566672747&quot;,&quot;text&quot;:&quot;In this assessment, you will implement a process for adding a song from the search results track list to the user&#x27;s custom playlist. \n\nYou will add a method to **App.js** called `addTrack` that adds a song to the playlist state. The application passes the method through a series of components to `Track`. The user can trigger the `.addTrack()` method by clicking the `+` sign from the search results list.&quot;},{&quot;key&quot;:&quot;5_0_05740468514136594&quot;,&quot;text&quot;:&quot;In **App.js** create a method called `addTrack` with the following functionality:\n* Accepts a `track` argument\n* Use the playlist&#x27;s `id` property to check if the current song is in the `playlistTracks` state. \n* If the `id` is new, add the song to the end of the playlist.\n* Set the new state of the playlist\n\n\n&quot;},{&quot;key&quot;:&quot;5_0_05420029389000083&quot;,&quot;text&quot;:&quot;Bind the current value of `this` to `.addTrack()`.\n\nPass `.addTrack()` to the `SearchResults` component as an `onAdd` attribute.&quot;},{&quot;key&quot;:&quot;5_0_0066145027259358&quot;,&quot;text&quot;:&quot;Pass `onAdd` from the `SearchResults` component to the `TrackList` component.&quot;,&quot;hint&quot;:&quot;Inside the **SearchResults.js** `.render()` method, pass `this.props.onAdd` as an attribute called `onAdd` to the `TrackList` component.&quot;},{&quot;key&quot;:&quot;5_0_07494852136786674&quot;,&quot;text&quot;:&quot;Pass `onAdd` from the `TrackList` component to the `Track` component.&quot;,&quot;hint&quot;:&quot;Inside the **TrackList.js** `.render()` method, pass `this.props.onAdd` as an attribute called `onAdd` to the `Track` component.&quot;},{&quot;key&quot;:&quot;5_0_03475813561639507&quot;,&quot;text&quot;:&quot;Create an `.addTrack()` method in the `Track` component. Use it to add `this.props.track` to the playlist.&quot;,&quot;hint&quot;:&quot;Pass `this.props.track` to `this.props.onAdd`.&quot;},{&quot;key&quot;:&quot;5_0_03270644189469998&quot;,&quot;text&quot;:&quot;Add a constructor to the `Track` component. Call `super(props)` in the constructor method.\n\nBind `this.addTrack()` to the current value of `this` in the constructor method.\n\n\n&quot;},{&quot;key&quot;:&quot;5_0_06457437689144006&quot;,&quot;text&quot;:&quot;In the **Track.js**  `+` element, add an `onClick` property with the value set to `this.addTrack`.&quot;}]},{&quot;heading&quot;:&quot;Remove Tracks from a Playlist&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;5_0_07986471531847001&quot;,&quot;text&quot;:&quot;In this assessment, you will implement a process that removes a song from a user&#x27;s custom playlist when the user selects the `-` sign inside of a rendered track. \n\n&quot;},{&quot;key&quot;:&quot;5_1_06767590529664398&quot;,&quot;text&quot;:&quot;In **App.js** create a method called `removeTrack` with the following functionality:\n* Accepts a track argument\n* Uses the track&#x27;s `id` property to filter it out of `playlistTracks`\n* Sets the new state of the playlist\n&quot;},{&quot;key&quot;:&quot;5_2_022221579971693672&quot;,&quot;text&quot;:&quot;In the `App` constructor method, bind the current value of `this` to `.removeTrack()`.\n\nPass `.removeTrack()` to the `Playlist` component as an `onRemove` attribute.&quot;},{&quot;key&quot;:&quot;5_3_04712007627844308&quot;,&quot;text&quot;:&quot;Pass `onRemove` from the `Playlist` component to the `TrackList` component.&quot;,&quot;hint&quot;:&quot;Inside the **Playlist.js** `.render()` method, pass `this.props.onRemove` as an attribute called `onRemove` in the `TrackList` component.&quot;},{&quot;key&quot;:&quot;5_4_015151043632731231&quot;,&quot;text&quot;:&quot;Pass `onRemove` from the `TrackList` component to the `Track` component.&quot;,&quot;hint&quot;:&quot;Inside the **TrackList.js** `.render()` method, pass `this.props.onRemove` as an attribute called `onRemove` in the `Track` component.&quot;},{&quot;key&quot;:&quot;5_5_05534457281840954&quot;,&quot;text&quot;:&quot;Create a `.removeTrack()` method in the `Track` component. Use it to remove `this.props.track` from the playlist.&quot;,&quot;hint&quot;:&quot;Pass `this.props.track` to `this.props.onRemove`.&quot;},{&quot;key&quot;:&quot;5_6_06184378293714332&quot;,&quot;text&quot;:&quot;In **Track.js**, bind `this.addTrack()` to the current value of `this` in the constructor method.\n&quot;},{&quot;key&quot;:&quot;5_7_049421063908214546&quot;,&quot;text&quot;:&quot;In the **Track.js**  `-` element, add an `onClick` property with the value set to the `this.removeTrack` method.&quot;}]},{&quot;heading&quot;:&quot;Change the Name of a Playlist&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;7_0_03561250083335421&quot;,&quot;text&quot;:&quot;In this assessment, you will implement code that allows a learner to change the name of their playlist, and save the updated value to the `App` component&#x27;s state.&quot;},{&quot;key&quot;:&quot;7_0_07804106970074605&quot;,&quot;text&quot;:&quot;In **App.js** create a method called `updatePlaylistName` with the following functionality:\n* Accepts a name argument\n* Sets the state of the playlist name to the input argument&quot;},{&quot;key&quot;:&quot;7_0_043764594141783975&quot;,&quot;text&quot;:&quot;In the `App` constructor method, bind `this` to `.updatePlaylistName()`.\n\nPass `updatePlaylistName` to the `Playlist` component as an attribute named `onNameChange`.&quot;},{&quot;key&quot;:&quot;7_0_018820894505042762&quot;,&quot;text&quot;:&quot;In the `Playlist` component, create a method called `handleNameChange`.\n\nThe method should accept an event that is triggered by an `onChange` attribute in the `Playlist` component&#x27;s `\u003Cinput\u003E` element.\n\nInside the method, call `.onNameChange()` with the event target&#x27;s value (from the `\u003Cinput\u003E` element).&quot;},{&quot;key&quot;:&quot;7_0_0012567487145221934&quot;,&quot;text&quot;:&quot;Add a constructor to the `Playlist` component. Call `super(props)` in the constructor method.\n\nBind the current value of `this` to `.onNameChange()`.\n&quot;},{&quot;key&quot;:&quot;7_0_0439574719714662&quot;,&quot;text&quot;:&quot;In the `Playlist` render method, pass `.handleNameChange()` to an `onChange` property.&quot;}]},{&quot;heading&quot;:&quot;Create a Method that Saves the Playlist to a User&#x27;s Account&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;7_0_026677892971712813&quot;,&quot;text&quot;:&quot;In this assessment, you will create a method that will save a user&#x27;s playlist to their Spotify account and resets the state of the playlist name and tracks array.\n\nTo accomplish the goal of this assessment, you will need to access a `track` property named \u003Ca href=\&quot;https://developer.spotify.com/web-api/user-guide/#spotify-uris-ids\&quot;\u003Euri\u003C/a\u003E. Spotify uses this field to reference tracks in the Spotify library.   You will create an array containing the `uri` of each track in the `playlistTracks` property.  \n\nIn a later assessment, you will pass the playlist name and the array of `uri`s to a Spotify-linked method that writes the tracks in `playlistTracks` to a user&#x27;s account.&quot;},{&quot;key&quot;:&quot;7_1_09373684227606485&quot;,&quot;text&quot;:&quot;In **App.js** create a method called `savePlaylist` with the following functionality:\n* Generates an array of `uri` values called `trackURIs` from the `playlistTracks` property.\n* In a later step, you will pass the `trackURIs` array and `playlistName` to a method that will save the user&#x27;s playlist to their account.\n\n&quot;},{&quot;key&quot;:&quot;7_2_008535610375296754&quot;,&quot;text&quot;:&quot;Bind the current value of `this` to `.savePlaylist()`.\n\nPass `savePlaylist` to the `Playlist` component as an attribute called `onSave`.&quot;},{&quot;key&quot;:&quot;7_3_09485976050402507&quot;,&quot;text&quot;:&quot;In the **Playlist.js**  `SAVE TO SPOTIFY` element, add an `onClick` property with the value set to `this.props.onSave`.&quot;}]},{&quot;heading&quot;:&quot;Hook up Search Bar to Spotify Search&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;9_0_036775139243913935&quot;,&quot;text&quot;:&quot;In this assessment, you will create a method that updates the `searchResults` parameter in the `App` component with a user&#x27;s search results. You will write the logic that allows a user to enter a search parameter, receives a response from the Spotify API, and updates the `searchResults` state with the results from a Spotify request.\n\nIn a later assessment, you will hook the `.search()` method up to the Spotify API. \n&quot;},{&quot;key&quot;:&quot;9_0_03793502499929362&quot;,&quot;text&quot;:&quot;In **App.js** create a method called `search` with the following functionality:\n* Accepts a search term\n* Logs the term to the console\n\nIn a later assessment, we will hook this method up to the Spotify API.\n&quot;},{&quot;key&quot;:&quot;9_0_007233269375082862&quot;,&quot;text&quot;:&quot;In the `App` constructor method, bind `this` to `.search()`. In a later assessment, we will use `this` in `.search()`.\n\nPass `.search()` to the `SearchBar` component as an `onSearch` attribute.&quot;},{&quot;key&quot;:&quot;9_0_011678533310796091&quot;,&quot;text&quot;:&quot;In **SearchBar.js**, create a method called `search` that passes the state of the term to `this.props.onSearch`.&quot;},{&quot;key&quot;:&quot;9_0_04482334383433364&quot;,&quot;text&quot;:&quot;In the `SearchBar` component, create a contstructor method with a call to `super(props)`. \n\nInside of the constructor, bind the current value of `this` to `.search()`.&quot;},{&quot;key&quot;:&quot;9_0_02408774099480051&quot;,&quot;text&quot;:&quot;In **SearchBar.js** create a method called `handleTermChange` with the following functionality:\n* Accepts an event argument\n* Sets the state of the search bar&#x27;s term to the event target&#x27;s value.\n\n&quot;},{&quot;key&quot;:&quot;9_0_06359902556936778&quot;,&quot;text&quot;:&quot;In the **SearchBar.js** constructor method, bind the current value of `this` to `this.search`.&quot;},{&quot;key&quot;:&quot;9_0_04185259304470439&quot;,&quot;text&quot;:&quot;In the search bar&#x27;s `\u003Cinput\u003E` element, add an `onChange` attribute and set it equal to `this.handleTermChange`.&quot;}]},{&quot;heading&quot;:&quot;Obtain a Spotify Access Token&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;9_0_01272793680397546&quot;,&quot;text&quot;:&quot;In the next few assessments, you will write three methods that accomplish the following: \n* Get a Spotify user&#x27;s access token \n* Send a search request to the Spotify API \n* Save a user&#x27;s playlist to their Spotify account.\n\nBefore you begin, you will need to create an empty JavaScript module called `Spotify` located in **src/util/Spotify.js**. \n\nIn this assessment, you will register a Spotify application and create a method called `getAccessToken` in the `Spotify` module. The method will get a user&#x27;s access token so that they can make requests to the Spotify API.\n\nUse the \u003Ca href=\&quot;https://developer.spotify.com/my-applications/#!/applications\&quot; target=\&quot;_blank\&quot;\u003ESpotify Applications Registration Flow\u003C/a\u003E and \u003Ca href=\&quot;https://developer.spotify.com/web-api/authorization-guide/#implicit_grant_flow\&quot; target=\&quot;_blank\&quot;\u003ESpotify Authentication guide\u003C/a\u003E to help you write the method.\n\n\n&quot;},{&quot;key&quot;:&quot;9_1_03836550072633578&quot;,&quot;text&quot;:&quot;Create a **src/util** directory and add a file called **Spotify.js**&quot;},{&quot;key&quot;:&quot;9_2_0008089519734341799&quot;,&quot;text&quot;:&quot;In **Spotify.js** create a `Spotify` module as an empty object.\n\nAt the bottom of **Spotify.js** export `Spotify`.&quot;},{&quot;key&quot;:&quot;9_3_06191077929057265&quot;,&quot;text&quot;:&quot;Above the empty object, declare an empty variable that will hold the user&#x27;s access token.&quot;},{&quot;key&quot;:&quot;9_4_05937956852543023&quot;,&quot;text&quot;:&quot;Inside the `Spotify` module, create a method called `getAccessToken`. \n\nCheck if the user&#x27;s access token is already set. If it is, return the value saved to access token.&quot;},{&quot;key&quot;:&quot;9_5_06370436735262666&quot;,&quot;text&quot;:&quot;If the access token is not already set, check the URL to see if it has just been obtained. \n\nYou will be using the \u003Ca href=\&quot;https://developer.spotify.com/web-api/authorization-guide/#implicit_grant_flow\&quot; target=\&quot;_blank\&quot;\u003EImplicit Grant Flow\u003C/a\u003E to setup a user&#x27;s account and make requests. The implicit grant flow returns a user&#x27;s access token in the URL.\n\nUse the guide to determine how to parse the URL and set values for your access token and expiration time. \n\nLook at the hint if you help parsing the URL.\n&quot;,&quot;hint&quot;:&quot;In the implicit grant flow, values for the access token and expiration time are in the URL parameter after authentication. \n\nUse `window.location.href` and the `.match()` method to retrieve the access token and expiration time from the URL.\n\nExample URL from Spotify API:\n```\nhttps://example.com/callback#access_token=NwAExz...BV3O2Tk\u0026token_type=Bearer\u0026expires_in=3600\u0026state=123\n```\n\nUse the `.match()` method on the URL string. Provide the regular expressions below as inputs:\n```\n/access_token=([^\u0026]*)/\n/expires_in=([^\u0026]*)/\n```&quot;},{&quot;key&quot;:&quot;9_6_06726121669387664&quot;,&quot;text&quot;:&quot;If the access token and expiration time are in the URL, implement the following steps:\n* Set the access token value\n* Set a variable for expiration time\n* Set the access token to expire at the value for expiration time\n* Clear the parameters from the URL, so the app doesn&#x27;t try grabbing the access token after it has expired\n\nThe hint below contains the code that wipes the access token and URL parameters.&quot;,&quot;hint&quot;:&quot;Use the following code to help you wipe the access token and URL parameters\n```js\nwindow.setTimeout(() =\u003E accessToken = &#x27;&#x27;, expiresIn * 1000);\nwindow.history.pushState(&#x27;Access Token&#x27;, null, &#x27;/&#x27;);\n```&quot;},{&quot;key&quot;:&quot;9_7_040025907679118355&quot;,&quot;text&quot;:&quot;The third condition is that the access token variable is empty and is not in the URL. \n\nBefore you write this conditional code block, you need to register your application using the \u003Ca href=\&quot;https://developer.spotify.com/my-applications/#!/applications\&quot; target=\&quot;_blank\&quot;\u003ESpotify application registration flow\u003C/a\u003E.\n\nGive your application a relevant name and description. Also, add the following Redirect URI: \n\n```\nhttp://localhost:3000/\n```&quot;},{&quot;key&quot;:&quot;9_8_07037098874982666&quot;,&quot;text&quot;:&quot;At the top of **Spotify.js** create constant variables for your application&#x27;s client ID and redirect URI. \n\nSet the client ID variable to the value provided on your application page.\n\nSet the redirect URI to `\&quot;http://localhost:3000/\&quot;`. &quot;},{&quot;key&quot;:&quot;9_9_06700146539270222&quot;,&quot;text&quot;:&quot;Back in your conditional statement, redirect users to the following URL:\n\n```\nhttps://accounts.spotify.com/authorize?client_id=CLIENT_ID\u0026response_type=token\u0026scope=playlist-modify-public\u0026redirect_uri=REDIRECT_URI\n```\nInterpolate your client ID and redirect URI variables In place of `CLIENT_ID` and `REDIRECT_URI`.&quot;,&quot;hint&quot;:&quot;To redirect a user, you must set `window.location` to the URL in the task above.&quot;}]},{&quot;heading&quot;:&quot;Implement Spotify Search Request&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;11_0_06119326158831333&quot;,&quot;text&quot;:&quot;In this assessment, you will create a method in **Spotify.js** that accepts a search term input, passes the search term value to a Spotify request, then returns the response as a list of tracks in JSON format.\n\nYou will need the user&#x27;s access token to make requests to the Spotify API. You will use the request parameters in step four of the \u003Ca href=\&quot;https://developer.spotify.com/web-api/authorization-guide/#implicit_grant_flow\&quot; target=\&quot;_blank\&quot;\u003Eimplicit grant flow\u003C/a\u003E to make requests. In the following steps, we will use `fetch()` to make our requests, but any method will work.\n\nYou should use the `/v1/search?type=TRACK` endpoint when making your request. Use the \u003Ca href=\&quot;https://developer.spotify.com/web-api/endpoint-reference/\&quot; target=\&quot;_blank\&quot;\u003ESpofity Web API Endpoint Reference\u003C/a\u003E to help format your request.\n&quot;},{&quot;key&quot;:&quot;11_0_08030047132314766&quot;,&quot;text&quot;:&quot;In the `Spotify` object, add a method called `search` that accepts a parameter for the user&#x27;s search term.\n\n`.search()` returns a promise that will eventually resolve to the list of tracks from the search.\n\n&quot;},{&quot;key&quot;:&quot;11_0_09908918239537263&quot;,&quot;text&quot;:&quot;Inside `.search()`, start the promise chain by returning a GET request (using `fetch()`) to the following Spotify endpoint:\n```\nhttps://api.spotify.com/v1/search?type=track\u0026q=TERM\n```\nReplace the value of  `TERM` with the value saved to the search term argument.\n\nAdd an Authorization header to the request containing the access token.\n\n\n\n&quot;,&quot;hint&quot;:&quot;You will need to pass a second argument to the `fetch` method. The second argument is an object with one field called `headers`. Set `headers` to an object with one `Authorization` property with the user&#x27;s access token. Use the format in step four of the \u003Ca href=\&quot;https://developer.spotify.com/web-api/authorization-guide/#implicit_grant_flow\&quot; target=\&quot;_blank\&quot;\u003Eimplicit grant flow\u003C/a\u003E.\n\nPass the following object as the second fetch parameter:\n\n```js\n{\n  headers: {Authorization: `Bearer ${accessToken}`}\n}\n```&quot;},{&quot;key&quot;:&quot;11_0_08596985616400705&quot;,&quot;text&quot;:&quot;Convert the returned response to JSON. \n\nThen, map the converted JSON to an array of tracks. If the JSON does not contain any tracks, return an empty array.\n\nThe mapped array should contain a list of track objects with the following properties:\n- ID \u0026mdash; returned as `track.id`\n- Name \u0026mdash; returned as `track.name`\n- Artist \u0026mdash; returned as `track.artists[0].name`\n- Album \u0026mdash; returned as `track.album.name`\n- URI \u0026mdash; returned as `track.uri`&quot;},{&quot;key&quot;:&quot;11_0_05527543062238054&quot;,&quot;text&quot;:&quot;In **App.js**, import `Spotify` and update the `.search()` method with the `Spotify.search()` method.\n\nUpdate the state of `searchResults` with the value resolved from `Spotify.search()`&#x27;s promise.&quot;}]},{&quot;heading&quot;:&quot;Save a User&#x27;s Playlist&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;11_0_07027903072074861&quot;,&quot;text&quot;:&quot;In this assessment, you will create a method called `savePlaylist` that writes the learner&#x27;s custom playlist in Jammming to their Spotify account. \n\nThe `.savePlaylist()` method accepts a playlist name and an array of track URIs. It makes the following three requests to the Spotify API:\n- GET current user&#x27;s ID\n- POST a new playlist with the input name to the current user&#x27;s Spotify account. Receive the playlist ID back from the request.\n- POST the track URIs to the newly-created playlist, referencing the current user&#x27;s account (ID) and the new playlist (ID)\n\nYou will update the `.savePlaylist()` method in **App.js** to use the new `Spotify.savePlaylist()` method.&quot;},{&quot;key&quot;:&quot;11_1_013857073744812753&quot;,&quot;text&quot;:&quot;Create a method in **Spotify.js** that accepts two arguments. The first argument is the name of the playlist. The second is an array of track URIs.\n\nInside the function, check if there are values saved to the method&#x27;s two arguments. If not, return.&quot;},{&quot;key&quot;:&quot;11_2_08457962543970676&quot;,&quot;text&quot;:&quot;Create three default variables:\n- An access token variable, set to the current user&#x27;s access token\n- A headers variable, set to an object with an `Authorization` parameter containing the user&#x27;s access token in the \u003Ca href=\&quot;https://developer.spotify.com/web-api/authorization-guide/#implicit_grant_flow\&quot; target=\&quot;_blank\&quot;\u003Eimplicit grant flow request format\u003C/a\u003E\n- An empty variable for the user&#x27;s ID\n&quot;},{&quot;key&quot;:&quot;11_3_07766586672015887&quot;,&quot;text&quot;:&quot;Make a request that returns the user&#x27;s Spotify username. \n\nConvert the response to JSON and save the response `id` parameter to the user&#x27;s ID variable.&quot;,&quot;hint&quot;:&quot;Make the request to the following Spotify endpoint:\n```\nhttps://api.spotify.com/v1/me\n```\nYou must pass a second argument with an object containing the `headers` object. See below\n```js\n{headers: headers}\n```\n&quot;},{&quot;key&quot;:&quot;11_4_01635080729179923&quot;,&quot;text&quot;:&quot;Use the returned user ID to make a POST request that creates a new playlist in the user&#x27;s account and returns a playlist ID.\n\nUse the \u003Ca href=\&quot;https://developer.spotify.com/web-api/playlist-endpoints/\&quot; target=\&quot;_blank\&quot;\u003ESpotify playlist endpoints\u003C/a\u003E to find a request that creates a new playlist.\n\nSet the playlist name to the value passed into the method.\n\nConvert the response to JSON and save the response `id` parameter to a variable called `playlistID`.\n&quot;,&quot;hint&quot;:&quot;Make a request to the following Spotify endpoint:\n```\n/v1/users/{user_id}/playlists\n```\nYou must pass a second argument that contains an object with parameters for `headers`, `method`, and `body`.&quot;},{&quot;key&quot;:&quot;11_5_07719585467725487&quot;,&quot;text&quot;:&quot;Use the returned user ID to make a POST request that creates a new playlist in the user&#x27;s account and returns a playlist ID.\n\nUse the \u003Ca href=\&quot;https://developer.spotify.com/web-api/playlist-endpoints/\&quot; target=\&quot;_blank\&quot;\u003ESpotify playlist endpoints\u003C/a\u003E to find a request that adds tracks to a playlist.\n\nSet the URIs parameter to an array of track URIs passed into the method.\n\nConvert the response to JSON and save the response `id` parameter to a variable called `playlistID`.\n&quot;,&quot;hint&quot;:&quot;Make a request to the following Spotify endpoint:\n```\n/v1/users/{user_id}/playlists/{playlist_id}/tracks\n```\nYou must pass a second argument that contains an object with parameters for `headers`, `method`, and `body`.&quot;},{&quot;key&quot;:&quot;11_7_023491174464549447&quot;,&quot;text&quot;:&quot;In **App.js** update the `.savePlaylist()` method to call `Spotify.savePlaylist()`.\n\nAfter you call `Spotify.savePlaylist()`, reset the state of `playlistName` to `&#x27;New Playlist&#x27;` and `searchResults` to an empty array.&quot;}]},{&quot;heading&quot;:&quot;Deploy (Optional)&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;12_0_06145072809326129&quot;,&quot;text&quot;:&quot;In this assessment, you will use \u003Ca href=\&quot;https://surge.sh/\&quot; target=\&quot;_blank\&quot;\u003Esurge\u003C/a\u003E to deploy your Jammming project.\n\nYou will start by installing surge globally.  \n\nIn your console, run `npm install --global surge`. &quot;},{&quot;key&quot;:&quot;12_3_03437786828149112&quot;,&quot;text&quot;:&quot;Before you deploy, you need to think of a domain name with the following format:\n```\nSOME_NAME.surge.sh\n```\n`SOME_NAME` can be replaced with anything you like. \n\nNext, you need to replace or add this URI to two locations in your project.\n- In **Spotify.js*, set `redirectUri` to your new domain\n- In your \u003Ca href=\&quot;https://developer.spotify.com/my-applications/#!/applications\&quot; target=\&quot;_blank\&quot;\u003ESpotify application\u003C/a\u003E, add your new domain as a redirect URI\n\n&quot;},{&quot;key&quot;:&quot;12_1_03484386078389601&quot;,&quot;text&quot;:&quot;Back in the command line, from the Jammming project&#x27;s root directory, run:\n ```\n$ npm run build\n```&quot;},{&quot;key&quot;:&quot;12_2_08614884249756591&quot;,&quot;text&quot;:&quot;`cd` into the `build` directory and run the command \n```\n$ surge\n``` \n\nFollow the steps on the screen. Change the domain value to your new URI.\n\nCongrats! You&#x27;ve just deployed a React App that queries the Spotify API!\n\n&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;000_blank_workspace&quot;,&quot;type&quot;:&quot;static&quot;,&quot;backend&quot;:&quot;workshop&quot;},&quot;components&quot;:{&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/programs/react/jammming/jamming_static/index.html&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/jammming/units/jammming/projects/jammming-prj.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/jammming/projects/jammming-prj&quot;,&quot;unit_slug&quot;:&quot;jammming&quot;,&quot;course_slug&quot;:&quot;jammming&quot;,&quot;private&quot;:false},&quot;feature-request-prj&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;uuid&quot;:&quot;909f5d388b134b5288504d4942a99443&quot;,&quot;slug&quot;:&quot;feature-request-prj&quot;,&quot;title&quot;:&quot;Feature Request: Jammming&quot;,&quot;description&quot;:&quot;Create the technical design document for a feature request built on the Jammming project&quot;,&quot;objective&quot;:&quot;In this project, you will select a feature that you think should be added to your Jammming app. You will use this \u003Ca href=\&quot;https://docs.google.com/document/d/1QIBjLcNH5t7FrPwuC7jNnhE1JPmwskdB7U7z0OSeDsU/edit?usp=sharing\&quot; target=\&quot;_blank\&quot;\u003Etechnical design document template\u003C/a\u003E to lay out all of the necessary functionality of this feature, how the feature should be implemented, and why you chose that specific approach. This is an essential step in the development process, so we encourage you to think carefully and thoroughly about your feature and implementation as you work on this project. \n\n\u003Ca href=\&quot;https://docs.google.com/document/d/1bHEQvYYAwSpAkdpv7hp8eu-iMnvqYVS4UffCLKvaKGg/edit?usp=sharing\&quot; target=\&quot;_blank\&quot;\u003EHere is an example of a technical design document\u003C/a\u003E for implementing multiple playlists in Jammming. You should use it as a resource when deciding what level of information you should include in your design document.\n\nYou can pick any feature you want for this project, but we have provided a list of potential options at the end of this article for inspiration. We can&#x27;t wait to see your cool new features and unique solutions!\n\n**How to Get Started**\n\nTo start this project, you will need to make a copy of our \u003Ca href=\&quot;https://docs.google.com/document/d/1QIBjLcNH5t7FrPwuC7jNnhE1JPmwskdB7U7z0OSeDsU/edit?usp=sharing\&quot; target=\&quot;_blank\&quot;\u003Etechnical design document template\u003C/a\u003E. Open the template in a new tab and then copy the file by selecting all of the content (by clicking and dragging over all of the content, or pressing Ctrl + A) and then pressing copy (by selecting the \&quot;Edit\&quot; tab and clicking \&quot;Copy\&quot;, or by pressing Ctrl + C). Then create a new document by navigating to docs.google.com and selecting \&quot;Start a New Document \u003E Blank\&quot;. Finally, paste the contents of the template into the new document (by selecting the \&quot;Edit\&quot; tab and clicking \&quot;Paste\&quot;, or by pressing Ctrl + V). Update the name of the document to something descriptive, and you&#x27;ll be ready to work on your project.\n\n**How to Submit Your Project**\n\nTo submit your final project, you will need to create a .txt file with a link to your technical design document. To create a link to your document, click the \&quot;Share\&quot; button at the top right of your Google Doc. A popup will appear. At the top of the popup, click the \&quot;Get shareable link\&quot; button to generate a link to your document. After clicking this button, a link should appear in the popup window. Above the link should be a button that says \&quot;Anyone can edit\&quot; on it. If it does not, click the button and switch it to \&quot;Anyone can edit\&quot;. Once this is done, press \&quot;Copy link\&quot; to the right of the link. \n\nOn your computer, create a new file in your text editor and paste the link into the file. Save this file as **jammming_feature_request.txt**. You should then submit this file to submit your project in the upcoming project submission screen.\n\n**Potential Jammming Features:**\n\n* Pressing enter triggers a search\n* Include preview samples for each track\n* Only display songs not currently present in the playlist in the search results\n* Add a loading screen while playlist is saving\n* Update the access token logic to expire at exactly the right time, instead of setting expiration from when the user initiates their next search\n* After user redirect on login, restoring the search term from before the redirect\n* Ensure playlist information doesn&#x27;t get cleared if a user has to refresh their access token&quot;,&quot;meta&quot;:{&quot;authors&quot;:[]},&quot;self_assessments&quot;:[{&quot;heading&quot;:&quot;Complete Project&quot;,&quot;tasks&quot;:[{&quot;key&quot;:&quot;0_0_013848782234249302&quot;,&quot;text&quot;:&quot;Use the information above to complete this project. Once completed, save the link to your Google document in a .txt file and upload using the project submission screen.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;000_blank_workspace&quot;,&quot;type&quot;:&quot;static&quot;,&quot;backend&quot;:&quot;workshop&quot;},&quot;components&quot;:{},&quot;filepath&quot;:&quot;new/content/courses/en/jammming/units/jammming/projects/feature-request-prj.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/jammming/projects/feature-request-prj&quot;,&quot;unit_slug&quot;:&quot;jammming&quot;,&quot;course_slug&quot;:&quot;jammming&quot;,&quot;private&quot;:false}},&quot;lessons_order&quot;:[],&quot;projects_order&quot;:[&quot;jammming-prj&quot;,&quot;feature-request-prj&quot;]},&quot;courseInMaintenanace&quot;:false,&quot;segment&quot;:null},&quot;projectPage&quot;:{&quot;selfAssessments&quot;:{}},&quot;prerender&quot;:{&quot;duration&quot;:253.92946999999998,&quot;hostname&quot;:&quot;app-089\n&quot;}}"><section class="_255U1OEW5iAFH7qz_pHXM8" data-reactroot="" data-reactid="1" data-react-checksum="636546405"><div class="fcn-projects francine" id="workspace" data-reactid="2"><header class="_2m_hDXMtwvETHFo3eGaTXE" data-react-header="true" data-reactid="3"><nav class="y7tvmmg7fKu4JpdaYECtN _2Tp4ILE5wDYNdLO-nT8psj" data-reactid="4"><section class="_2zSA2d9oAw82vmGaiCI6HM vE2U5Z1_1p0OevhTkRrpb" data-reactid="5"><div class="_3bI54mnYg5essxyEwnBsko _3nDVtg6dS-0_R6p0nDL-1S" data-reactid="6"><a class="_1xOZs_2pgZHAoG4MALaCgS" href="/" data-reactid="7"><img alt="Codecademy logo" class="_39eW0wHuW9g7pG5q6TF7cE" src="//production.cdmycdn.com/webpack/6f096e0f66e0de3b114ed95b7d1ff0d0.svg" data-reactid="8"/></a></div></section><section class="_2zSA2d9oAw82vmGaiCI6HM AcoUR5q2eKWoCC4M_4RZD" data-reactid="9"><a class="_10tr0UBdh7IJTF1w-ahcOa _2Ik8dH0qI7ki4IMCQbG6pZ" href="/learn/jammming" data-reactid="10"><i class="_2s1fAUUBvIvC87s1stozEY fcn-icon fcn-icon-arrowPrev" data-reactid="11"></i><!-- react-text: 12 -->Jammming<!-- /react-text --></a></section><section class="_2zSA2d9oAw82vmGaiCI6HM _1KKDVD6unnpNtKqV9PPUQP" data-reactid="13"><div class="_3bI54mnYg5essxyEwnBsko _1f1KmfrKUtLxZllTyx0TrC _3nDVtg6dS-0_R6p0nDL-1S _2kwp78w4gxSQjvTSajoa6Q" data-reactid="14"><div class="fcn-godex-status-container" data-reactid="15"><div class="fcn-godex-status--hidden fcn-godex-status" data-reactid="16"><span data-reactid="17"></span><div class="fcn-godex-status__glow" data-reactid="18"></div></div></div></div><div class="_3bI54mnYg5essxyEwnBsko _1f1KmfrKUtLxZllTyx0TrC _3nDVtg6dS-0_R6p0nDL-1S" data-reactid="19"><div class="_3wrXGt5j2uE4fjlPLrDXEA" data-reactid="20"><div class="_1XRkeRcO7hh1axYhmKiQMM _39K0C3ph1hpmLw6tsBfNnG GEk9Sbt3OmLggMB2aQtSj _1i2HDK_zSufmryADoGTYpD" data-reactid="21"><span data-reactid="22"><div class="_2gwf_JaG35W2Q5PrPxyOlQ _3vnnbQAlMOhQFZ-wuCOyca" data-reactid="23"><span class="new-cc-icon icon-bell" data-reactid="24"></span></div></span></div><!-- react-empty: 25 --></div></div><div class="_3bI54mnYg5essxyEwnBsko _1f1KmfrKUtLxZllTyx0TrC _3nDVtg6dS-0_R6p0nDL-1S" data-reactid="26"><div class="_3wrXGt5j2uE4fjlPLrDXEA" data-reactid="27"><div id="dropdown-toggle" class="_3beJdIRG9xxfeiRwaBD9Cp" data-reactid="28"><div class="Y8dknuoW8NLiudcM-zQib _1pl0auxsnexFW5uqwCQW_x _2tbl3cOSPjsfIWBMlHZgcG" data-reactid="29"><img class="wXEAS7H2e7UsikVkXNety" src="https://www.gravatar.com/avatar/dabd1ef362ea0704a56edbf80eb518aa?s=140&amp;d=retro" data-reactid="30"/></div></div><!-- react-empty: 31 --></div></div></section></nav></header><div class="discovery-cue discovery-cue--hidden" style="left:NaN%;top:NaN%;" data-reactid="32"><div class="discovery-cue--content-container" data-reactid="33"><div class="discovery-cue__arrow" data-reactid="34"></div><p class="discovery-cue--content" data-reactid="35">Drag the edges to resize the window.</p></div><div class="pulse" data-reactid="36"></div></div><div class="discovery-cue discovery-cue--hidden" style="left:NaN%;top:NaN%;" data-reactid="37"><div class="discovery-cue--content-container" data-reactid="38"><div class="discovery-cue__arrow" data-reactid="39"></div><p class="discovery-cue--content" data-reactid="40">In Projects, you can keep track of your progress as you go throught the tasks. Check each item as you complete it!</p></div><div class="pulse" data-reactid="41"></div></div><div class="fcn-grid" style="cursor:auto;" data-reactid="42"><div id="discovery-resize-1245" class="fcn-slot fcn-slot--no-top-neighbor fcn-slot--no-right-neighbor fcn-slot--no-bottom-neighbor" style="position:absolute;top:0%;right:0%;bottom:0%;left:33.33333333333333%;" data-fcn-arrangement="1245" data-reactid="43"><div class="fcn-component disabled" data-reactid="44"><div class="overlay" data-reactid="45"></div><div class="_1XRkeRcO7hh1axYhmKiQMM _3l5vJxhTbS1dLnkuNf4EaO CGAmiC7XFUbztkDJDC6gJ _2OvvmRIMuApp9TWMONyVY" data-reactid="46"><div class="_1XRkeRcO7hh1axYhmKiQMM _3zmXSoSKWDZwAbwY9BEJ3U" data-reactid="47"><div class="_1XRkeRcO7hh1axYhmKiQMM _39K0C3ph1hpmLw6tsBfNnG GEk9Sbt3OmLggMB2aQtSj _3VCznYtrtljbygtFhuZMu3" data-reactid="48"><i name="arrow-thin-left" class="_3QwoyZ-5nUFRrbC-LsvaCS _2DRF0mEeD3kktNs1rQjEmB" data-reactid="49"></i></div><div class="_1XRkeRcO7hh1axYhmKiQMM _39K0C3ph1hpmLw6tsBfNnG GEk9Sbt3OmLggMB2aQtSj _3VCznYtrtljbygtFhuZMu3" data-reactid="50"><i name="refresh" class="_3QwoyZ-5nUFRrbC-LsvaCS _9n2A_QUFSbpWAfM7S4vd0" data-reactid="51"></i></div><div class="_1XRkeRcO7hh1axYhmKiQMM _3l5vJxhTbS1dLnkuNf4EaO CGAmiC7XFUbztkDJDC6gJ _39K0C3ph1hpmLw6tsBfNnG GEk9Sbt3OmLggMB2aQtSj _3sETS9JJLUqGkoznU-8YAu" data-reactid="52"><input type="text" class="_11Puwwj-R91dvpnHmBsMY7" placeholder="Type URL here" data-reactid="53"/></div><div class="_1XRkeRcO7hh1axYhmKiQMM _39K0C3ph1hpmLw6tsBfNnG GEk9Sbt3OmLggMB2aQtSj _3VCznYtrtljbygtFhuZMu3" data-reactid="54"><i name="fullscreen" class="_3QwoyZ-5nUFRrbC-LsvaCS _2fS_OWNv_ecvbxHy0AwJKk" data-reactid="55"></i></div></div><div class="_1XRkeRcO7hh1axYhmKiQMM _3l5vJxhTbS1dLnkuNf4EaO CGAmiC7XFUbztkDJDC6gJ _2OvvmRIMuApp9TWMONyVY _2thFqfPxT5Ddfc14CgiZqJ" data-reactid="56"><div class="_1XRkeRcO7hh1axYhmKiQMM _3l5vJxhTbS1dLnkuNf4EaO CGAmiC7XFUbztkDJDC6gJ _2OvvmRIMuApp9TWMONyVY _39K0C3ph1hpmLw6tsBfNnG GEk9Sbt3OmLggMB2aQtSj _3bADe6ag4wwBffEyE7bJ2O _2MHZDvkiIZKj8Se2ziQBfY" data-reactid="57"><i name="explore" size="3" class="_3QwoyZ-5nUFRrbC-LsvaCS _1QDkpLnQ1Ql3Q8znCwA1p-" style="font-size:48px;" data-reactid="58"></i><div class="_1M6xxzpBgnnZ5pMaxvOnjP" data-reactid="59">Web Browser</div></div></div><!-- react-empty: 60 --></div></div></div><div id="discovery-resize-03" class="fcn-slot fcn-slot--no-top-neighbor fcn-slot--no-bottom-neighbor fcn-slot--no-left-neighbor" style="position:absolute;top:0%;right:66.66666666666667%;bottom:0%;left:0%;" data-fcn-arrangement="03" data-reactid="61"><div class="fcn-component" data-reactid="62"><div class="overlay" data-reactid="63"></div><div data-reactid="64"><div class="accordion-container" data-reactid="65"><div class="accordion" data-reactid="66"><div class="accordion-section" data-reactid="67"><div data-index="0" class="accordion-section-heading" data-reactid="68"><div class="_1XRkeRcO7hh1axYhmKiQMM _39K0C3ph1hpmLw6tsBfNnG learn-header" data-reactid="69"><i class="_3QwoyZ-5nUFRrbC-LsvaCS _23HcEzglQeRle46-UTPbAF _-28pXLJ13HOUfP_2pXrEi" name="objective" data-reactid="70"></i><!-- react-text: 71 -->Objective<!-- /react-text --></div></div><div class="accordion-section-body" data-reactid="72"><div class="_1PzvoBkjTI2SFvb5o9YAHW" data-reactid="73"><div class="_3gk_DKHLRJuZpEOugKJSur" data-reactid="74">Jammming</div><h1 class="_2zPle5d5nr1wxSe5NwLfcB" data-reactid="75">Jammming</h1><div class="jfdpfOzslotw2euWgxJNN" data-reactid="76"><p>In this project, you will build a React web application called <a href="http://jammming.s3-website-us-east-1.amazonaws.com/" target="_blank">Jammming</a>.  You will use your knowledge of React components, passing state, and requests with the Spotify API to build a website that allows users to search the Spotify library, create a custom playlist, then save it to their Spotify account.</p>
<p>We&#39;ve broken the Jammming project into 13 sections, called <em>assessments</em>. Each assessment contains a descriptive header with an introductory step, followed by a set of steps that guide you to the outcome. The first step of each assessment will explain the assessment&#39;s goal and provide a brief overview of how we&#39;ll accomplish it. Before you start the second step, try to plan how you would complete the assessment. As you finish the rest of the steps, reflect on how your solution compares to ours.</p>
<p>Although the project may seem daunting, we&#39;ll be with you every step of the way. Whether you&#39;re completing assessments without the additional steps or banging your head against the wall trying to understand a hint, always use best practices and reflect on your growth. </p>
<p>Good luck!</p>
</div></div></div></div><div class="accordion-section" data-reactid="77"><div data-index="1" class="accordion-section-heading" data-reactid="78"><div class="_1XRkeRcO7hh1axYhmKiQMM _39K0C3ph1hpmLw6tsBfNnG fcn-task-section__header" data-reactid="79"><i class="_3QwoyZ-5nUFRrbC-LsvaCS _2jyOQuyyXLbnU5qEkBUx8S _-28pXLJ13HOUfP_2pXrEi" name="instructions" data-reactid="80"></i><!-- react-text: 81 -->Tasks<!-- /react-text --><div class="fcn-task-counter" data-reactid="82"><span class="fcn-task-counter__count" style="margin-right:3px;" data-reactid="83"><!-- react-text: 84 -->0<!-- /react-text --><!-- react-text: 85 -->/<!-- /react-text --><!-- react-text: 86 -->99<!-- /react-text --></span><!-- react-text: 87 -->Complete<!-- /react-text --></div></div></div><div class="accordion-section-body" data-reactid="88"><div class="fcn-tasks" data-reactid="89"><span class="fcn-tasks__help" data-reactid="90">Mark the tasks as complete by checking them off</span><article class="fit-full fcn-task-header" data-reactid="91">Create a React Application</article><div data-reactid="92"><article class="fit-full fcn-task" data-reactid="93"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="94"><div class="" data-reactid="95"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="96"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="97"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="98"><span class="fcn-task__number" data-reactid="99"><!-- react-text: 100 -->1<!-- /react-text --><!-- react-text: 101 -->.<!-- /react-text --></span></div><div class="" data-reactid="102"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="103"><p>By the end of this assessment, you will be ready to start building your website. This section walks you through the process of setting up the directory structure and adding CSS presets.</p>
<p>To achieve this, you will create a boilerplate react app, remove unused files, and add <strong>reset.css</strong>, Google font links, and an updated favicon.</p>
<ul>
<li>Google fonts &mdash; <a href="https://fonts.googleapis.com/css?family=Poppins:600" target="_blank">Poppins</a> and <a href="https://fonts.googleapis.com/css?family=Work+Sans:300,500" target="_blank">Work Sans</a></li>
<li>Updated <a href="https://s3.amazonaws.com/codecademy-content/programs/react/jammming/favicon.ico" target="_blank">favicon</a></li>
</ul>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="104"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="105"><div class="" data-reactid="106"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="107"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="108"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="109"><span class="fcn-task__number" data-reactid="110"><!-- react-text: 111 -->2<!-- /react-text --><!-- react-text: 112 -->.<!-- /react-text --></span></div><div class="" data-reactid="113"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="114"><p>Create a new React application in a directory called <strong>Jammming</strong>.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="115"><span data-reactid="116"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="117"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="118"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="119"></span><!-- react-text: 120 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="121"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="122"><p>Use <code>create-react-app</code> with the name of the folder you want to create.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="123"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="124"><div class="" data-reactid="125"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="126"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="127"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="128"><span class="fcn-task__number" data-reactid="129"><!-- react-text: 130 -->3<!-- /react-text --><!-- react-text: 131 -->.<!-- /react-text --></span></div><div class="" data-reactid="132"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="133"><p>In <strong>index.html</strong>, update the <code>&lt;title&gt;</code> value to <code>Jammming</code>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="134"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="135"><div class="" data-reactid="136"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="137"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="138"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="139"><span class="fcn-task__number" data-reactid="140"><!-- react-text: 141 -->4<!-- /react-text --><!-- react-text: 142 -->.<!-- /react-text --></span></div><div class="" data-reactid="143"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="144"><p>Remove <strong>App.test.js</strong> and <strong>logo.svg</strong> from the <strong>src/</strong> folder, as you will not use them in this project.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="145"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="146"><div class="" data-reactid="147"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="148"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="149"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="150"><span class="fcn-task__number" data-reactid="151"><!-- react-text: 152 -->5<!-- /react-text --><!-- react-text: 153 -->.<!-- /react-text --></span></div><div class="" data-reactid="154"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="155"><p>Add <a href="https://s3.amazonaws.com/codecademy-content/programs/react/jammming/static-html-css/reset.txt" target="_blank">reset.css</a> to the <strong>public/</strong> directory and link to it in <strong>index.html</strong>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="156"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="157"><div class="" data-reactid="158"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="159"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="160"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="161"><span class="fcn-task__number" data-reactid="162"><!-- react-text: 163 -->6<!-- /react-text --><!-- react-text: 164 -->.<!-- /react-text --></span></div><div class="" data-reactid="165"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="166"><p>Link to the following Google fonts in <strong>index.html</strong>: </p>
<ul>
<li><a href="https://fonts.googleapis.com/css?family=Poppins:600" target="_blank">Poppins</a> </li>
<li><a href="https://fonts.googleapis.com/css?family=Work+Sans:300,500" target="_blank">Work Sans</a></li>
</ul>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="167"><span data-reactid="168"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="169"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="170"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="171"></span><!-- react-text: 172 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="173"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="174"><p>Link the Google fonts using the <code>&lt;link&gt;</code> tag.</p>
<pre><code class="lang-js"><span wrap="true" class="_18cGopAuUQVCOplu8pL9b5 _12mn8XNbByNCYxyzndA6if _3xp4c3Gvny8Oap6jE2-Q_ _2RE0-ZG6UYzWFn9_EER397 undefined" data-reactroot="" data-reactid="1" data-react-checksum="91684869"><div class="CodeMirror" data-reactid="2"><!-- react-text: 3 --><!-- /react-text --><span class="cm-tag bracket" data-reactid="4">&lt;</span><span class="cm-tag" data-reactid="5">link</span><!-- react-text: 6 --> <!-- /react-text --><span class="cm-attribute" data-reactid="7">href</span><!-- react-text: 8 -->=<!-- /react-text --><span class="cm-string" data-reactid="9">&quot;https://fonts.googleapis.com/css?family=Poppins:600&quot;</span><!-- react-text: 10 --> <!-- /react-text --><span class="cm-attribute" data-reactid="11">rel</span><!-- react-text: 12 -->=<!-- /react-text --><span class="cm-string" data-reactid="13">&quot;stylesheet&quot;</span><span class="cm-tag bracket" data-reactid="14">&gt;</span><!-- react-text: 15 -->
<!-- /react-text --><span class="cm-tag bracket" data-reactid="16">&lt;</span><span class="cm-tag" data-reactid="17">link</span><!-- react-text: 18 --> <!-- /react-text --><span class="cm-attribute" data-reactid="19">href</span><!-- react-text: 20 -->=<!-- /react-text --><span class="cm-string" data-reactid="21">&quot;https://fonts.googleapis.com/css?family=Work+Sans:300,500&quot;</span><!-- react-text: 22 --> <!-- /react-text --><span class="cm-attribute" data-reactid="23">rel</span><!-- react-text: 24 -->=<!-- /react-text --><span class="cm-string" data-reactid="25">&quot;stylesheet&quot;</span><span class="cm-tag bracket" data-reactid="26">&gt;</span></div></span>
</code></pre>
</div></div></article><article class="fit-full fcn-task" data-reactid="175"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="176"><div class="" data-reactid="177"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="178"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="179"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="180"><span class="fcn-task__number" data-reactid="181"><!-- react-text: 182 -->7<!-- /react-text --><!-- react-text: 183 -->.<!-- /react-text --></span></div><div class="" data-reactid="184"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="185"><p>Update <strong>favicon.ico</strong> with <a href="https://s3.amazonaws.com/codecademy-content/programs/react/jammming/favicon.ico" target="_blank">this image</a>.</p>
</div></div></div></article></div><article class="fit-full fcn-task-header" data-reactid="186">Create Static Components </article><div data-reactid="187"><article class="fit-full fcn-task" data-reactid="188"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="189"><div class="" data-reactid="190"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="191"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="192"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="193"><span class="fcn-task__number" data-reactid="194"><!-- react-text: 195 -->8<!-- /react-text --><!-- react-text: 196 -->.<!-- /react-text --></span></div><div class="" data-reactid="197"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="198"><p>In this assessment, you will create a JavaScript file and a CSS file for each of six components in the Jammming app. In the steps below, we will link to the raw HTML and CSS to help you write the JSX for each component. </p>
<p>In the HTML, we use comments to indicate where the JSX for one component renders another component. </p>
<p>The HTML and CSS for each of the six components are listed below:</p>
<ul>
<li><strong>App</strong> &mdash; <a href="" target="_blank">HTML</a> and <a href="" target="_blank">CSS</a></li>
<li><strong>SearchBar</strong> &mdash; <a href="" target="_blank">HTML</a> and <a href="" target="_blank">CSS</a></li>
<li><strong>SearchResults</strong> &mdash; <a href="" target="_blank">HTML</a> and <a href="" target="_blank">CSS</a></li>
<li><strong>Playlist</strong> &mdash; <a href="" target="_blank">HTML</a> and <a href="" target="_blank">CSS</a></li>
<li><strong>TrackList</strong> &mdash; <a href="" target="_blank">HTML</a> and <a href="" target="_blank">CSS</a></li>
<li><strong>Track</strong> &mdash; <a href="" target="_blank">HTML</a> and <a href="" target="_blank">CSS</a></li>
</ul>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="199"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="200"><div class="" data-reactid="201"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="202"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="203"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="204"><span class="fcn-task__number" data-reactid="205"><!-- react-text: 206 -->9<!-- /react-text --><!-- react-text: 207 -->.<!-- /react-text --></span></div><div class="" data-reactid="208"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="209"><p>Create a <strong>src/Components</strong> directory to hold the components.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="210"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="211"><div class="" data-reactid="212"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="213"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="214"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="215"><span class="fcn-task__number" data-reactid="216"><!-- react-text: 217 -->10<!-- /react-text --><!-- react-text: 218 -->.<!-- /react-text --></span></div><div class="" data-reactid="219"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="220"><p>Create a directory called <strong>App/</strong> in the <strong>Components/</strong> directory.</p>
<p>Add <strong>App.js</strong> and <strong>App.css</strong> to the <strong>App/</strong> folder and update the path in <strong>index.js</strong> accordingly. </p>
<p>Additionally add <a href="https://s3.amazonaws.com/codecademy-content/programs/react/jammming/background_photo_desktop.jpg" target="_blank">this background image</a> to the directory as well &mdash; it is used by the CSS file.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="221"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="222"><div class="" data-reactid="223"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="224"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="225"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="226"><span class="fcn-task__number" data-reactid="227"><!-- react-text: 228 -->11<!-- /react-text --><!-- react-text: 229 -->.<!-- /react-text --></span></div><div class="" data-reactid="230"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="231"><p>Inside of the <strong>App.js</strong> <code>.render()</code> method, add a return statement with JSX that renders <a href="https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/app/Apphtml.txt" target="_blank">this HTML</a> .</p>
<p>Follow the guidelines below when you write the HTML (linked above) as JSX:</p>
<ul>
<li>Change all class attributes to className.</li>
<li>Do not change the class values, as we will use them in a later step to add style.</li>
</ul>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="232"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="233"><div class="" data-reactid="234"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="235"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="236"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="237"><span class="fcn-task__number" data-reactid="238"><!-- react-text: 239 -->12<!-- /react-text --><!-- react-text: 240 -->.<!-- /react-text --></span></div><div class="" data-reactid="241"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="242"><p>Use the comments in the HTML document from the last step to determine the components you need to import into <strong>App.js</strong>.</p>
<p>Note, you will create a folder for each component. The JavaScript file and CSS files for each component will live in the component&#39;s folder. The folder, JavaScript file, and CSS file will all have the same name.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="243"><span data-reactid="244"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="245"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="246"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="247"></span><!-- react-text: 248 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="249"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="250"><p>The comments indicate you need to import the following three components:</p>
<ul>
<li><strong>Playlist</strong></li>
<li><strong>SearchBar</strong></li>
<li><strong>SearchResults</strong></li>
</ul>
</div></div></article><article class="fit-full fcn-task" data-reactid="251"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="252"><div class="" data-reactid="253"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="254"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="255"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="256"><span class="fcn-task__number" data-reactid="257"><!-- react-text: 258 -->13<!-- /react-text --><!-- react-text: 259 -->.<!-- /react-text --></span></div><div class="" data-reactid="260"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="261"><p>Add <a href="    
https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/app/AppCss.txt" target="_blank">this CSS</a> to the <strong>App.css</strong> file. </p>
<p>Import <strong>App.css</strong> into <strong>App.js</strong>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="262"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="263"><div class="" data-reactid="264"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="265"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="266"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="267"><span class="fcn-task__number" data-reactid="268"><!-- react-text: 269 -->14<!-- /react-text --><!-- react-text: 270 -->.<!-- /react-text --></span></div><div class="" data-reactid="271"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="272"><p>Create a <strong>SearchBar/</strong> directory in the <strong>Components/</strong> directory.</p>
<p>Inside of <strong>SearchBar/</strong>, add <strong>SearchBar.js</strong> and <strong>SearchBar.css</strong>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="273"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="274"><div class="" data-reactid="275"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="276"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="277"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="278"><span class="fcn-task__number" data-reactid="279"><!-- react-text: 280 -->15<!-- /react-text --><!-- react-text: 281 -->.<!-- /react-text --></span></div><div class="" data-reactid="282"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="283"><p>Inside of <strong>SearchBar.js</strong> create a component called <code>SearchBar</code> with a <code>.render()</code> method that returns <a href="    
https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/searchbar/searchbarhtml.txt" target="_blank">this HTML</a>.</p>
<p>Follow the guidelines below when you write the HTML (linked above) as JSX:</p>
<ul>
<li>Change all class attributes to className.</li>
<li>Do not change the class values, as we will use them in a later step to add style.</li>
</ul>
<p>Use the comments in the HTML document to determine if you need to import any components.</p>
<p>Export the <code>SearchBar</code> component.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="284"><span data-reactid="285"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="286"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="287"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="288"></span><!-- react-text: 289 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="290"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="291"><p>Follow these steps to create the <code>SearchBar</code> component:</p>
<ul>
<li>Import <code>React</code></li>
<li>Create a <code>SearchBar</code> class that extends <code>React.Component</code></li>
<li>Create a render method that returns the HTML linked above</li>
<li>You do not need to import any other components</li>
<li>Export <code>SearchBar</code></li>
</ul>
</div></div></article><article class="fit-full fcn-task" data-reactid="292"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="293"><div class="" data-reactid="294"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="295"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="296"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="297"><span class="fcn-task__number" data-reactid="298"><!-- react-text: 299 -->16<!-- /react-text --><!-- react-text: 300 -->.<!-- /react-text --></span></div><div class="" data-reactid="301"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="302"><p>Add <a href="https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/searchbar/searchbarCss.txt" target="_blank">this CSS</a> to the <strong>SearchBar.css</strong> file. </p>
<p>Import <strong>SearchBar.css</strong> into <strong>SearchBar.js</strong>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="303"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="304"><div class="" data-reactid="305"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="306"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="307"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="308"><span class="fcn-task__number" data-reactid="309"><!-- react-text: 310 -->17<!-- /react-text --><!-- react-text: 311 -->.<!-- /react-text --></span></div><div class="" data-reactid="312"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="313"><p>Create a <strong>SearchResults/</strong> directory in the <strong>Components/</strong> directory.</p>
<p>Inside of <strong>SearchResults/</strong>, add <strong>SearchResults.js</strong> and <strong>SearchResults.css</strong>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="314"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="315"><div class="" data-reactid="316"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="317"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="318"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="319"><span class="fcn-task__number" data-reactid="320"><!-- react-text: 321 -->18<!-- /react-text --><!-- react-text: 322 -->.<!-- /react-text --></span></div><div class="" data-reactid="323"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="324"><p>Inside of <strong>SearchResults.js</strong> create a component called <code>SearchResults</code> with a <code>.render()</code> method that returns <a href="    
https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/searchresults/searchresultsHtml.txt" target="_blank">this HTML</a>.</p>
<p>Follow the guidelines below when you write the HTML (linked above) as JSX:</p>
<ul>
<li>Change all class attributes to className.</li>
<li>Do not change the class values, as we will use them in a later step to add style.</li>
</ul>
<p>Use the comments in the HTML document to determine if you need to import any components.</p>
<p>Export the <code>SearchResults</code> component.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="325"><span data-reactid="326"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="327"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="328"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="329"></span><!-- react-text: 330 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="331"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="332"><p>Follow these steps to create the <code>SearchResults</code> component:</p>
<ul>
<li>Import <code>React</code></li>
<li>Create a <code>SearchResults</code> class that extends <code>React.Component</code></li>
<li>Create a render method that returns the HTML linked above</li>
<li>Import <code>TrackList</code> </li>
<li>Export <code>SearchResults</code></li>
</ul>
</div></div></article><article class="fit-full fcn-task" data-reactid="333"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="334"><div class="" data-reactid="335"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="336"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="337"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="338"><span class="fcn-task__number" data-reactid="339"><!-- react-text: 340 -->19<!-- /react-text --><!-- react-text: 341 -->.<!-- /react-text --></span></div><div class="" data-reactid="342"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="343"><p>Add <a href="    
https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/searchresults/searchresultsCss.txt" target="_blank">this CSS</a> to the <strong>SearchResults.css</strong> file. </p>
<p>Import <strong>SearchResults.css</strong> into <strong>SearchResults.js</strong>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="344"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="345"><div class="" data-reactid="346"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="347"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="348"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="349"><span class="fcn-task__number" data-reactid="350"><!-- react-text: 351 -->20<!-- /react-text --><!-- react-text: 352 -->.<!-- /react-text --></span></div><div class="" data-reactid="353"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="354"><p>Create a <strong>Playlist/</strong> directory in the <strong>Components/</strong> directory.</p>
<p>Inside of <strong>Playlist/</strong>, add <strong>Playlist.js</strong> and <strong>Playlist.css</strong>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="355"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="356"><div class="" data-reactid="357"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="358"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="359"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="360"><span class="fcn-task__number" data-reactid="361"><!-- react-text: 362 -->21<!-- /react-text --><!-- react-text: 363 -->.<!-- /react-text --></span></div><div class="" data-reactid="364"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="365"><p>Inside of <strong>Playlist.js</strong> create a component called <code>Playlist</code> with a <code>.render()</code> method that returns <a href="    
https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/playlist/playlisthtml.txt" target="_blank">this HTML</a>.</p>
<p>Follow the guidelines below when you write the HTML (linked above) as JSX:</p>
<ul>
<li>Change all class attributes to <code>className</code>.</li>
<li>Do not change the class values, as we will use them in a later step to add style.</li>
<li>Change the <code>value</code> property to <code>defaultValue</code> and set it equal to <code>{&#39;New Playlist&#39;}</code></li>
</ul>
<p>Use the comments in the HTML document to determine if you need to import any components.</p>
<p>Export the <code>Playlist</code> component</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="366"><span data-reactid="367"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="368"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="369"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="370"></span><!-- react-text: 371 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="372"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="373"><p>Follow these steps to create the <code>Playlist</code> component:</p>
<ul>
<li>Import <code>React</code></li>
<li>Create a <code>Playlist</code> class that extends <code>React.Component</code></li>
<li>Create a render method that returns the HTML linked above</li>
<li>Import <code>TrackList</code></li>
<li>Export <code>Playlist</code></li>
</ul>
</div></div></article><article class="fit-full fcn-task" data-reactid="374"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="375"><div class="" data-reactid="376"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="377"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="378"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="379"><span class="fcn-task__number" data-reactid="380"><!-- react-text: 381 -->22<!-- /react-text --><!-- react-text: 382 -->.<!-- /react-text --></span></div><div class="" data-reactid="383"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="384"><p>Add <a href="    
https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/playlist/playlistCss.txt" target="_blank">this CSS</a> to the <strong>Playlist.css</strong> file. </p>
<p>Import <strong>Playlist.css</strong> into <strong>Playlist.js</strong>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="385"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="386"><div class="" data-reactid="387"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="388"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="389"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="390"><span class="fcn-task__number" data-reactid="391"><!-- react-text: 392 -->23<!-- /react-text --><!-- react-text: 393 -->.<!-- /react-text --></span></div><div class="" data-reactid="394"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="395"><p>Create a <strong>TrackList/</strong> directory in the <strong>Components/</strong> directory.</p>
<p>Inside of <strong>TrackList/</strong>, add <strong>TrackList.js</strong> and <strong>TrackList.css</strong>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="396"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="397"><div class="" data-reactid="398"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="399"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="400"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="401"><span class="fcn-task__number" data-reactid="402"><!-- react-text: 403 -->24<!-- /react-text --><!-- react-text: 404 -->.<!-- /react-text --></span></div><div class="" data-reactid="405"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="406"><p>Inside of <strong>TrackList.js</strong> create a component called <code>TrackList</code> with a <code>.render()</code> method that returns <a href="    
https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/tracklist/tracklistHtml.txt" target="_blank">this HTML</a>.</p>
<p>Follow the guidelines below when you write the HTML (linked above) as JSX:</p>
<ul>
<li>Change all class attributes to <code>className</code>.</li>
<li>Do not modify the class values, as we will use them in a later step to add style.</li>
<li>For now, you will hard code three tracks. In a later assessment, we will replace the hard-coded values with tracks from Spotify.</li>
</ul>
<p>Use the comments in the HTML document to determine if you need to import any components.</p>
<p>Export the <code>TrackList</code> component.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="407"><span data-reactid="408"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="409"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="410"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="411"></span><!-- react-text: 412 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="413"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="414"><p>Follow these steps to create the <code>TrackList</code> component:</p>
<ul>
<li>Import <code>React</code></li>
<li>Create a <code>TrackList</code> class that extends <code>React.Component</code></li>
<li>Create a render method that returns the HTML linked above</li>
<li>Import <code>Track</code></li>
<li>Export <code>TrackList</code></li>
</ul>
</div></div></article><article class="fit-full fcn-task" data-reactid="415"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="416"><div class="" data-reactid="417"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="418"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="419"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="420"><span class="fcn-task__number" data-reactid="421"><!-- react-text: 422 -->25<!-- /react-text --><!-- react-text: 423 -->.<!-- /react-text --></span></div><div class="" data-reactid="424"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="425"><p>Add <a href="    
https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/tracklist/tracklistCss.txt" target="_blank">this CSS</a> to the <strong>TrackList.css</strong> file. </p>
<p>Import <strong>TrackList.css</strong> into <strong>TrackList.js</strong>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="426"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="427"><div class="" data-reactid="428"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="429"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="430"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="431"><span class="fcn-task__number" data-reactid="432"><!-- react-text: 433 -->26<!-- /react-text --><!-- react-text: 434 -->.<!-- /react-text --></span></div><div class="" data-reactid="435"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="436"><p>Create a <strong>Track/</strong> directory in the <strong>Components/</strong> directory.</p>
<p>Inside of <strong>Track/</strong>, add <strong>Track.js</strong> and <strong>Track.css</strong>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="437"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="438"><div class="" data-reactid="439"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="440"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="441"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="442"><span class="fcn-task__number" data-reactid="443"><!-- react-text: 444 -->27<!-- /react-text --><!-- react-text: 445 -->.<!-- /react-text --></span></div><div class="" data-reactid="446"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="447"><p>Inside of <strong>Track.js</strong> create a component called <code>Track</code> with a <code>.render()</code> method that returns <a href="https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/track/trackhtml.txt" target="_blank">this HTML</a>.</p>
<p>Follow the guidelines below when you write the HTML (linked above) as JSX:</p>
<ul>
<li>Change all class attributes to <code>className</code>.</li>
<li>Do not change the class values, as we will use them in a later step to add style.</li>
<li>Create a method called <code>renderAction</code> that displays a <code>-</code> anchor tag if a passed down property is true, and a <code>+</code> anchor tag if the property is false. Set the class name to <code>Track-action</code>.</li>
</ul>
<p>Use the comments in the HTML document to determine if you need to import any components.</p>
<p>Export the <code>Track</code> component.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="448"><span data-reactid="449"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="450"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="451"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="452"></span><!-- react-text: 453 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="454"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="455"><p>Follow these steps to create the <code>Track</code> component:</p>
<ul>
<li>Import <code>React</code></li>
<li>Create a <code>SearchBar</code> class that extends <code>React.Component</code></li>
<li>Create a render method that returns the HTML linked above</li>
<li>You do not need to import any other components</li>
<li>Export <code>Track</code></li>
</ul>
</div></div></article><article class="fit-full fcn-task" data-reactid="456"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="457"><div class="" data-reactid="458"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="459"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="460"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="461"><span class="fcn-task__number" data-reactid="462"><!-- react-text: 463 -->28<!-- /react-text --><!-- react-text: 464 -->.<!-- /react-text --></span></div><div class="" data-reactid="465"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="466"><p>Add <a href="https://s3.amazonaws.com/codecademy-content/programs/react/jammming/components-html-css/track/trackCss.txt" target="_blank">this CSS</a> to the <strong>Track.css</strong> file. </p>
<p>Import <strong>Track.css</strong> into <strong>Track.js</strong>.</p>
</div></div></div></article></div><article class="fit-full fcn-task-header" data-reactid="467">Pass Down Search Result and Render Result List</article><div data-reactid="468"><article class="fit-full fcn-task" data-reactid="469"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="470"><div class="" data-reactid="471"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="472"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="473"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="474"><span class="fcn-task__number" data-reactid="475"><!-- react-text: 476 -->29<!-- /react-text --><!-- react-text: 477 -->.<!-- /react-text --></span></div><div class="" data-reactid="478"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="479"><p>In this assessment, you will pass the state of a search results parameter through a series of components to render an array of tracks. </p>
<p>When a user requests data from Spotify, the JSON response will include a set of song tracks. Each <code>track</code> will contain a field for <code>name</code>, <code>artist</code>, and <code>album</code>. For each track in the results list, your Jammming web app will display the song name, artist, and album.</p>
<p>In a later assessment, you will build a method that sets the state of the search results parameter to a response from the Spotify API.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="480"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="481"><div class="" data-reactid="482"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="483"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="484"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="485"><span class="fcn-task__number" data-reactid="486"><!-- react-text: 487 -->30<!-- /react-text --><!-- react-text: 488 -->.<!-- /react-text --></span></div><div class="" data-reactid="489"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="490"><p>Add a constructor function to the <code>App</code> component, and pull in <code>props</code> from the <code>React.Component</code> class.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="491"><span data-reactid="492"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="493"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="494"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="495"></span><!-- react-text: 496 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="497"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="498"><p>Inside of the <code>App</code> component in <strong>App.js</strong>, create a constructor method.</p>
<p>Pass <code>props</code> to the constructor function and use <code>super()</code> to call the parent constructor.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="499"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="500"><div class="" data-reactid="501"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="502"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="503"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="504"><span class="fcn-task__number" data-reactid="505"><!-- react-text: 506 -->31<!-- /react-text --><!-- react-text: 507 -->.<!-- /react-text --></span></div><div class="" data-reactid="508"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="509"><p>Inside of the App component, set a hard-coded initial value for <code>this.state.searchResults</code>.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="510"><span data-reactid="511"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="512"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="513"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="514"></span><!-- react-text: 515 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="516"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="517"><p>Inside of the <code>App</code> constructor, set <code>this.state</code> to an object with a property called <code>searchResults</code> set to an array of objects, each containing <code>name</code>, <code>artist</code>, and <code>album</code> properties.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="518"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="519"><div class="" data-reactid="520"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="521"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="522"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="523"><span class="fcn-task__number" data-reactid="524"><!-- react-text: 525 -->32<!-- /react-text --><!-- react-text: 526 -->.<!-- /react-text --></span></div><div class="" data-reactid="527"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="528"><p>Pass the state of the <code>App</code> component&#39;s <code>searchResults</code> to the <code>SearchResults</code> component.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="529"><span data-reactid="530"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="531"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="532"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="533"></span><!-- react-text: 534 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="535"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="536"><p>Pass <code>this.state.searchResults</code> to the <code>SearchResults</code> component as an attribute called <code>searchResults</code>.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="537"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="538"><div class="" data-reactid="539"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="540"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="541"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="542"><span class="fcn-task__number" data-reactid="543"><!-- react-text: 544 -->33<!-- /react-text --><!-- react-text: 545 -->.<!-- /react-text --></span></div><div class="" data-reactid="546"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="547"><p>Pass the search results from the <code>SearchResults</code> component to the <code>TrackList</code> component.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="548"><span data-reactid="549"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="550"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="551"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="552"></span><!-- react-text: 553 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="554"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="555"><p>Inside the <strong>SearchResults.js</strong> <code>.render()</code> method, pass <code>this.props.searchResults</code> as an attribute called <code>tracks</code> in the <code>TrackList</code> component.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="556"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="557"><div class="" data-reactid="558"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="559"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="560"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="561"><span class="fcn-task__number" data-reactid="562"><!-- react-text: 563 -->34<!-- /react-text --><!-- react-text: 564 -->.<!-- /react-text --></span></div><div class="" data-reactid="565"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="566"><p>In the <code>TrackList</code> component, use the <code>.map()</code> method to render each track in the <code>tracks</code> property.</p>
<p>Set the <code>key</code> attribute to <code>track.id</code>.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="567"><span data-reactid="568"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="569"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="570"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="571"></span><!-- react-text: 572 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="573"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="574"><p>Inside the <code>TrackList</code> component&#39;s render method, use <code>.map()</code> on <code>this.props.tracks</code> to render each track in the list.</p>
<p>This will require you to pass the current <code>track</code> as an attribute called <code>track</code> to the <code>Track</code> component.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="575"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="576"><div class="" data-reactid="577"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="578"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="579"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="580"><span class="fcn-task__number" data-reactid="581"><!-- react-text: 582 -->35<!-- /react-text --><!-- react-text: 583 -->.<!-- /react-text --></span></div><div class="" data-reactid="584"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="585"><p>Render the track name, artist, and album. </p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="586"><span data-reactid="587"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="588"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="589"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="590"></span><!-- react-text: 591 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="592"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="593"><p>Use the following property calls to access the track&#39;s name, artist, and album:</p>
<ul>
<li><code>this.props.track.name</code></li>
<li><code>this.props.track.artist</code></li>
<li><code>this.props.track.album</code></li>
</ul>
</div></div></article></div><article class="fit-full fcn-task-header" data-reactid="594">Pass down Playlist to TrackList</article><div data-reactid="595"><article class="fit-full fcn-task" data-reactid="596"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="597"><div class="" data-reactid="598"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="599"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="600"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="601"><span class="fcn-task__number" data-reactid="602"><!-- react-text: 603 -->36<!-- /react-text --><!-- react-text: 604 -->.<!-- /react-text --></span></div><div class="" data-reactid="605"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="606"><p>In this assessment, you will pass the state of a user&#39;s custom playlist title and tracks from the App component down to components that render them.</p>
<p>When a user adds songs from the search results list to their playlist, a method will update the state of a playlist parameter in <strong>App.js</strong>, and Jammming will render the song in the user&#39;s playlist. </p>
<p>In a later assessment, you will write methods that add and remove songs from the playlist. You will also write a method that updates the playlist&#39;s title.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="607"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="608"><div class="" data-reactid="609"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="610"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="611"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="612"><span class="fcn-task__number" data-reactid="613"><!-- react-text: 614 -->37<!-- /react-text --><!-- react-text: 615 -->.<!-- /react-text --></span></div><div class="" data-reactid="616"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="617"><p>Add hard-coded values for <code>playlistName</code> and <code>playlistTracks</code> to state in <strong>App.js</strong>.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="618"><span data-reactid="619"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="620"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="621"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="622"></span><!-- react-text: 623 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="624"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="625"><p>You can set <code>playlistName</code> to any string. </p>
<p>The <code>playlistTracks</code> value should be an array of objects, each containing <code>name</code>, <code>artist</code>, and <code>album</code> properties.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="626"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="627"><div class="" data-reactid="628"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="629"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="630"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="631"><span class="fcn-task__number" data-reactid="632"><!-- react-text: 633 -->38<!-- /react-text --><!-- react-text: 634 -->.<!-- /react-text --></span></div><div class="" data-reactid="635"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="636"><p>Pass the playlist name and tracks from the <code>App</code> component to the <code>Playlist</code> component.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="637"><span data-reactid="638"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="639"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="640"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="641"></span><!-- react-text: 642 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="643"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="644"><p>Inside the <strong>App.js</strong> <code>.render()</code> method, pass <code>this.state.playlistName</code> and <code>this.state.playlistTracks</code> as attributes called <code>playlistName</code> and <code>playlistTracks</code> in the <code>Playlist</code> component.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="645"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="646"><div class="" data-reactid="647"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="648"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="649"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="650"><span class="fcn-task__number" data-reactid="651"><!-- react-text: 652 -->39<!-- /react-text --><!-- react-text: 653 -->.<!-- /react-text --></span></div><div class="" data-reactid="654"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="655"><p>Pass the playlist tracks from the <code>Playlist</code> component to the <code>TrackList</code> component.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="656"><span data-reactid="657"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="658"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="659"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="660"></span><!-- react-text: 661 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="662"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="663"><p>Inside the <strong>Playlist.js</strong> <code>.render()</code> method, pass <code>this.props.playlistTracks</code> as an attribute called <code>tracks</code> in the <code>TrackList</code> component.</p>
</div></div></article></div><article class="fit-full fcn-task-header" data-reactid="664">Add Tracks to a Playlist</article><div data-reactid="665"><article class="fit-full fcn-task" data-reactid="666"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="667"><div class="" data-reactid="668"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="669"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="670"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="671"><span class="fcn-task__number" data-reactid="672"><!-- react-text: 673 -->40<!-- /react-text --><!-- react-text: 674 -->.<!-- /react-text --></span></div><div class="" data-reactid="675"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="676"><p>In this assessment, you will implement a process for adding a song from the search results track list to the user&#39;s custom playlist. </p>
<p>You will add a method to <strong>App.js</strong> called <code>addTrack</code> that adds a song to the playlist state. The application passes the method through a series of components to <code>Track</code>. The user can trigger the <code>.addTrack()</code> method by clicking the <code>+</code> sign from the search results list.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="677"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="678"><div class="" data-reactid="679"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="680"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="681"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="682"><span class="fcn-task__number" data-reactid="683"><!-- react-text: 684 -->41<!-- /react-text --><!-- react-text: 685 -->.<!-- /react-text --></span></div><div class="" data-reactid="686"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="687"><p>In <strong>App.js</strong> create a method called <code>addTrack</code> with the following functionality:</p>
<ul>
<li>Accepts a <code>track</code> argument</li>
<li>Use the playlist&#39;s <code>id</code> property to check if the current song is in the <code>playlistTracks</code> state. </li>
<li>If the <code>id</code> is new, add the song to the end of the playlist.</li>
<li>Set the new state of the playlist</li>
</ul>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="688"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="689"><div class="" data-reactid="690"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="691"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="692"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="693"><span class="fcn-task__number" data-reactid="694"><!-- react-text: 695 -->42<!-- /react-text --><!-- react-text: 696 -->.<!-- /react-text --></span></div><div class="" data-reactid="697"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="698"><p>Bind the current value of <code>this</code> to <code>.addTrack()</code>.</p>
<p>Pass <code>.addTrack()</code> to the <code>SearchResults</code> component as an <code>onAdd</code> attribute.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="699"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="700"><div class="" data-reactid="701"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="702"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="703"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="704"><span class="fcn-task__number" data-reactid="705"><!-- react-text: 706 -->43<!-- /react-text --><!-- react-text: 707 -->.<!-- /react-text --></span></div><div class="" data-reactid="708"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="709"><p>Pass <code>onAdd</code> from the <code>SearchResults</code> component to the <code>TrackList</code> component.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="710"><span data-reactid="711"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="712"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="713"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="714"></span><!-- react-text: 715 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="716"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="717"><p>Inside the <strong>SearchResults.js</strong> <code>.render()</code> method, pass <code>this.props.onAdd</code> as an attribute called <code>onAdd</code> to the <code>TrackList</code> component.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="718"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="719"><div class="" data-reactid="720"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="721"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="722"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="723"><span class="fcn-task__number" data-reactid="724"><!-- react-text: 725 -->44<!-- /react-text --><!-- react-text: 726 -->.<!-- /react-text --></span></div><div class="" data-reactid="727"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="728"><p>Pass <code>onAdd</code> from the <code>TrackList</code> component to the <code>Track</code> component.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="729"><span data-reactid="730"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="731"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="732"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="733"></span><!-- react-text: 734 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="735"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="736"><p>Inside the <strong>TrackList.js</strong> <code>.render()</code> method, pass <code>this.props.onAdd</code> as an attribute called <code>onAdd</code> to the <code>Track</code> component.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="737"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="738"><div class="" data-reactid="739"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="740"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="741"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="742"><span class="fcn-task__number" data-reactid="743"><!-- react-text: 744 -->45<!-- /react-text --><!-- react-text: 745 -->.<!-- /react-text --></span></div><div class="" data-reactid="746"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="747"><p>Create an <code>.addTrack()</code> method in the <code>Track</code> component. Use it to add <code>this.props.track</code> to the playlist.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="748"><span data-reactid="749"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="750"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="751"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="752"></span><!-- react-text: 753 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="754"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="755"><p>Pass <code>this.props.track</code> to <code>this.props.onAdd</code>.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="756"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="757"><div class="" data-reactid="758"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="759"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="760"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="761"><span class="fcn-task__number" data-reactid="762"><!-- react-text: 763 -->46<!-- /react-text --><!-- react-text: 764 -->.<!-- /react-text --></span></div><div class="" data-reactid="765"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="766"><p>Add a constructor to the <code>Track</code> component. Call <code>super(props)</code> in the constructor method.</p>
<p>Bind <code>this.addTrack()</code> to the current value of <code>this</code> in the constructor method.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="767"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="768"><div class="" data-reactid="769"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="770"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="771"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="772"><span class="fcn-task__number" data-reactid="773"><!-- react-text: 774 -->47<!-- /react-text --><!-- react-text: 775 -->.<!-- /react-text --></span></div><div class="" data-reactid="776"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="777"><p>In the <strong>Track.js</strong>  <code>+</code> element, add an <code>onClick</code> property with the value set to <code>this.addTrack</code>.</p>
</div></div></div></article></div><article class="fit-full fcn-task-header" data-reactid="778">Remove Tracks from a Playlist</article><div data-reactid="779"><article class="fit-full fcn-task" data-reactid="780"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="781"><div class="" data-reactid="782"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="783"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="784"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="785"><span class="fcn-task__number" data-reactid="786"><!-- react-text: 787 -->48<!-- /react-text --><!-- react-text: 788 -->.<!-- /react-text --></span></div><div class="" data-reactid="789"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="790"><p>In this assessment, you will implement a process that removes a song from a user&#39;s custom playlist when the user selects the <code>-</code> sign inside of a rendered track. </p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="791"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="792"><div class="" data-reactid="793"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="794"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="795"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="796"><span class="fcn-task__number" data-reactid="797"><!-- react-text: 798 -->49<!-- /react-text --><!-- react-text: 799 -->.<!-- /react-text --></span></div><div class="" data-reactid="800"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="801"><p>In <strong>App.js</strong> create a method called <code>removeTrack</code> with the following functionality:</p>
<ul>
<li>Accepts a track argument</li>
<li>Uses the track&#39;s <code>id</code> property to filter it out of <code>playlistTracks</code></li>
<li>Sets the new state of the playlist</li>
</ul>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="802"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="803"><div class="" data-reactid="804"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="805"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="806"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="807"><span class="fcn-task__number" data-reactid="808"><!-- react-text: 809 -->50<!-- /react-text --><!-- react-text: 810 -->.<!-- /react-text --></span></div><div class="" data-reactid="811"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="812"><p>In the <code>App</code> constructor method, bind the current value of <code>this</code> to <code>.removeTrack()</code>.</p>
<p>Pass <code>.removeTrack()</code> to the <code>Playlist</code> component as an <code>onRemove</code> attribute.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="813"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="814"><div class="" data-reactid="815"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="816"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="817"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="818"><span class="fcn-task__number" data-reactid="819"><!-- react-text: 820 -->51<!-- /react-text --><!-- react-text: 821 -->.<!-- /react-text --></span></div><div class="" data-reactid="822"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="823"><p>Pass <code>onRemove</code> from the <code>Playlist</code> component to the <code>TrackList</code> component.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="824"><span data-reactid="825"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="826"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="827"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="828"></span><!-- react-text: 829 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="830"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="831"><p>Inside the <strong>Playlist.js</strong> <code>.render()</code> method, pass <code>this.props.onRemove</code> as an attribute called <code>onRemove</code> in the <code>TrackList</code> component.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="832"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="833"><div class="" data-reactid="834"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="835"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="836"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="837"><span class="fcn-task__number" data-reactid="838"><!-- react-text: 839 -->52<!-- /react-text --><!-- react-text: 840 -->.<!-- /react-text --></span></div><div class="" data-reactid="841"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="842"><p>Pass <code>onRemove</code> from the <code>TrackList</code> component to the <code>Track</code> component.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="843"><span data-reactid="844"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="845"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="846"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="847"></span><!-- react-text: 848 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="849"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="850"><p>Inside the <strong>TrackList.js</strong> <code>.render()</code> method, pass <code>this.props.onRemove</code> as an attribute called <code>onRemove</code> in the <code>Track</code> component.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="851"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="852"><div class="" data-reactid="853"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="854"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="855"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="856"><span class="fcn-task__number" data-reactid="857"><!-- react-text: 858 -->53<!-- /react-text --><!-- react-text: 859 -->.<!-- /react-text --></span></div><div class="" data-reactid="860"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="861"><p>Create a <code>.removeTrack()</code> method in the <code>Track</code> component. Use it to remove <code>this.props.track</code> from the playlist.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="862"><span data-reactid="863"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="864"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="865"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="866"></span><!-- react-text: 867 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="868"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="869"><p>Pass <code>this.props.track</code> to <code>this.props.onRemove</code>.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="870"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="871"><div class="" data-reactid="872"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="873"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="874"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="875"><span class="fcn-task__number" data-reactid="876"><!-- react-text: 877 -->54<!-- /react-text --><!-- react-text: 878 -->.<!-- /react-text --></span></div><div class="" data-reactid="879"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="880"><p>In <strong>Track.js</strong>, bind <code>this.addTrack()</code> to the current value of <code>this</code> in the constructor method.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="881"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="882"><div class="" data-reactid="883"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="884"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="885"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="886"><span class="fcn-task__number" data-reactid="887"><!-- react-text: 888 -->55<!-- /react-text --><!-- react-text: 889 -->.<!-- /react-text --></span></div><div class="" data-reactid="890"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="891"><p>In the <strong>Track.js</strong>  <code>-</code> element, add an <code>onClick</code> property with the value set to the <code>this.removeTrack</code> method.</p>
</div></div></div></article></div><article class="fit-full fcn-task-header" data-reactid="892">Change the Name of a Playlist</article><div data-reactid="893"><article class="fit-full fcn-task" data-reactid="894"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="895"><div class="" data-reactid="896"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="897"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="898"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="899"><span class="fcn-task__number" data-reactid="900"><!-- react-text: 901 -->56<!-- /react-text --><!-- react-text: 902 -->.<!-- /react-text --></span></div><div class="" data-reactid="903"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="904"><p>In this assessment, you will implement code that allows a learner to change the name of their playlist, and save the updated value to the <code>App</code> component&#39;s state.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="905"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="906"><div class="" data-reactid="907"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="908"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="909"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="910"><span class="fcn-task__number" data-reactid="911"><!-- react-text: 912 -->57<!-- /react-text --><!-- react-text: 913 -->.<!-- /react-text --></span></div><div class="" data-reactid="914"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="915"><p>In <strong>App.js</strong> create a method called <code>updatePlaylistName</code> with the following functionality:</p>
<ul>
<li>Accepts a name argument</li>
<li>Sets the state of the playlist name to the input argument</li>
</ul>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="916"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="917"><div class="" data-reactid="918"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="919"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="920"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="921"><span class="fcn-task__number" data-reactid="922"><!-- react-text: 923 -->58<!-- /react-text --><!-- react-text: 924 -->.<!-- /react-text --></span></div><div class="" data-reactid="925"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="926"><p>In the <code>App</code> constructor method, bind <code>this</code> to <code>.updatePlaylistName()</code>.</p>
<p>Pass <code>updatePlaylistName</code> to the <code>Playlist</code> component as an attribute named <code>onNameChange</code>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="927"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="928"><div class="" data-reactid="929"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="930"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="931"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="932"><span class="fcn-task__number" data-reactid="933"><!-- react-text: 934 -->59<!-- /react-text --><!-- react-text: 935 -->.<!-- /react-text --></span></div><div class="" data-reactid="936"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="937"><p>In the <code>Playlist</code> component, create a method called <code>handleNameChange</code>.</p>
<p>The method should accept an event that is triggered by an <code>onChange</code> attribute in the <code>Playlist</code> component&#39;s <code>&lt;input&gt;</code> element.</p>
<p>Inside the method, call <code>.onNameChange()</code> with the event target&#39;s value (from the <code>&lt;input&gt;</code> element).</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="938"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="939"><div class="" data-reactid="940"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="941"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="942"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="943"><span class="fcn-task__number" data-reactid="944"><!-- react-text: 945 -->60<!-- /react-text --><!-- react-text: 946 -->.<!-- /react-text --></span></div><div class="" data-reactid="947"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="948"><p>Add a constructor to the <code>Playlist</code> component. Call <code>super(props)</code> in the constructor method.</p>
<p>Bind the current value of <code>this</code> to <code>.onNameChange()</code>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="949"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="950"><div class="" data-reactid="951"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="952"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="953"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="954"><span class="fcn-task__number" data-reactid="955"><!-- react-text: 956 -->61<!-- /react-text --><!-- react-text: 957 -->.<!-- /react-text --></span></div><div class="" data-reactid="958"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="959"><p>In the <code>Playlist</code> render method, pass <code>.handleNameChange()</code> to an <code>onChange</code> property.</p>
</div></div></div></article></div><article class="fit-full fcn-task-header" data-reactid="960">Create a Method that Saves the Playlist to a User&#x27;s Account</article><div data-reactid="961"><article class="fit-full fcn-task" data-reactid="962"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="963"><div class="" data-reactid="964"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="965"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="966"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="967"><span class="fcn-task__number" data-reactid="968"><!-- react-text: 969 -->62<!-- /react-text --><!-- react-text: 970 -->.<!-- /react-text --></span></div><div class="" data-reactid="971"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="972"><p>In this assessment, you will create a method that will save a user&#39;s playlist to their Spotify account and resets the state of the playlist name and tracks array.</p>
<p>To accomplish the goal of this assessment, you will need to access a <code>track</code> property named <a href="https://developer.spotify.com/web-api/user-guide/#spotify-uris-ids">uri</a>. Spotify uses this field to reference tracks in the Spotify library.   You will create an array containing the <code>uri</code> of each track in the <code>playlistTracks</code> property.  </p>
<p>In a later assessment, you will pass the playlist name and the array of <code>uri</code>s to a Spotify-linked method that writes the tracks in <code>playlistTracks</code> to a user&#39;s account.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="973"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="974"><div class="" data-reactid="975"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="976"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="977"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="978"><span class="fcn-task__number" data-reactid="979"><!-- react-text: 980 -->63<!-- /react-text --><!-- react-text: 981 -->.<!-- /react-text --></span></div><div class="" data-reactid="982"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="983"><p>In <strong>App.js</strong> create a method called <code>savePlaylist</code> with the following functionality:</p>
<ul>
<li>Generates an array of <code>uri</code> values called <code>trackURIs</code> from the <code>playlistTracks</code> property.</li>
<li>In a later step, you will pass the <code>trackURIs</code> array and <code>playlistName</code> to a method that will save the user&#39;s playlist to their account.</li>
</ul>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="984"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="985"><div class="" data-reactid="986"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="987"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="988"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="989"><span class="fcn-task__number" data-reactid="990"><!-- react-text: 991 -->64<!-- /react-text --><!-- react-text: 992 -->.<!-- /react-text --></span></div><div class="" data-reactid="993"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="994"><p>Bind the current value of <code>this</code> to <code>.savePlaylist()</code>.</p>
<p>Pass <code>savePlaylist</code> to the <code>Playlist</code> component as an attribute called <code>onSave</code>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="995"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="996"><div class="" data-reactid="997"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="998"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="999"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1000"><span class="fcn-task__number" data-reactid="1001"><!-- react-text: 1002 -->65<!-- /react-text --><!-- react-text: 1003 -->.<!-- /react-text --></span></div><div class="" data-reactid="1004"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1005"><p>In the <strong>Playlist.js</strong>  <code>SAVE TO SPOTIFY</code> element, add an <code>onClick</code> property with the value set to <code>this.props.onSave</code>.</p>
</div></div></div></article></div><article class="fit-full fcn-task-header" data-reactid="1006">Hook up Search Bar to Spotify Search</article><div data-reactid="1007"><article class="fit-full fcn-task" data-reactid="1008"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1009"><div class="" data-reactid="1010"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1011"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1012"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1013"><span class="fcn-task__number" data-reactid="1014"><!-- react-text: 1015 -->66<!-- /react-text --><!-- react-text: 1016 -->.<!-- /react-text --></span></div><div class="" data-reactid="1017"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1018"><p>In this assessment, you will create a method that updates the <code>searchResults</code> parameter in the <code>App</code> component with a user&#39;s search results. You will write the logic that allows a user to enter a search parameter, receives a response from the Spotify API, and updates the <code>searchResults</code> state with the results from a Spotify request.</p>
<p>In a later assessment, you will hook the <code>.search()</code> method up to the Spotify API. </p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1019"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1020"><div class="" data-reactid="1021"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1022"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1023"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1024"><span class="fcn-task__number" data-reactid="1025"><!-- react-text: 1026 -->67<!-- /react-text --><!-- react-text: 1027 -->.<!-- /react-text --></span></div><div class="" data-reactid="1028"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1029"><p>In <strong>App.js</strong> create a method called <code>search</code> with the following functionality:</p>
<ul>
<li>Accepts a search term</li>
<li>Logs the term to the console</li>
</ul>
<p>In a later assessment, we will hook this method up to the Spotify API.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1030"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1031"><div class="" data-reactid="1032"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1033"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1034"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1035"><span class="fcn-task__number" data-reactid="1036"><!-- react-text: 1037 -->68<!-- /react-text --><!-- react-text: 1038 -->.<!-- /react-text --></span></div><div class="" data-reactid="1039"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1040"><p>In the <code>App</code> constructor method, bind <code>this</code> to <code>.search()</code>. In a later assessment, we will use <code>this</code> in <code>.search()</code>.</p>
<p>Pass <code>.search()</code> to the <code>SearchBar</code> component as an <code>onSearch</code> attribute.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1041"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1042"><div class="" data-reactid="1043"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1044"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1045"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1046"><span class="fcn-task__number" data-reactid="1047"><!-- react-text: 1048 -->69<!-- /react-text --><!-- react-text: 1049 -->.<!-- /react-text --></span></div><div class="" data-reactid="1050"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1051"><p>In <strong>SearchBar.js</strong>, create a method called <code>search</code> that passes the state of the term to <code>this.props.onSearch</code>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1052"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1053"><div class="" data-reactid="1054"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1055"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1056"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1057"><span class="fcn-task__number" data-reactid="1058"><!-- react-text: 1059 -->70<!-- /react-text --><!-- react-text: 1060 -->.<!-- /react-text --></span></div><div class="" data-reactid="1061"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1062"><p>In the <code>SearchBar</code> component, create a contstructor method with a call to <code>super(props)</code>. </p>
<p>Inside of the constructor, bind the current value of <code>this</code> to <code>.search()</code>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1063"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1064"><div class="" data-reactid="1065"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1066"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1067"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1068"><span class="fcn-task__number" data-reactid="1069"><!-- react-text: 1070 -->71<!-- /react-text --><!-- react-text: 1071 -->.<!-- /react-text --></span></div><div class="" data-reactid="1072"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1073"><p>In <strong>SearchBar.js</strong> create a method called <code>handleTermChange</code> with the following functionality:</p>
<ul>
<li>Accepts an event argument</li>
<li>Sets the state of the search bar&#39;s term to the event target&#39;s value.</li>
</ul>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1074"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1075"><div class="" data-reactid="1076"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1077"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1078"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1079"><span class="fcn-task__number" data-reactid="1080"><!-- react-text: 1081 -->72<!-- /react-text --><!-- react-text: 1082 -->.<!-- /react-text --></span></div><div class="" data-reactid="1083"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1084"><p>In the <strong>SearchBar.js</strong> constructor method, bind the current value of <code>this</code> to <code>this.search</code>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1085"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1086"><div class="" data-reactid="1087"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1088"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1089"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1090"><span class="fcn-task__number" data-reactid="1091"><!-- react-text: 1092 -->73<!-- /react-text --><!-- react-text: 1093 -->.<!-- /react-text --></span></div><div class="" data-reactid="1094"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1095"><p>In the search bar&#39;s <code>&lt;input&gt;</code> element, add an <code>onChange</code> attribute and set it equal to <code>this.handleTermChange</code>.</p>
</div></div></div></article></div><article class="fit-full fcn-task-header" data-reactid="1096">Obtain a Spotify Access Token</article><div data-reactid="1097"><article class="fit-full fcn-task" data-reactid="1098"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1099"><div class="" data-reactid="1100"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1101"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1102"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1103"><span class="fcn-task__number" data-reactid="1104"><!-- react-text: 1105 -->74<!-- /react-text --><!-- react-text: 1106 -->.<!-- /react-text --></span></div><div class="" data-reactid="1107"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1108"><p>In the next few assessments, you will write three methods that accomplish the following: </p>
<ul>
<li>Get a Spotify user&#39;s access token </li>
<li>Send a search request to the Spotify API </li>
<li>Save a user&#39;s playlist to their Spotify account.</li>
</ul>
<p>Before you begin, you will need to create an empty JavaScript module called <code>Spotify</code> located in <strong>src/util/Spotify.js</strong>. </p>
<p>In this assessment, you will register a Spotify application and create a method called <code>getAccessToken</code> in the <code>Spotify</code> module. The method will get a user&#39;s access token so that they can make requests to the Spotify API.</p>
<p>Use the <a href="https://developer.spotify.com/my-applications/#!/applications" target="_blank">Spotify Applications Registration Flow</a> and <a href="https://developer.spotify.com/web-api/authorization-guide/#implicit_grant_flow" target="_blank">Spotify Authentication guide</a> to help you write the method.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1109"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1110"><div class="" data-reactid="1111"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1112"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1113"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1114"><span class="fcn-task__number" data-reactid="1115"><!-- react-text: 1116 -->75<!-- /react-text --><!-- react-text: 1117 -->.<!-- /react-text --></span></div><div class="" data-reactid="1118"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1119"><p>Create a <strong>src/util</strong> directory and add a file called <strong>Spotify.js</strong></p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1120"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1121"><div class="" data-reactid="1122"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1123"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1124"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1125"><span class="fcn-task__number" data-reactid="1126"><!-- react-text: 1127 -->76<!-- /react-text --><!-- react-text: 1128 -->.<!-- /react-text --></span></div><div class="" data-reactid="1129"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1130"><p>In <strong>Spotify.js</strong> create a <code>Spotify</code> module as an empty object.</p>
<p>At the bottom of <strong>Spotify.js</strong> export <code>Spotify</code>.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1131"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1132"><div class="" data-reactid="1133"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1134"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1135"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1136"><span class="fcn-task__number" data-reactid="1137"><!-- react-text: 1138 -->77<!-- /react-text --><!-- react-text: 1139 -->.<!-- /react-text --></span></div><div class="" data-reactid="1140"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1141"><p>Above the empty object, declare an empty variable that will hold the user&#39;s access token.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1142"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1143"><div class="" data-reactid="1144"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1145"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1146"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1147"><span class="fcn-task__number" data-reactid="1148"><!-- react-text: 1149 -->78<!-- /react-text --><!-- react-text: 1150 -->.<!-- /react-text --></span></div><div class="" data-reactid="1151"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1152"><p>Inside the <code>Spotify</code> module, create a method called <code>getAccessToken</code>. </p>
<p>Check if the user&#39;s access token is already set. If it is, return the value saved to access token.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1153"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1154"><div class="" data-reactid="1155"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1156"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1157"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1158"><span class="fcn-task__number" data-reactid="1159"><!-- react-text: 1160 -->79<!-- /react-text --><!-- react-text: 1161 -->.<!-- /react-text --></span></div><div class="" data-reactid="1162"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1163"><p>If the access token is not already set, check the URL to see if it has just been obtained. </p>
<p>You will be using the <a href="https://developer.spotify.com/web-api/authorization-guide/#implicit_grant_flow" target="_blank">Implicit Grant Flow</a> to setup a user&#39;s account and make requests. The implicit grant flow returns a user&#39;s access token in the URL.</p>
<p>Use the guide to determine how to parse the URL and set values for your access token and expiration time. </p>
<p>Look at the hint if you help parsing the URL.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="1164"><span data-reactid="1165"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="1166"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="1167"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="1168"></span><!-- react-text: 1169 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="1170"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="1171"><p>In the implicit grant flow, values for the access token and expiration time are in the URL parameter after authentication. </p>
<p>Use <code>window.location.href</code> and the <code>.match()</code> method to retrieve the access token and expiration time from the URL.</p>
<p>Example URL from Spotify API:</p>
<pre><code><span wrap="true" class="_18cGopAuUQVCOplu8pL9b5 _12mn8XNbByNCYxyzndA6if _3xp4c3Gvny8Oap6jE2-Q_ _2RE0-ZG6UYzWFn9_EER397 undefined" data-reactroot="" data-reactid="1" data-react-checksum="2135150635"><div class="CodeMirror" data-reactid="2"><!-- react-text: 3 -->https://example.com/callback#access_token=NwAExz...BV3O2Tk<!-- /react-text --><span class="cm-error" data-reactid="4">&amp;token_type</span><!-- react-text: 5 -->=Bearer<!-- /react-text --><span class="cm-error" data-reactid="6">&amp;expires_in</span><!-- react-text: 7 -->=3600<!-- /react-text --><span class="cm-error" data-reactid="8">&amp;state</span><!-- react-text: 9 -->=123<!-- /react-text --></div></span>
</code></pre><p>Use the <code>.match()</code> method on the URL string. Provide the regular expressions below as inputs:</p>
<pre><code><span wrap="true" class="_18cGopAuUQVCOplu8pL9b5 _12mn8XNbByNCYxyzndA6if _3xp4c3Gvny8Oap6jE2-Q_ _2RE0-ZG6UYzWFn9_EER397 undefined" data-reactroot="" data-reactid="1" data-react-checksum="872395890"><div class="CodeMirror" data-reactid="2"><!-- react-text: 3 -->/access_token=([^<!-- /react-text --><span class="cm-error" data-reactid="4">&amp;</span><!-- react-text: 5 -->]*)/<!-- /react-text --><!-- react-text: 6 -->
<!-- /react-text --><!-- react-text: 7 -->/expires_in=([^<!-- /react-text --><span class="cm-error" data-reactid="8">&amp;</span><!-- react-text: 9 -->]*)/<!-- /react-text --></div></span>
</code></pre></div></div></article><article class="fit-full fcn-task" data-reactid="1172"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1173"><div class="" data-reactid="1174"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1175"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1176"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1177"><span class="fcn-task__number" data-reactid="1178"><!-- react-text: 1179 -->80<!-- /react-text --><!-- react-text: 1180 -->.<!-- /react-text --></span></div><div class="" data-reactid="1181"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1182"><p>If the access token and expiration time are in the URL, implement the following steps:</p>
<ul>
<li>Set the access token value</li>
<li>Set a variable for expiration time</li>
<li>Set the access token to expire at the value for expiration time</li>
<li>Clear the parameters from the URL, so the app doesn&#39;t try grabbing the access token after it has expired</li>
</ul>
<p>The hint below contains the code that wipes the access token and URL parameters.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="1183"><span data-reactid="1184"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="1185"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="1186"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="1187"></span><!-- react-text: 1188 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="1189"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="1190"><p>Use the following code to help you wipe the access token and URL parameters</p>
<pre><code class="lang-js"><span wrap="true" class="_18cGopAuUQVCOplu8pL9b5 _12mn8XNbByNCYxyzndA6if _3xp4c3Gvny8Oap6jE2-Q_ _2RE0-ZG6UYzWFn9_EER397 undefined" data-reactroot="" data-reactid="1" data-react-checksum="-1785752443"><div class="CodeMirror" data-reactid="2"><span class="cm-variable" data-reactid="3">window</span><!-- react-text: 4 -->.<!-- /react-text --><span class="cm-property" data-reactid="5">setTimeout</span><!-- react-text: 6 -->(<!-- /react-text --><!-- react-text: 7 -->(<!-- /react-text --><!-- react-text: 8 -->)<!-- /react-text --><!-- react-text: 9 --> <!-- /react-text --><span class="cm-operator" data-reactid="10">=&gt;</span><!-- react-text: 11 --> <!-- /react-text --><span class="cm-variable" data-reactid="12">accessToken</span><!-- react-text: 13 --> <!-- /react-text --><span class="cm-operator" data-reactid="14">=</span><!-- react-text: 15 --> <!-- /react-text --><span class="cm-string" data-reactid="16">&#x27;&#x27;</span><!-- react-text: 17 -->,<!-- /react-text --><!-- react-text: 18 --> <!-- /react-text --><span class="cm-variable" data-reactid="19">expiresIn</span><!-- react-text: 20 --> <!-- /react-text --><span class="cm-operator" data-reactid="21">*</span><!-- react-text: 22 --> <!-- /react-text --><span class="cm-number" data-reactid="23">1000</span><!-- react-text: 24 -->)<!-- /react-text --><!-- react-text: 25 -->;<!-- /react-text --><!-- react-text: 26 -->
<!-- /react-text --><span class="cm-variable" data-reactid="27">window</span><!-- react-text: 28 -->.<!-- /react-text --><span class="cm-property" data-reactid="29">history</span><!-- react-text: 30 -->.<!-- /react-text --><span class="cm-property" data-reactid="31">pushState</span><!-- react-text: 32 -->(<!-- /react-text --><span class="cm-string" data-reactid="33">&#x27;Access Token&#x27;</span><!-- react-text: 34 -->,<!-- /react-text --><!-- react-text: 35 --> <!-- /react-text --><span class="cm-atom" data-reactid="36">null</span><!-- react-text: 37 -->,<!-- /react-text --><!-- react-text: 38 --> <!-- /react-text --><span class="cm-string" data-reactid="39">&#x27;/&#x27;</span><!-- react-text: 40 -->)<!-- /react-text --><!-- react-text: 41 -->;<!-- /react-text --></div></span>
</code></pre>
</div></div></article><article class="fit-full fcn-task" data-reactid="1191"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1192"><div class="" data-reactid="1193"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1194"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1195"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1196"><span class="fcn-task__number" data-reactid="1197"><!-- react-text: 1198 -->81<!-- /react-text --><!-- react-text: 1199 -->.<!-- /react-text --></span></div><div class="" data-reactid="1200"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1201"><p>The third condition is that the access token variable is empty and is not in the URL. </p>
<p>Before you write this conditional code block, you need to register your application using the <a href="https://developer.spotify.com/my-applications/#!/applications" target="_blank">Spotify application registration flow</a>.</p>
<p>Give your application a relevant name and description. Also, add the following Redirect URI: </p>
<pre><code><span wrap="true" class="_18cGopAuUQVCOplu8pL9b5 _12mn8XNbByNCYxyzndA6if _3xp4c3Gvny8Oap6jE2-Q_ _2RE0-ZG6UYzWFn9_EER397 undefined" data-reactroot="" data-reactid="1" data-react-checksum="-345941062"><div class="CodeMirror" data-reactid="2"><!-- react-text: 3 -->http://localhost:3000/<!-- /react-text --></div></span>
</code></pre></div></div></div></article><article class="fit-full fcn-task" data-reactid="1202"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1203"><div class="" data-reactid="1204"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1205"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1206"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1207"><span class="fcn-task__number" data-reactid="1208"><!-- react-text: 1209 -->82<!-- /react-text --><!-- react-text: 1210 -->.<!-- /react-text --></span></div><div class="" data-reactid="1211"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1212"><p>At the top of <strong>Spotify.js</strong> create constant variables for your application&#39;s client ID and redirect URI. </p>
<p>Set the client ID variable to the value provided on your application page.</p>
<p>Set the redirect URI to <code>&quot;http://localhost:3000/&quot;</code>. </p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1213"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1214"><div class="" data-reactid="1215"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1216"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1217"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1218"><span class="fcn-task__number" data-reactid="1219"><!-- react-text: 1220 -->83<!-- /react-text --><!-- react-text: 1221 -->.<!-- /react-text --></span></div><div class="" data-reactid="1222"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1223"><p>Back in your conditional statement, redirect users to the following URL:</p>
<pre><code><span wrap="true" class="_18cGopAuUQVCOplu8pL9b5 _12mn8XNbByNCYxyzndA6if _3xp4c3Gvny8Oap6jE2-Q_ _2RE0-ZG6UYzWFn9_EER397 undefined" data-reactroot="" data-reactid="1" data-react-checksum="-40378834"><div class="CodeMirror" data-reactid="2"><!-- react-text: 3 -->https://accounts.spotify.com/authorize?client_id=CLIENT_ID<!-- /react-text --><span class="cm-error" data-reactid="4">&amp;response_type</span><!-- react-text: 5 -->=token<!-- /react-text --><span class="cm-error" data-reactid="6">&amp;scope</span><!-- react-text: 7 -->=playlist-modify-public<!-- /react-text --><span class="cm-error" data-reactid="8">&amp;redirect_uri</span><!-- react-text: 9 -->=REDIRECT_URI<!-- /react-text --></div></span>
</code></pre><p>Interpolate your client ID and redirect URI variables In place of <code>CLIENT_ID</code> and <code>REDIRECT_URI</code>.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="1224"><span data-reactid="1225"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="1226"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="1227"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="1228"></span><!-- react-text: 1229 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="1230"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="1231"><p>To redirect a user, you must set <code>window.location</code> to the URL in the task above.</p>
</div></div></article></div><article class="fit-full fcn-task-header" data-reactid="1232">Implement Spotify Search Request</article><div data-reactid="1233"><article class="fit-full fcn-task" data-reactid="1234"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1235"><div class="" data-reactid="1236"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1237"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1238"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1239"><span class="fcn-task__number" data-reactid="1240"><!-- react-text: 1241 -->84<!-- /react-text --><!-- react-text: 1242 -->.<!-- /react-text --></span></div><div class="" data-reactid="1243"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1244"><p>In this assessment, you will create a method in <strong>Spotify.js</strong> that accepts a search term input, passes the search term value to a Spotify request, then returns the response as a list of tracks in JSON format.</p>
<p>You will need the user&#39;s access token to make requests to the Spotify API. You will use the request parameters in step four of the <a href="https://developer.spotify.com/web-api/authorization-guide/#implicit_grant_flow" target="_blank">implicit grant flow</a> to make requests. In the following steps, we will use <code>fetch()</code> to make our requests, but any method will work.</p>
<p>You should use the <code>/v1/search?type=TRACK</code> endpoint when making your request. Use the <a href="https://developer.spotify.com/web-api/endpoint-reference/" target="_blank">Spofity Web API Endpoint Reference</a> to help format your request.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1245"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1246"><div class="" data-reactid="1247"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1248"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1249"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1250"><span class="fcn-task__number" data-reactid="1251"><!-- react-text: 1252 -->85<!-- /react-text --><!-- react-text: 1253 -->.<!-- /react-text --></span></div><div class="" data-reactid="1254"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1255"><p>In the <code>Spotify</code> object, add a method called <code>search</code> that accepts a parameter for the user&#39;s search term.</p>
<p><code>.search()</code> returns a promise that will eventually resolve to the list of tracks from the search.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1256"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1257"><div class="" data-reactid="1258"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1259"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1260"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1261"><span class="fcn-task__number" data-reactid="1262"><!-- react-text: 1263 -->86<!-- /react-text --><!-- react-text: 1264 -->.<!-- /react-text --></span></div><div class="" data-reactid="1265"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1266"><p>Inside <code>.search()</code>, start the promise chain by returning a GET request (using <code>fetch()</code>) to the following Spotify endpoint:</p>
<pre><code><span wrap="true" class="_18cGopAuUQVCOplu8pL9b5 _12mn8XNbByNCYxyzndA6if _3xp4c3Gvny8Oap6jE2-Q_ _2RE0-ZG6UYzWFn9_EER397 undefined" data-reactroot="" data-reactid="1" data-react-checksum="1604224041"><div class="CodeMirror" data-reactid="2"><!-- react-text: 3 -->https://api.spotify.com/v1/search?type=track<!-- /react-text --><span class="cm-error" data-reactid="4">&amp;q</span><!-- react-text: 5 -->=TERM<!-- /react-text --></div></span>
</code></pre><p>Replace the value of  <code>TERM</code> with the value saved to the search term argument.</p>
<p>Add an Authorization header to the request containing the access token.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="1267"><span data-reactid="1268"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="1269"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="1270"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="1271"></span><!-- react-text: 1272 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="1273"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="1274"><p>You will need to pass a second argument to the <code>fetch</code> method. The second argument is an object with one field called <code>headers</code>. Set <code>headers</code> to an object with one <code>Authorization</code> property with the user&#39;s access token. Use the format in step four of the <a href="https://developer.spotify.com/web-api/authorization-guide/#implicit_grant_flow" target="_blank">implicit grant flow</a>.</p>
<p>Pass the following object as the second fetch parameter:</p>
<pre><code class="lang-js"><span wrap="true" class="_18cGopAuUQVCOplu8pL9b5 _12mn8XNbByNCYxyzndA6if _3xp4c3Gvny8Oap6jE2-Q_ _2RE0-ZG6UYzWFn9_EER397 undefined" data-reactroot="" data-reactid="1" data-react-checksum="1710048775"><div class="CodeMirror" data-reactid="2"><!-- react-text: 3 -->{<!-- /react-text --><!-- react-text: 4 -->
<!-- /react-text --><!-- react-text: 5 -->  <!-- /react-text --><span class="cm-variable" data-reactid="6">headers</span><!-- react-text: 7 -->:<!-- /react-text --><!-- react-text: 8 --> <!-- /react-text --><!-- react-text: 9 -->{<!-- /react-text --><span class="cm-variable" data-reactid="10">Authorization</span><!-- react-text: 11 -->:<!-- /react-text --><!-- react-text: 12 --> <!-- /react-text --><span class="cm-string-2" data-reactid="13">`Bearer ${</span><span class="cm-variable" data-reactid="14">accessToken</span><span class="cm-string-2" data-reactid="15">}</span><span class="cm-string-2" data-reactid="16">`</span><!-- react-text: 17 -->}<!-- /react-text --><!-- react-text: 18 -->
<!-- /react-text --><!-- react-text: 19 -->}<!-- /react-text --></div></span>
</code></pre>
</div></div></article><article class="fit-full fcn-task" data-reactid="1275"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1276"><div class="" data-reactid="1277"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1278"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1279"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1280"><span class="fcn-task__number" data-reactid="1281"><!-- react-text: 1282 -->87<!-- /react-text --><!-- react-text: 1283 -->.<!-- /react-text --></span></div><div class="" data-reactid="1284"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1285"><p>Convert the returned response to JSON. </p>
<p>Then, map the converted JSON to an array of tracks. If the JSON does not contain any tracks, return an empty array.</p>
<p>The mapped array should contain a list of track objects with the following properties:</p>
<ul>
<li>ID &mdash; returned as <code>track.id</code></li>
<li>Name &mdash; returned as <code>track.name</code></li>
<li>Artist &mdash; returned as <code>track.artists[0].name</code></li>
<li>Album &mdash; returned as <code>track.album.name</code></li>
<li>URI &mdash; returned as <code>track.uri</code></li>
</ul>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1286"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1287"><div class="" data-reactid="1288"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1289"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1290"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1291"><span class="fcn-task__number" data-reactid="1292"><!-- react-text: 1293 -->88<!-- /react-text --><!-- react-text: 1294 -->.<!-- /react-text --></span></div><div class="" data-reactid="1295"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1296"><p>In <strong>App.js</strong>, import <code>Spotify</code> and update the <code>.search()</code> method with the <code>Spotify.search()</code> method.</p>
<p>Update the state of <code>searchResults</code> with the value resolved from <code>Spotify.search()</code>&#39;s promise.</p>
</div></div></div></article></div><article class="fit-full fcn-task-header" data-reactid="1297">Save a User&#x27;s Playlist</article><div data-reactid="1298"><article class="fit-full fcn-task" data-reactid="1299"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1300"><div class="" data-reactid="1301"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1302"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1303"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1304"><span class="fcn-task__number" data-reactid="1305"><!-- react-text: 1306 -->89<!-- /react-text --><!-- react-text: 1307 -->.<!-- /react-text --></span></div><div class="" data-reactid="1308"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1309"><p>In this assessment, you will create a method called <code>savePlaylist</code> that writes the learner&#39;s custom playlist in Jammming to their Spotify account. </p>
<p>The <code>.savePlaylist()</code> method accepts a playlist name and an array of track URIs. It makes the following three requests to the Spotify API:</p>
<ul>
<li>GET current user&#39;s ID</li>
<li>POST a new playlist with the input name to the current user&#39;s Spotify account. Receive the playlist ID back from the request.</li>
<li>POST the track URIs to the newly-created playlist, referencing the current user&#39;s account (ID) and the new playlist (ID)</li>
</ul>
<p>You will update the <code>.savePlaylist()</code> method in <strong>App.js</strong> to use the new <code>Spotify.savePlaylist()</code> method.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1310"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1311"><div class="" data-reactid="1312"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1313"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1314"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1315"><span class="fcn-task__number" data-reactid="1316"><!-- react-text: 1317 -->90<!-- /react-text --><!-- react-text: 1318 -->.<!-- /react-text --></span></div><div class="" data-reactid="1319"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1320"><p>Create a method in <strong>Spotify.js</strong> that accepts two arguments. The first argument is the name of the playlist. The second is an array of track URIs.</p>
<p>Inside the function, check if there are values saved to the method&#39;s two arguments. If not, return.</p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1321"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1322"><div class="" data-reactid="1323"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1324"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1325"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1326"><span class="fcn-task__number" data-reactid="1327"><!-- react-text: 1328 -->91<!-- /react-text --><!-- react-text: 1329 -->.<!-- /react-text --></span></div><div class="" data-reactid="1330"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1331"><p>Create three default variables:</p>
<ul>
<li>An access token variable, set to the current user&#39;s access token</li>
<li>A headers variable, set to an object with an <code>Authorization</code> parameter containing the user&#39;s access token in the <a href="https://developer.spotify.com/web-api/authorization-guide/#implicit_grant_flow" target="_blank">implicit grant flow request format</a></li>
<li>An empty variable for the user&#39;s ID</li>
</ul>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1332"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1333"><div class="" data-reactid="1334"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1335"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1336"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1337"><span class="fcn-task__number" data-reactid="1338"><!-- react-text: 1339 -->92<!-- /react-text --><!-- react-text: 1340 -->.<!-- /react-text --></span></div><div class="" data-reactid="1341"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1342"><p>Make a request that returns the user&#39;s Spotify username. </p>
<p>Convert the response to JSON and save the response <code>id</code> parameter to the user&#39;s ID variable.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="1343"><span data-reactid="1344"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="1345"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="1346"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="1347"></span><!-- react-text: 1348 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="1349"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="1350"><p>Make the request to the following Spotify endpoint:</p>
<pre><code><span wrap="true" class="_18cGopAuUQVCOplu8pL9b5 _12mn8XNbByNCYxyzndA6if _3xp4c3Gvny8Oap6jE2-Q_ _2RE0-ZG6UYzWFn9_EER397 undefined" data-reactroot="" data-reactid="1" data-react-checksum="-1538629902"><div class="CodeMirror" data-reactid="2"><!-- react-text: 3 -->https://api.spotify.com/v1/me<!-- /react-text --></div></span>
</code></pre><p>You must pass a second argument with an object containing the <code>headers</code> object. See below</p>
<pre><code class="lang-js"><span wrap="true" class="_18cGopAuUQVCOplu8pL9b5 _12mn8XNbByNCYxyzndA6if _3xp4c3Gvny8Oap6jE2-Q_ _2RE0-ZG6UYzWFn9_EER397 undefined" data-reactroot="" data-reactid="1" data-react-checksum="-820666102"><div class="CodeMirror" data-reactid="2"><!-- react-text: 3 -->{<!-- /react-text --><span class="cm-variable" data-reactid="4">headers</span><!-- react-text: 5 -->:<!-- /react-text --><!-- react-text: 6 --> <!-- /react-text --><span class="cm-variable" data-reactid="7">headers</span><!-- react-text: 8 -->}<!-- /react-text --></div></span>
</code></pre>
</div></div></article><article class="fit-full fcn-task" data-reactid="1351"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1352"><div class="" data-reactid="1353"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1354"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1355"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1356"><span class="fcn-task__number" data-reactid="1357"><!-- react-text: 1358 -->93<!-- /react-text --><!-- react-text: 1359 -->.<!-- /react-text --></span></div><div class="" data-reactid="1360"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1361"><p>Use the returned user ID to make a POST request that creates a new playlist in the user&#39;s account and returns a playlist ID.</p>
<p>Use the <a href="https://developer.spotify.com/web-api/playlist-endpoints/" target="_blank">Spotify playlist endpoints</a> to find a request that creates a new playlist.</p>
<p>Set the playlist name to the value passed into the method.</p>
<p>Convert the response to JSON and save the response <code>id</code> parameter to a variable called <code>playlistID</code>.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="1362"><span data-reactid="1363"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="1364"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="1365"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="1366"></span><!-- react-text: 1367 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="1368"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="1369"><p>Make a request to the following Spotify endpoint:</p>
<pre><code><span wrap="true" class="_18cGopAuUQVCOplu8pL9b5 _12mn8XNbByNCYxyzndA6if _3xp4c3Gvny8Oap6jE2-Q_ _2RE0-ZG6UYzWFn9_EER397 undefined" data-reactroot="" data-reactid="1" data-react-checksum="-1058381878"><div class="CodeMirror" data-reactid="2"><!-- react-text: 3 -->/v1/users/{user_id}/playlists<!-- /react-text --></div></span>
</code></pre><p>You must pass a second argument that contains an object with parameters for <code>headers</code>, <code>method</code>, and <code>body</code>.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="1370"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1371"><div class="" data-reactid="1372"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1373"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1374"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1375"><span class="fcn-task__number" data-reactid="1376"><!-- react-text: 1377 -->94<!-- /react-text --><!-- react-text: 1378 -->.<!-- /react-text --></span></div><div class="" data-reactid="1379"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1380"><p>Use the returned user ID to make a POST request that creates a new playlist in the user&#39;s account and returns a playlist ID.</p>
<p>Use the <a href="https://developer.spotify.com/web-api/playlist-endpoints/" target="_blank">Spotify playlist endpoints</a> to find a request that adds tracks to a playlist.</p>
<p>Set the URIs parameter to an array of track URIs passed into the method.</p>
<p>Convert the response to JSON and save the response <code>id</code> parameter to a variable called <code>playlistID</code>.</p>
</div></div></div><div class="AyqmKi4sS-Naa4Z_LZ2lD" data-reactid="1381"><span data-reactid="1382"><div class="Xh9YLDOs0_82oLjvTw1aK" data-reactid="1383"><span class="_1J34xs3ardlDnrPq0cejMW" data-reactid="1384"><span class="fcn-icon fcn-icon-supportFilled IRXfBgv99SV3QY1p4ETRi" data-reactid="1385"></span><!-- react-text: 1386 -->Stuck? Get a hint<!-- /react-text --></span><span class="fcn-icon fcn-icon-arrowDropdown SSPzrPsCMOeRiGHxKlyOl" data-reactid="1387"></span></div></span><div class="jfdpfOzslotw2euWgxJNN _2a3xbzTMaEb4NzgGc3gWsm" data-reactid="1388"><p>Make a request to the following Spotify endpoint:</p>
<pre><code><span wrap="true" class="_18cGopAuUQVCOplu8pL9b5 _12mn8XNbByNCYxyzndA6if _3xp4c3Gvny8Oap6jE2-Q_ _2RE0-ZG6UYzWFn9_EER397 undefined" data-reactroot="" data-reactid="1" data-react-checksum="1057384518"><div class="CodeMirror" data-reactid="2"><!-- react-text: 3 -->/v1/users/{user_id}/playlists/{playlist_id}/tracks<!-- /react-text --></div></span>
</code></pre><p>You must pass a second argument that contains an object with parameters for <code>headers</code>, <code>method</code>, and <code>body</code>.</p>
</div></div></article><article class="fit-full fcn-task" data-reactid="1389"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1390"><div class="" data-reactid="1391"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1392"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1393"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1394"><span class="fcn-task__number" data-reactid="1395"><!-- react-text: 1396 -->95<!-- /react-text --><!-- react-text: 1397 -->.<!-- /react-text --></span></div><div class="" data-reactid="1398"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1399"><p>In <strong>App.js</strong> update the <code>.savePlaylist()</code> method to call <code>Spotify.savePlaylist()</code>.</p>
<p>After you call <code>Spotify.savePlaylist()</code>, reset the state of <code>playlistName</code> to <code>&#39;New Playlist&#39;</code> and <code>searchResults</code> to an empty array.</p>
</div></div></div></article></div><article class="fit-full fcn-task-header" data-reactid="1400">Deploy (Optional)</article><div data-reactid="1401"><article class="fit-full fcn-task" data-reactid="1402"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1403"><div class="" data-reactid="1404"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1405"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1406"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1407"><span class="fcn-task__number" data-reactid="1408"><!-- react-text: 1409 -->96<!-- /react-text --><!-- react-text: 1410 -->.<!-- /react-text --></span></div><div class="" data-reactid="1411"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1412"><p>In this assessment, you will use <a href="https://surge.sh/" target="_blank">surge</a> to deploy your Jammming project.</p>
<p>You will start by installing surge globally.  </p>
<p>In your console, run <code>npm install --global surge</code>. </p>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1413"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1414"><div class="" data-reactid="1415"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1416"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1417"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1418"><span class="fcn-task__number" data-reactid="1419"><!-- react-text: 1420 -->97<!-- /react-text --><!-- react-text: 1421 -->.<!-- /react-text --></span></div><div class="" data-reactid="1422"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1423"><p>Before you deploy, you need to think of a domain name with the following format:</p>
<pre><code><span wrap="true" class="_18cGopAuUQVCOplu8pL9b5 _12mn8XNbByNCYxyzndA6if _3xp4c3Gvny8Oap6jE2-Q_ _2RE0-ZG6UYzWFn9_EER397 undefined" data-reactroot="" data-reactid="1" data-react-checksum="1947884158"><div class="CodeMirror" data-reactid="2"><!-- react-text: 3 -->SOME_NAME.surge.sh<!-- /react-text --></div></span>
</code></pre><p><code>SOME_NAME</code> can be replaced with anything you like. </p>
<p>Next, you need to replace or add this URI to two locations in your project.</p>
<ul>
<li>In <em>*Spotify.js</em>, set <code>redirectUri</code> to your new domain</li>
<li>In your <a href="https://developer.spotify.com/my-applications/#!/applications" target="_blank">Spotify application</a>, add your new domain as a redirect URI</li>
</ul>
</div></div></div></article><article class="fit-full fcn-task" data-reactid="1424"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1425"><div class="" data-reactid="1426"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1427"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1428"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1429"><span class="fcn-task__number" data-reactid="1430"><!-- react-text: 1431 -->98<!-- /react-text --><!-- react-text: 1432 -->.<!-- /react-text --></span></div><div class="" data-reactid="1433"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1434"><p>Back in the command line, from the Jammming project&#39;s root directory, run:</p>
<pre><code><span wrap="true" class="_18cGopAuUQVCOplu8pL9b5 _12mn8XNbByNCYxyzndA6if _3xp4c3Gvny8Oap6jE2-Q_ _2RE0-ZG6UYzWFn9_EER397 undefined" data-reactroot="" data-reactid="1" data-react-checksum="1743935905"><div class="CodeMirror" data-reactid="2"><!-- react-text: 3 -->$ npm run build<!-- /react-text --></div></span>
</code></pre></div></div></div></article><article class="fit-full fcn-task" data-reactid="1435"><div class="_1XRkeRcO7hh1axYhmKiQMM _1dmJmZRxtQ_cerCkOiTppp" data-reactid="1436"><div class="" data-reactid="1437"><div data-cue="discovery-checklist" class="fcn-task__check" data-reactid="1438"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid="1439"></span></div></div><div class="_1qFuXzL1xvAmfePABMvq7c" data-reactid="1440"><span class="fcn-task__number" data-reactid="1441"><!-- react-text: 1442 -->99<!-- /react-text --><!-- react-text: 1443 -->.<!-- /react-text --></span></div><div class="" data-reactid="1444"><div class="jfdpfOzslotw2euWgxJNN" data-reactid="1445"><p><code>cd</code> into the <code>build</code> directory and run the command </p>
<pre><code><span wrap="true" class="_18cGopAuUQVCOplu8pL9b5 _12mn8XNbByNCYxyzndA6if _3xp4c3Gvny8Oap6jE2-Q_ _2RE0-ZG6UYzWFn9_EER397 undefined" data-reactroot="" data-reactid="1" data-react-checksum="-1701226793"><div class="CodeMirror" data-reactid="2"><!-- react-text: 3 -->$ surge<!-- /react-text --></div></span>
</code></pre><p>Follow the steps on the screen. Change the domain value to your new URI.</p>
<p>Congrats! You&#39;ve just deployed a React App that queries the Spotify API!</p>
</div></div></div></article></div></div></div></div><div class="accordion-section" data-reactid="1446"><div data-index="2" class="accordion-section-heading" data-reactid="1447"><div class="_1XRkeRcO7hh1axYhmKiQMM _39K0C3ph1hpmLw6tsBfNnG support-header" data-reactid="1448"><i class="_3QwoyZ-5nUFRrbC-LsvaCS _2d4F_uhsoeUW39e5KLQ7A_ _-28pXLJ13HOUfP_2pXrEi" name="support" data-reactid="1449"></i><!-- react-text: 1450 -->Report a Bug<!-- /react-text --></div></div><div class="accordion-section-body" data-reactid="1451"><div class="accordion-section-body__no-bg accordion-section-body__padded _1OKgxa6eFiKV7bZx2Cpyve" data-reactid="1452"><span data-reactid="1453"><div class="VaiJa78yYYnolwnIsOcUV" data-reactid="1454"><!-- react-text: 1455 -->If you see a bug or any other issue with this page, please report it <!-- /react-text --><a class="_2gPEYd35kAAQ2razCHgCKk" href="#" data-reactid="1456">here</a><!-- react-text: 1457 -->.<!-- /react-text --></div></span></div></div></div></div></div><div class="sticky-bottom" data-reactid="1458"><div class="accordion-section-heading invisible" data-index="0" data-reactid="1459"><div class="_1XRkeRcO7hh1axYhmKiQMM _39K0C3ph1hpmLw6tsBfNnG learn-header" data-reactid="1460"><i class="_3QwoyZ-5nUFRrbC-LsvaCS _23HcEzglQeRle46-UTPbAF _-28pXLJ13HOUfP_2pXrEi" name="objective" data-reactid="1461"></i><!-- react-text: 1462 -->Objective<!-- /react-text --></div></div><div class="accordion-section-heading invisible" data-index="1" data-reactid="1463"><div class="_1XRkeRcO7hh1axYhmKiQMM _39K0C3ph1hpmLw6tsBfNnG fcn-task-section__header" data-reactid="1464"><i class="_3QwoyZ-5nUFRrbC-LsvaCS _2jyOQuyyXLbnU5qEkBUx8S _-28pXLJ13HOUfP_2pXrEi" name="instructions" data-reactid="1465"></i><!-- react-text: 1466 -->Tasks<!-- /react-text --><div class="fcn-task-counter" data-reactid="1467"><span class="fcn-task-counter__count" style="margin-right:3px;" data-reactid="1468"><!-- react-text: 1469 -->0<!-- /react-text --><!-- react-text: 1470 -->/<!-- /react-text --><!-- react-text: 1471 -->99<!-- /react-text --></span><!-- react-text: 1472 -->Complete<!-- /react-text --></div></div></div><div class="accordion-section-heading invisible" data-index="2" data-reactid="1473"><div class="_1XRkeRcO7hh1axYhmKiQMM _39K0C3ph1hpmLw6tsBfNnG support-header" data-reactid="1474"><i class="_3QwoyZ-5nUFRrbC-LsvaCS _2d4F_uhsoeUW39e5KLQ7A_ _-28pXLJ13HOUfP_2pXrEi" name="support" data-reactid="1475"></i><!-- react-text: 1476 -->Report a Bug<!-- /react-text --></div></div></div><div class="sticky-top" data-reactid="1477"><div class="accordion-section-heading invisible" data-index="0" data-reactid="1478"><div class="_1XRkeRcO7hh1axYhmKiQMM _39K0C3ph1hpmLw6tsBfNnG learn-header" data-reactid="1479"><i class="_3QwoyZ-5nUFRrbC-LsvaCS _23HcEzglQeRle46-UTPbAF _-28pXLJ13HOUfP_2pXrEi" name="objective" data-reactid="1480"></i><!-- react-text: 1481 -->Objective<!-- /react-text --></div></div><div class="accordion-section-heading invisible" data-index="1" data-reactid="1482"><div class="_1XRkeRcO7hh1axYhmKiQMM _39K0C3ph1hpmLw6tsBfNnG fcn-task-section__header" data-reactid="1483"><i class="_3QwoyZ-5nUFRrbC-LsvaCS _2jyOQuyyXLbnU5qEkBUx8S _-28pXLJ13HOUfP_2pXrEi" name="instructions" data-reactid="1484"></i><!-- react-text: 1485 -->Tasks<!-- /react-text --><div class="fcn-task-counter" data-reactid="1486"><span class="fcn-task-counter__count" style="margin-right:3px;" data-reactid="1487"><!-- react-text: 1488 -->0<!-- /react-text --><!-- react-text: 1489 -->/<!-- /react-text --><!-- react-text: 1490 -->99<!-- /react-text --></span><!-- react-text: 1491 -->Complete<!-- /react-text --></div></div></div><div class="accordion-section-heading invisible" data-index="2" data-reactid="1492"><div class="_1XRkeRcO7hh1axYhmKiQMM _39K0C3ph1hpmLw6tsBfNnG support-header" data-reactid="1493"><i class="_3QwoyZ-5nUFRrbC-LsvaCS _2d4F_uhsoeUW39e5KLQ7A_ _-28pXLJ13HOUfP_2pXrEi" name="support" data-reactid="1494"></i><!-- react-text: 1495 -->Report a Bug<!-- /react-text --></div></div></div></div></div></div></div><nav title="Jammming" class="y7tvmmg7fKu4JpdaYECtN uLjMYUmq7NHQCvtXjbgKs _3bR5y3xpD2FPv1oUg-7n_p" data-reactid="1496"><section class="_2zSA2d9oAw82vmGaiCI6HM vE2U5Z1_1p0OevhTkRrpb" data-reactid="1497"><div class="_3bI54mnYg5essxyEwnBsko" data-reactid="1498"><a href="#" title="Jammming" class="sQnqIKjyMIkRzU8m4doIc" data-reactid="1499"><span class="_3m2VRSnyzwTJFQ2lQGREuS" data-reactid="1500"></span><span data-cue="course-navigator" class="_3oO95TdRvdS0utiixuV0t3" data-reactid="1501">Jammming</span></a></div></section><section class="_2zSA2d9oAw82vmGaiCI6HM AcoUR5q2eKWoCC4M_4RZD" data-reactid="1502"><div class="fcn-project-footer" data-reactid="1503"><div class="fcn-task-counter" data-reactid="1504"><span class="fcn-task-counter__count" style="margin-right:3px;" data-reactid="1505"><!-- react-text: 1506 -->0<!-- /react-text --><!-- react-text: 1507 -->/<!-- /react-text --><!-- react-text: 1508 -->99<!-- /react-text --></span><!-- react-text: 1509 -->Complete<!-- /react-text --></div><button class="fcn-button fcn-button--everyday fcn-button--inactive" data-reactid="1510">Up Next</button></div></section><section class="_2zSA2d9oAw82vmGaiCI6HM _1KKDVD6unnpNtKqV9PPUQP" data-reactid="1511"><button class="fcn-button fcn-button--everyday" data-reactid="1512"><!-- react-text: 1513 -->Get Help<!-- /react-text --><!-- react-empty: 1514 --></button></section><!-- react-empty: 1515 --></nav></div><!-- react-empty: 1516 --></section></div>



      





    

    
<script id="I18N" type="text/javascript">
//<![CDATA[

  var I18n = (window.I18n || {});
  I18n.defaultLocale = "en";
  I18n.fallbacks = true;
  I18n.locale = "en";
  I18n.missingTranslationPrefix = '';
    I18n.missingBehaviour = 'guess';

//]]>
</script><script src="https://production.cdmycdn.com/assets/i18n/locale-en-5de0356959067936cf8041aaec4cbb68.js" type="text/javascript"></script>

        <script src="//production.cdmycdn.com/webpack/vendor-5e99776cdbd659614084.js" type="text/javascript"></script>
    <script src="//production.cdmycdn.com/webpack/platform-5e99776cdbd659614084.js" type="text/javascript"></script>
    <!-- Google Adwords Scripts -->
    <script type="text/javascript" src="//www.googleadservices.com/pagead/conversion_async.js" charset="utf-8"></script>
    <noscript>
      <div style="display:inline;">
        <img height="1" width="1" style="border-style:none;" alt="" src="//googleads.g.doubleclick.net/pagead/viewthroughconversion/861461659/?guid=ON&amp;script=0"/>
      </div>
    </noscript>
    <!-- End Google Adwords Scripts -->

  </body>
</html>
